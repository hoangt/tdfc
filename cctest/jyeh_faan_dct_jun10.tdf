//////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 1999 The Regents of the University of California 
// Permission to use, copy, modify, and distribute this software and
// its documentation for any purpose, without fee, and without a
// written agreement is hereby granted, provided that the above copyright 
// notice and this paragraph and the following two paragraphs appear in
// all copies. 
//
// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
// DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
// LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
// EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. 
//
// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON
// AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO
// PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. 
//
// $Revision: 1.1 $
// $Date: 1999/07/23 00:51:35 $
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Forward Arai-Agui-Nakajima implementation of DCT
// interesting to see how this would be split up into different
// operators

jyeh_faan_dct_jun10(param unsigned[8] inWidth, param unsigned[8] outWidth, 
     input signed[inWidth] a0, input signed[inWidth] a1,
     input signed[inWidth] a2, input signed[inWidth] a3,
     input signed[inWidth] a4, input signed[inWidth] a5,
     input signed[inWidth] a6, input signed[inWidth] a7,
     output signed[outWidth] b0, output signed[outWidth] b1,
     output signed[outWidth] b2, output signed[outWidth] b3,
     output signed[outWidth] b4, output signed[outWidth] b5,
     output signed[outWidth] b6, output signed[outWidth] b7)
     
{
  
  unsigned[20] count = 0;
  signed[8] FIX038 = 98;
  signed[9] FIX054 = 139;
  signed[9] FIX070 = 181;
  signed[10] FIX131 = 334;
  signed[inWidth+3] tmp0; signed[inWidth+3] tmp1;
  signed[inWidth+12] tmp2; signed[inWidth+13] tmp3;
  signed[inWidth+1] tmp4; signed[inWidth+1] tmp5;
  signed[inWidth+1] tmp6; signed[inWidth+1] tmp7;
  signed[inWidth+2] tmp10; signed[inWidth+2] tmp11;
  signed[inWidth+2] tmp12; signed[inWidth+2] tmp13;
  signed[inWidth+2] tmp20; signed[inWidth+2] tmp21;
  signed[inWidth+2] tmp22; 

  signed[inWidth+13] z1; signed[inWidth+13] z2;
  signed[inWidth+12] z3; signed[inWidth+14] z4;
  signed[inWidth+12] z5;

  signed[inWidth+13] z11;  signed[inWidth+13] z13;

  state start(a0,a1,a2,a3,a4,a5,a6,a7):
    {	  
	tmp0 = a0 + a7; tmp7 = a0 - a7;
	tmp1 = a1 + a6;	tmp6 = a1 - a6;
	tmp2 = a2 + a5;	tmp5 = a2 - a5;
	tmp3 = a3 + a4;	tmp4 = a3 - a4;
	goto statea;
    }

  state statea():
    {
	tmp10 = tmp0 + tmp3;	tmp13 = tmp0 - tmp3;
	tmp11 = tmp1 + tmp2;	tmp12 = tmp1 - tmp2;
	tmp20 = tmp4 + tmp5;    tmp21 = tmp5 + tmp6;
	tmp22 = tmp6 + tmp7;
	goto stateb;
    }
  
  state stateb():
    {
	b0 = tmp10 + tmp11;     b4 = tmp10 - tmp11;
	tmp0 = tmp12+tmp13; // to become z1
	tmp1 = tmp10-tmp12; // to become z5
	goto multall;
    }

  state multall():
    {
	z1 = tmp0*FIX070;
	z5 = tmp1*FIX038;
	tmp2 = tmp10*FIX054; // to become z2
	tmp3 = tmp12*FIX131; // to become z4
	z3 = tmp11*FIX070;
	goto statec;
    }

  state statec():
    {
	b2 = tmp13+z1; b6 = tmp13-z1;
	z11 = tmp7 + z3; z13 = tmp7 - z3;
	z2 = tmp2 + z5; z4 = tmp3 + z5;
	goto stated;
    }

  state stated():
    {
	b5 = z13+z2; b3 = z13-z2;
	b1 = z11+z4; b7 = z11-z4;                                                     
	goto start;
    }
 
}





