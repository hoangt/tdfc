Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 @1: /* empty */

    7 operator: type_opt opSignature @1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | FLOAT
   12     | DOUBLE
   13     | BOOLEAN arraySize
   14     | sizedType '[' expr ']'
   15     | sizedType arraySize '[' expr ']'

   16 sizedType: SIGNED
   17          | UNSIGNED

   18 arraySize: '[' expr ']'

   19 opSignature: ID_ '(' ioDecls_opt ')'

   20 ioDecls_opt: ioDecls
   21            | /* empty */

   22 ioDecls: ioDecls ',' ioDecl
   23        | ioDecl

   24 ioDecl: ioKind type ID_

   25 ioKind: INPUT
   26       | OUTPUT
   27       | PARAM

   28 exception_opt: exception
   29              | /* empty */

   30 exception: PASS_THROUGH_EXCEPTION

   31 @2: /* empty */

   32 operatorBody: '{' typeDecls_opt @2 states '}'

   33 @3: /* empty */

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt '}'

   36 typeDecls_opt: typeDecls
   37              | /* empty */

   38 typeDecls: typeDecls typeDecl

   39 @4: /* empty */

   40 typeDecls: @4 typeDecl

   41 typeDecl: type typeDeclElems ';'
   42         | ';'

   43 typeDeclElems: typeDeclElem
   44              | typeDeclElems ',' typeDeclElem

   45 typeDeclElem: ID_

   46 @5: /* empty */

   47 typeDeclElem: ID_ @5 '=' expr

   48 @6: /* empty */

   49 typeDeclElem: ID_ @6 '(' expr ')'

   50 callsOrAssigns: callsOrAssigns callOrAssign
   51               | callOrAssign_nonEmpty

   52 callOrAssign: callOrAssign_nonEmpty
   53             | ';'

   54 callOrAssign_nonEmpty: call ';'
   55                      | lvalue '=' call ';'
   56                      | lvalue '=' lvalue ';'
   57                      | builtinStmtCompose ';'

   58 states: states stateCase
   59       | stateCase

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   61 stateVars_opt: stateVars
   62              | /* empty */

   63 stateVars: stateVars ',' stateVar
   64          | stateVar

   65 stateVar: ID_
   66         | ID_ '#' expr
   67         | EOS '(' ID_ ')'

   68 stmts_opt: stmts
   69          | /* empty */

   70 stmts: stmts stmt
   71      | stmt_nonEmpty

   72 stmt: stmt_nonEmpty
   73     | ';'

   74 stmt_nonEmpty: matchedStmt
   75              | unmatchedStmt

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   77            | GOTO ID_ ';'
   78            | STAY ';'
   79            | assign ';'
   80            | builtinStmtBehav ';'
   81            | call ';'
   82            | stmtBlock

   83 unmatchedStmt: IF '(' expr ')' stmt
   84              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   86 builtinStmtBehav: ATTENTION '(' expr ')'
   87                 | CLOSE '(' ID_ ')'
   88                 | DONE '(' ')'
   89                 | PRINTF '(' STRING more_args_opt ')'
   90                 | copyStmt
   91                 | segmentStmt

   92 builtinStmtCompose: copyStmt
   93                   | segmentStmt

   94 copyStmt: COPY '(' args ')'

   95 segmentStmt: SEGMENT_R_ '(' args ')'
   96            | SEGMENT_W_ '(' args ')'
   97            | SEGMENT_RW_ '(' args ')'
   98            | SEGMENT_SEQ_R_ '(' args ')'
   99            | SEGMENT_SEQ_W_ '(' args ')'
  100            | SEGMENT_SEQ_RW_ '(' args ')'

  101 call: ID_ '(' args_opt ')'

  102 args_opt: args
  103         | /* empty */

  104 more_args_opt: ',' args
  105              | /* empty */

  106 args: args ',' expr
  107     | expr

  108 assign: lvalue '=' expr

  109 lvalue: ID_
  110       | ID_ '[' expr ']'
  111       | ID_ '[' expr ':' expr ']'
  112       | ID_ '[' expr ']' '[' expr ']'
  113       | ID_ '[' expr ']' '[' expr ':' expr ']'

  114 expr: condExpr
  115     | '{' condExprs_opt '}'

  116 condExprs_opt: condExprs
  117              | /* empty */

  118 condExprs: condExprs ',' condExpr
  119          | condExpr

  120 condExpr: logOrExpr '?' condExpr ':' condExpr
  121         | logOrExpr

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  123          | logAndExpr

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  125           | bitOrExpr

  126 bitOrExpr: bitOrExpr '|' bitXorExpr
  127          | bitXorExpr

  128 bitXorExpr: bitXorExpr '^' bitAndExpr
  129           | bitAndExpr

  130 bitAndExpr: bitAndExpr '&' equalExpr
  131           | equalExpr

  132 equalExpr: equalExpr equalOp inequalExpr
  133          | inequalExpr

  134 inequalExpr: inequalExpr inequalOp shiftExpr
  135            | shiftExpr

  136 shiftExpr: shiftExpr shiftOp addExpr
  137          | addExpr

  138 addExpr: addExpr addOp prodExpr
  139        | prodExpr

  140 prodExpr: prodExpr prodOp unaryExpr
  141         | unaryExpr

  142 unaryExpr: unaryOp fixedExpr
  143          | exprOp '(' expr ')'
  144          | logOp '(' expr ')'
  145          | sqrtOp '(' expr ')'
  146          | floorOp '(' expr ')'
  147          | '(' type ')' fixedExpr
  148          | '(' sizedType ')' fixedExpr
  149          | floatExpr

  150 floatExpr: fixedExpr

  151 fixedExpr: atomExpr '.' atomExpr
  152          | atomExpr

  153 atomExpr: lvalue
  154         | lvalue '@' atomExpr
  155         | NUM
  156         | NUMDBL
  157         | TRUE
  158         | FALSE
  159         | call
  160         | builtinExpr
  161         | '(' expr ')'

  162 builtinExpr: CAT '(' args ')'
  163            | WIDTHOF '(' expr ')'
  164            | BITSOF '(' expr ')'

  165 equalOp: EQUALS
  166        | NOT_EQUALS

  167 inequalOp: '<'
  168          | '>'
  169          | LTE
  170          | GTE

  171 shiftOp: LEFT_SHIFT
  172        | RIGHT_SHIFT

  173 addOp: '+'
  174      | '-'

  175 exprOp: EXP

  176 logOp: LOG

  177 sqrtOp: SQRT

  178 floorOp: FLOOR

  179 prodOp: '*'
  180       | '/'
  181       | '%'

  182 unaryOp: '+'
  183        | '-'
  184        | '!'
  185        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 184
'#' (35) 66
'%' (37) 181
'&' (38) 130
'(' (40) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 145 146 147 148 161 162 163 164
')' (41) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 145 146 147 148 161 162 163 164
'*' (42) 179
'+' (43) 173 182
',' (44) 22 44 63 104 106 118
'-' (45) 174 183
'.' (46) 151
'/' (47) 180
':' (58) 60 111 113 120
';' (59) 41 42 53 54 55 56 57 73 77 78 79 80 81
'<' (60) 167
'=' (61) 47 55 56 108
'>' (62) 168
'?' (63) 120
'@' (64) 154
'[' (91) 14 15 18 110 111 112 113
']' (93) 14 15 18 110 111 112 113
'^' (94) 128
'{' (123) 32 34 35 85 115
'|' (124) 126
'}' (125) 32 34 35 85 115
'~' (126) 185
error (256)
ATTENTION (258) 86
BITSOF (259) 164
BOOLEAN (260) 10 13
FLOAT (261) 11
DOUBLE (262) 12
CAT (263) 162
CLOSE (264) 87
COPY (265) 94
DONE (266) 88
ELSE (267) 76 84
EOS (268) 67
EQUALS (269) 165
FALSE (270) 158
GOTO (271) 77
GTE (272) 170
ID_ (273) 19 24 45 47 49 60 65 66 67 77 87 101 109 110 111 112 113
IF (274) 76 83 84
INPUT (275) 25
LEFT_SHIFT (276) 171
LOGIC_AND (277) 124
LOGIC_OR (278) 122
LTE (279) 169
NOT_EQUALS (280) 166
NUM (281) 155
NUMDBL (282) 156
OUTPUT (283) 26
PARAM (284) 27
PASS_THROUGH_EXCEPTION (285) 30
PRINTF (286) 89
RIGHT_SHIFT (287) 172
SEGMENT_R_ (288) 95
SEGMENT_RW_ (289) 97
SEGMENT_SEQ_R_ (290) 98
SEGMENT_SEQ_RW_ (291) 100
SEGMENT_SEQ_W_ (292) 99
SEGMENT_W_ (293) 96
SIGNED (294) 16
STATE (295) 60
STAY (296) 78
STRING (297) 89
TRUE (298) 157
UNSIGNED (299) 17
WIDTHOF (300) 163
EXP (301) 175
LOG (302) 176
SQRT (303) 177
FLOOR (304) 178


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
start (77)
    on left: 1, on right: 0
operators_opt (78)
    on left: 2 3, on right: 1
operators (79)
    on left: 4 5, on right: 2 4
operator (80)
    on left: 7, on right: 4 5
@1 (81)
    on left: 6, on right: 7
type_opt (82)
    on left: 8 9, on right: 7
type (83)
    on left: 10 11 12 13 14 15, on right: 8 24 41 147
sizedType (84)
    on left: 16 17, on right: 14 15 148
arraySize (85)
    on left: 18, on right: 13 15
opSignature (86)
    on left: 19, on right: 7
ioDecls_opt (87)
    on left: 20 21, on right: 19
ioDecls (88)
    on left: 22 23, on right: 20 22
ioDecl (89)
    on left: 24, on right: 22 23
ioKind (90)
    on left: 25 26 27, on right: 24
exception_opt (91)
    on left: 28 29, on right: 7
exception (92)
    on left: 30, on right: 28
operatorBody (93)
    on left: 32 34 35, on right: 7
@2 (94)
    on left: 31, on right: 32
@3 (95)
    on left: 33, on right: 34
typeDecls_opt (96)
    on left: 36 37, on right: 32 34 35 85
typeDecls (97)
    on left: 38 40, on right: 36 38
@4 (98)
    on left: 39, on right: 40
typeDecl (99)
    on left: 41 42, on right: 38 40
typeDeclElems (100)
    on left: 43 44, on right: 41 44
typeDeclElem (101)
    on left: 45 47 49, on right: 43 44
@5 (102)
    on left: 46, on right: 47
@6 (103)
    on left: 48, on right: 49
callsOrAssigns (104)
    on left: 50 51, on right: 34 50
callOrAssign (105)
    on left: 52 53, on right: 50
callOrAssign_nonEmpty (106)
    on left: 54 55 56 57, on right: 51 52
states (107)
    on left: 58 59, on right: 32 58
stateCase (108)
    on left: 60, on right: 58 59
stateVars_opt (109)
    on left: 61 62, on right: 60
stateVars (110)
    on left: 63 64, on right: 61 63
stateVar (111)
    on left: 65 66 67, on right: 63 64
stmts_opt (112)
    on left: 68 69, on right: 60 85
stmts (113)
    on left: 70 71, on right: 68 70
stmt (114)
    on left: 72 73, on right: 70 83
stmt_nonEmpty (115)
    on left: 74 75, on right: 71 72
matchedStmt (116)
    on left: 76 77 78 79 80 81 82, on right: 74 76 84
unmatchedStmt (117)
    on left: 83 84, on right: 75 84
stmtBlock (118)
    on left: 85, on right: 82
builtinStmtBehav (119)
    on left: 86 87 88 89 90 91, on right: 80
builtinStmtCompose (120)
    on left: 92 93, on right: 57
copyStmt (121)
    on left: 94, on right: 90 92
segmentStmt (122)
    on left: 95 96 97 98 99 100, on right: 91 93
call (123)
    on left: 101, on right: 54 55 81 159
args_opt (124)
    on left: 102 103, on right: 101
more_args_opt (125)
    on left: 104 105, on right: 89
args (126)
    on left: 106 107, on right: 94 95 96 97 98 99 100 102 104 106 162
assign (127)
    on left: 108, on right: 79
lvalue (128)
    on left: 109 110 111 112 113, on right: 55 56 108 153 154
expr (129)
    on left: 114 115, on right: 14 15 18 47 49 66 76 83 84 86 106 107
    108 110 111 112 113 143 144 145 146 161 163 164
condExprs_opt (130)
    on left: 116 117, on right: 115
condExprs (131)
    on left: 118 119, on right: 116 118
condExpr (132)
    on left: 120 121, on right: 114 118 119 120
logOrExpr (133)
    on left: 122 123, on right: 120 121 122
logAndExpr (134)
    on left: 124 125, on right: 122 123 124
bitOrExpr (135)
    on left: 126 127, on right: 124 125 126
bitXorExpr (136)
    on left: 128 129, on right: 126 127 128
bitAndExpr (137)
    on left: 130 131, on right: 128 129 130
equalExpr (138)
    on left: 132 133, on right: 130 131 132
inequalExpr (139)
    on left: 134 135, on right: 132 133 134
shiftExpr (140)
    on left: 136 137, on right: 134 135 136
addExpr (141)
    on left: 138 139, on right: 136 137 138
prodExpr (142)
    on left: 140 141, on right: 138 139 140
unaryExpr (143)
    on left: 142 143 144 145 146 147 148 149, on right: 140 141
floatExpr (144)
    on left: 150, on right: 149
fixedExpr (145)
    on left: 151 152, on right: 142 147 148 150
atomExpr (146)
    on left: 153 154 155 156 157 158 159 160 161, on right: 151 152
    154
builtinExpr (147)
    on left: 162 163 164, on right: 160
equalOp (148)
    on left: 165 166, on right: 132
inequalOp (149)
    on left: 167 168 169 170, on right: 134
shiftOp (150)
    on left: 171 172, on right: 136
addOp (151)
    on left: 173 174, on right: 138
exprOp (152)
    on left: 175, on right: 143
logOp (153)
    on left: 176, on right: 144
sqrtOp (154)
    on left: 177, on right: 145
floorOp (155)
    on left: 178, on right: 146
prodOp (156)
    on left: 179 180 181, on right: 140
unaryOp (157)
    on left: 182 183 184 185, on right: 142


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 6
    operators_opt  go to state 7
    operators      go to state 8
    operator       go to state 9
    type_opt       go to state 10
    type           go to state 11
    sizedType      go to state 12


state 1

   10 type: BOOLEAN .
   13     | BOOLEAN . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 10 (type)

    arraySize  go to state 14


state 2

   11 type: FLOAT .

    $default  reduce using rule 11 (type)


state 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


state 4

   16 sizedType: SIGNED .

    $default  reduce using rule 16 (sizedType)


state 5

   17 sizedType: UNSIGNED .

    $default  reduce using rule 17 (sizedType)


state 6

    0 $accept: start . $end

    $end  shift, and go to state 15


state 7

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 8

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 16
    type_opt   go to state 10
    type       go to state 11
    sizedType  go to state 12


state 9

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 10

    7 operator: type_opt . opSignature @1 operatorBody exception_opt

    ID_  shift, and go to state 17

    opSignature  go to state 18


state 11

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 12

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 19

    arraySize  go to state 20


state 13

   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 41
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 14

   13 type: BOOLEAN arraySize .

    $default  reduce using rule 13 (type)


state 15

    0 $accept: start $end .

    $default  accept


state 16

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 17

   19 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 63


state 18

    7 operator: type_opt opSignature . @1 operatorBody exception_opt

    $default  reduce using rule 6 (@1)

    @1  go to state 64


state 19

   14 type: sizedType '[' . expr ']'
   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 65
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 20

   15 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 66


state 21

  164 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 67


state 22

  162 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 68


state 23

  158 atomExpr: FALSE .

    $default  reduce using rule 158 (atomExpr)


state 24

  101 call: ID_ . '(' args_opt ')'
  109 lvalue: ID_ .
  110       | ID_ . '[' expr ']'
  111       | ID_ . '[' expr ':' expr ']'
  112       | ID_ . '[' expr ']' '[' expr ']'
  113       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 109 (lvalue)


state 25

  155 atomExpr: NUM .

    $default  reduce using rule 155 (atomExpr)


state 26

  156 atomExpr: NUMDBL .

    $default  reduce using rule 156 (atomExpr)


state 27

  157 atomExpr: TRUE .

    $default  reduce using rule 157 (atomExpr)


state 28

  147 unaryExpr: '(' . type ')' fixedExpr
  148          | '(' . sizedType ')' fixedExpr
  161 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 21
    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    CAT       shift, and go to state 22
    FALSE     shift, and go to state 23
    ID_       shift, and go to state 24
    NUM       shift, and go to state 25
    NUMDBL    shift, and go to state 26
    SIGNED    shift, and go to state 4
    TRUE      shift, and go to state 27
    UNSIGNED  shift, and go to state 5
    '('       shift, and go to state 28
    WIDTHOF   shift, and go to state 29
    '{'       shift, and go to state 30
    '-'       shift, and go to state 31
    '+'       shift, and go to state 32
    '~'       shift, and go to state 33
    '!'       shift, and go to state 34
    EXP       shift, and go to state 35
    LOG       shift, and go to state 36
    SQRT      shift, and go to state 37
    FLOOR     shift, and go to state 38

    type         go to state 71
    sizedType    go to state 72
    call         go to state 39
    lvalue       go to state 40
    expr         go to state 73
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 29

  163 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 74


state 30

  115 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    $default  reduce using rule 117 (condExprs_opt)

    call           go to state 39
    lvalue         go to state 40
    condExprs_opt  go to state 75
    condExprs      go to state 76
    condExpr       go to state 77
    logOrExpr      go to state 43
    logAndExpr     go to state 44
    bitOrExpr      go to state 45
    bitXorExpr     go to state 46
    bitAndExpr     go to state 47
    equalExpr      go to state 48
    inequalExpr    go to state 49
    shiftExpr      go to state 50
    addExpr        go to state 51
    prodExpr       go to state 52
    unaryExpr      go to state 53
    floatExpr      go to state 54
    fixedExpr      go to state 55
    atomExpr       go to state 56
    builtinExpr    go to state 57
    exprOp         go to state 58
    logOp          go to state 59
    sqrtOp         go to state 60
    floorOp        go to state 61
    unaryOp        go to state 62


state 31

  183 unaryOp: '-' .

    $default  reduce using rule 183 (unaryOp)


state 32

  182 unaryOp: '+' .

    $default  reduce using rule 182 (unaryOp)


state 33

  185 unaryOp: '~' .

    $default  reduce using rule 185 (unaryOp)


state 34

  184 unaryOp: '!' .

    $default  reduce using rule 184 (unaryOp)


state 35

  175 exprOp: EXP .

    $default  reduce using rule 175 (exprOp)


state 36

  176 logOp: LOG .

    $default  reduce using rule 176 (logOp)


state 37

  177 sqrtOp: SQRT .

    $default  reduce using rule 177 (sqrtOp)


state 38

  178 floorOp: FLOOR .

    $default  reduce using rule 178 (floorOp)


state 39

  159 atomExpr: call .

    $default  reduce using rule 159 (atomExpr)


state 40

  153 atomExpr: lvalue .
  154         | lvalue . '@' atomExpr

    '@'  shift, and go to state 78

    $default  reduce using rule 153 (atomExpr)


state 41

   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 79


state 42

  114 expr: condExpr .

    $default  reduce using rule 114 (expr)


state 43

  120 condExpr: logOrExpr . '?' condExpr ':' condExpr
  121         | logOrExpr .
  122 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 80
    '?'       shift, and go to state 81

    $default  reduce using rule 121 (condExpr)


state 44

  123 logOrExpr: logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 82

    $default  reduce using rule 123 (logOrExpr)


state 45

  125 logAndExpr: bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 83

    $default  reduce using rule 125 (logAndExpr)


state 46

  127 bitOrExpr: bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 84

    $default  reduce using rule 127 (bitOrExpr)


state 47

  129 bitXorExpr: bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 85

    $default  reduce using rule 129 (bitXorExpr)


state 48

  131 bitAndExpr: equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 86
    NOT_EQUALS  shift, and go to state 87

    $default  reduce using rule 131 (bitAndExpr)

    equalOp  go to state 88


state 49

  133 equalExpr: inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 89
    LTE  shift, and go to state 90
    '<'  shift, and go to state 91
    '>'  shift, and go to state 92

    $default  reduce using rule 133 (equalExpr)

    inequalOp  go to state 93


state 50

  135 inequalExpr: shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 94
    RIGHT_SHIFT  shift, and go to state 95

    $default  reduce using rule 135 (inequalExpr)

    shiftOp  go to state 96


state 51

  137 shiftExpr: addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 97
    '+'  shift, and go to state 98

    $default  reduce using rule 137 (shiftExpr)

    addOp  go to state 99


state 52

  139 addExpr: prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 139 (addExpr)

    prodOp  go to state 103


state 53

  141 prodExpr: unaryExpr .

    $default  reduce using rule 141 (prodExpr)


state 54

  149 unaryExpr: floatExpr .

    $default  reduce using rule 149 (unaryExpr)


state 55

  150 floatExpr: fixedExpr .

    $default  reduce using rule 150 (floatExpr)


state 56

  151 fixedExpr: atomExpr . '.' atomExpr
  152          | atomExpr .

    '.'  shift, and go to state 104

    $default  reduce using rule 152 (fixedExpr)


state 57

  160 atomExpr: builtinExpr .

    $default  reduce using rule 160 (atomExpr)


state 58

  143 unaryExpr: exprOp . '(' expr ')'

    '('  shift, and go to state 105


state 59

  144 unaryExpr: logOp . '(' expr ')'

    '('  shift, and go to state 106


state 60

  145 unaryExpr: sqrtOp . '(' expr ')'

    '('  shift, and go to state 107


state 61

  146 unaryExpr: floorOp . '(' expr ')'

    '('  shift, and go to state 108


state 62

  142 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 110
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 63

   19 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 111
    OUTPUT  shift, and go to state 112
    PARAM   shift, and go to state 113

    $default  reduce using rule 21 (ioDecls_opt)

    ioDecls_opt  go to state 114
    ioDecls      go to state 115
    ioDecl       go to state 116
    ioKind       go to state 117


state 64

    7 operator: type_opt opSignature @1 . operatorBody exception_opt

    '{'  shift, and go to state 118

    operatorBody  go to state 119


state 65

   14 type: sizedType '[' expr . ']'
   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 120


state 66

   15 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 121
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 67

  164 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 122
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 68

  162 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 123
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 69

  101 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    $default  reduce using rule 103 (args_opt)

    call         go to state 39
    args_opt     go to state 125
    args         go to state 126
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 70

  110 lvalue: ID_ '[' . expr ']'
  111       | ID_ '[' . expr ':' expr ']'
  112       | ID_ '[' . expr ']' '[' expr ']'
  113       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 127
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 71

  147 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 128


state 72

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'
  148 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 129
    '['  shift, and go to state 19

    arraySize  go to state 20


state 73

  161 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 130


state 74

  163 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 131
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 75

  115 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 132


state 76

  116 condExprs_opt: condExprs .
  118 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 133

    $default  reduce using rule 116 (condExprs_opt)


state 77

  119 condExprs: condExpr .

    $default  reduce using rule 119 (condExprs)


state 78

  154 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    atomExpr     go to state 134
    builtinExpr  go to state 57


state 79

   18 arraySize: '[' expr ']' .

    $default  reduce using rule 18 (arraySize)


state 80

  122 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    logAndExpr   go to state 135
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 81

  120 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 136
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 82

  124 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitOrExpr    go to state 137
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 83

  126 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitXorExpr   go to state 138
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 84

  128 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitAndExpr   go to state 139
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 85

  130 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    equalExpr    go to state 140
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 86

  165 equalOp: EQUALS .

    $default  reduce using rule 165 (equalOp)


state 87

  166 equalOp: NOT_EQUALS .

    $default  reduce using rule 166 (equalOp)


state 88

  132 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    inequalExpr  go to state 141
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 89

  170 inequalOp: GTE .

    $default  reduce using rule 170 (inequalOp)


state 90

  169 inequalOp: LTE .

    $default  reduce using rule 169 (inequalOp)


state 91

  167 inequalOp: '<' .

    $default  reduce using rule 167 (inequalOp)


state 92

  168 inequalOp: '>' .

    $default  reduce using rule 168 (inequalOp)


state 93

  134 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    shiftExpr    go to state 142
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 94

  171 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 171 (shiftOp)


state 95

  172 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 172 (shiftOp)


state 96

  136 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    addExpr      go to state 143
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 97

  174 addOp: '-' .

    $default  reduce using rule 174 (addOp)


state 98

  173 addOp: '+' .

    $default  reduce using rule 173 (addOp)


state 99

  138 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    prodExpr     go to state 144
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 100

  181 prodOp: '%' .

    $default  reduce using rule 181 (prodOp)


state 101

  179 prodOp: '*' .

    $default  reduce using rule 179 (prodOp)


state 102

  180 prodOp: '/' .

    $default  reduce using rule 180 (prodOp)


state 103

  140 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    unaryExpr    go to state 145
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 104

  151 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    atomExpr     go to state 146
    builtinExpr  go to state 57


state 105

  143 unaryExpr: exprOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 147
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 106

  144 unaryExpr: logOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 148
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 107

  145 unaryExpr: sqrtOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 149
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 108

  146 unaryExpr: floorOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 150
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 109

  161 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 73
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 110

  142 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 142 (unaryExpr)


state 111

   25 ioKind: INPUT .

    $default  reduce using rule 25 (ioKind)


state 112

   26 ioKind: OUTPUT .

    $default  reduce using rule 26 (ioKind)


state 113

   27 ioKind: PARAM .

    $default  reduce using rule 27 (ioKind)


state 114

   19 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 151


state 115

   20 ioDecls_opt: ioDecls .
   22 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 152

    $default  reduce using rule 20 (ioDecls_opt)


state 116

   23 ioDecls: ioDecl .

    $default  reduce using rule 23 (ioDecls)


state 117

   24 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    type       go to state 153
    sizedType  go to state 12


state 118

   32 operatorBody: '{' . typeDecls_opt @2 states '}'
   34             | '{' . typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 154
    typeDecls      go to state 155
    @4             go to state 156


state 119

    7 operator: type_opt opSignature @1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 157

    $default  reduce using rule 29 (exception_opt)

    exception_opt  go to state 158
    exception      go to state 159


state 120

   14 type: sizedType '[' expr ']' .
   18 arraySize: '[' expr ']' .

    '['       reduce using rule 18 (arraySize)
    $default  reduce using rule 14 (type)


state 121

   15 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 160


state 122

  164 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 161


state 123

  106 args: args . ',' expr
  162 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 162
    ','  shift, and go to state 163


state 124

  107 args: expr .

    $default  reduce using rule 107 (args)


state 125

  101 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 164


state 126

  102 args_opt: args .
  106 args: args . ',' expr

    ','  shift, and go to state 163

    $default  reduce using rule 102 (args_opt)


state 127

  110 lvalue: ID_ '[' expr . ']'
  111       | ID_ '[' expr . ':' expr ']'
  112       | ID_ '[' expr . ']' '[' expr ']'
  113       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 165
    ':'  shift, and go to state 166


state 128

  147 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 167
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 129

  148 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 168
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 130

  161 atomExpr: '(' expr ')' .

    $default  reduce using rule 161 (atomExpr)


state 131

  163 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 169


state 132

  115 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 115 (expr)


state 133

  118 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 170
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 134

  154 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 154 (atomExpr)


state 135

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 82

    $default  reduce using rule 122 (logOrExpr)


state 136

  120 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 171


state 137

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 83

    $default  reduce using rule 124 (logAndExpr)


state 138

  126 bitOrExpr: bitOrExpr '|' bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 84

    $default  reduce using rule 126 (bitOrExpr)


state 139

  128 bitXorExpr: bitXorExpr '^' bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 85

    $default  reduce using rule 128 (bitXorExpr)


state 140

  130 bitAndExpr: bitAndExpr '&' equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 86
    NOT_EQUALS  shift, and go to state 87

    $default  reduce using rule 130 (bitAndExpr)

    equalOp  go to state 88


state 141

  132 equalExpr: equalExpr equalOp inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 89
    LTE  shift, and go to state 90
    '<'  shift, and go to state 91
    '>'  shift, and go to state 92

    $default  reduce using rule 132 (equalExpr)

    inequalOp  go to state 93


state 142

  134 inequalExpr: inequalExpr inequalOp shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 94
    RIGHT_SHIFT  shift, and go to state 95

    $default  reduce using rule 134 (inequalExpr)

    shiftOp  go to state 96


state 143

  136 shiftExpr: shiftExpr shiftOp addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 97
    '+'  shift, and go to state 98

    $default  reduce using rule 136 (shiftExpr)

    addOp  go to state 99


state 144

  138 addExpr: addExpr addOp prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 138 (addExpr)

    prodOp  go to state 103


state 145

  140 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 140 (prodExpr)


state 146

  151 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 151 (fixedExpr)


state 147

  143 unaryExpr: exprOp '(' expr . ')'

    ')'  shift, and go to state 172


state 148

  144 unaryExpr: logOp '(' expr . ')'

    ')'  shift, and go to state 173


state 149

  145 unaryExpr: sqrtOp '(' expr . ')'

    ')'  shift, and go to state 174


state 150

  146 unaryExpr: floorOp '(' expr . ')'

    ')'  shift, and go to state 175


state 151

   19 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 19 (opSignature)


state 152

   22 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 111
    OUTPUT  shift, and go to state 112
    PARAM   shift, and go to state 113

    ioDecl  go to state 176
    ioKind  go to state 117


state 153

   24 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 177


state 154

   32 operatorBody: '{' typeDecls_opt . @2 states '}'
   34             | '{' typeDecls_opt . @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 178

    STATE     reduce using rule 31 (@2)
    $default  reduce using rule 33 (@3)

    @2  go to state 179
    @3  go to state 180


state 155

   36 typeDecls_opt: typeDecls .
   38 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 181

    $default  reduce using rule 36 (typeDecls_opt)

    type       go to state 182
    sizedType  go to state 12
    typeDecl   go to state 183


state 156

   40 typeDecls: @4 . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 181

    type       go to state 182
    sizedType  go to state 12
    typeDecl   go to state 184


state 157

   30 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 30 (exception)


state 158

    7 operator: type_opt opSignature @1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 159

   28 exception_opt: exception .

    $default  reduce using rule 28 (exception_opt)


state 160

   15 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 15 (type)


state 161

  164 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 164 (builtinExpr)


state 162

  162 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 162 (builtinExpr)


state 163

  106 args: args ',' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 185
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 164

  101 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 101 (call)


state 165

  110 lvalue: ID_ '[' expr ']' .
  112       | ID_ '[' expr ']' . '[' expr ']'
  113       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 186

    $default  reduce using rule 110 (lvalue)


state 166

  111 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 187
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 167

  147 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 147 (unaryExpr)


state 168

  148 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 148 (unaryExpr)


state 169

  163 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 163 (builtinExpr)


state 170

  118 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 118 (condExprs)


state 171

  120 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 188
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 172

  143 unaryExpr: exprOp '(' expr ')' .

    $default  reduce using rule 143 (unaryExpr)


state 173

  144 unaryExpr: logOp '(' expr ')' .

    $default  reduce using rule 144 (unaryExpr)


state 174

  145 unaryExpr: sqrtOp '(' expr ')' .

    $default  reduce using rule 145 (unaryExpr)


state 175

  146 unaryExpr: floorOp '(' expr ')' .

    $default  reduce using rule 146 (unaryExpr)


state 176

   22 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 22 (ioDecls)


state 177

   24 ioDecl: ioKind type ID_ .

    $default  reduce using rule 24 (ioDecl)


state 178

   35 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 35 (operatorBody)


state 179

   32 operatorBody: '{' typeDecls_opt @2 . states '}'

    STATE  shift, and go to state 189

    states     go to state 190
    stateCase  go to state 191


state 180

   34 operatorBody: '{' typeDecls_opt @3 . callsOrAssigns '}'

    COPY             shift, and go to state 192
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198

    callsOrAssigns         go to state 199
    callOrAssign_nonEmpty  go to state 200
    builtinStmtCompose     go to state 201
    copyStmt               go to state 202
    segmentStmt            go to state 203
    call                   go to state 204
    lvalue                 go to state 205


state 181

   42 typeDecl: ';' .

    $default  reduce using rule 42 (typeDecl)


state 182

   41 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 206

    typeDeclElems  go to state 207
    typeDeclElem   go to state 208


state 183

   38 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 38 (typeDecls)


state 184

   40 typeDecls: @4 typeDecl .

    $default  reduce using rule 40 (typeDecls)


state 185

  106 args: args ',' expr .

    $default  reduce using rule 106 (args)


state 186

  112 lvalue: ID_ '[' expr ']' '[' . expr ']'
  113       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 209
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 187

  111 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 210


state 188

  120 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 120 (condExpr)


state 189

   60 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 211


state 190

   32 operatorBody: '{' typeDecls_opt @2 states . '}'
   58 states: states . stateCase

    STATE  shift, and go to state 189
    '}'    shift, and go to state 212

    stateCase  go to state 213


state 191

   59 states: stateCase .

    $default  reduce using rule 59 (states)


state 192

   94 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 214


state 193

   95 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 215


state 194

   97 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 216


state 195

   98 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 217


state 196

  100 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 218


state 197

   99 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 219


state 198

   96 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 220


state 199

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns . '}'
   50 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 192
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    '}'              shift, and go to state 221
    ';'              shift, and go to state 222

    callOrAssign           go to state 223
    callOrAssign_nonEmpty  go to state 224
    builtinStmtCompose     go to state 201
    copyStmt               go to state 202
    segmentStmt            go to state 203
    call                   go to state 204
    lvalue                 go to state 205


state 200

   51 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 51 (callsOrAssigns)


state 201

   57 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 225


state 202

   92 builtinStmtCompose: copyStmt .

    $default  reduce using rule 92 (builtinStmtCompose)


state 203

   93 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 93 (builtinStmtCompose)


state 204

   54 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 226


state 205

   55 callOrAssign_nonEmpty: lvalue . '=' call ';'
   56                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 227


state 206

   45 typeDeclElem: ID_ .
   47             | ID_ . @5 '=' expr
   49             | ID_ . @6 '(' expr ')'

    '('       reduce using rule 48 (@6)
    '='       reduce using rule 46 (@5)
    $default  reduce using rule 45 (typeDeclElem)

    @5  go to state 228
    @6  go to state 229


state 207

   41 typeDecl: type typeDeclElems . ';'
   44 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 230
    ','  shift, and go to state 231


state 208

   43 typeDeclElems: typeDeclElem .

    $default  reduce using rule 43 (typeDeclElems)


state 209

  112 lvalue: ID_ '[' expr ']' '[' expr . ']'
  113       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 232
    ':'  shift, and go to state 233


state 210

  111 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 111 (lvalue)


state 211

   60 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 234


state 212

   32 operatorBody: '{' typeDecls_opt @2 states '}' .

    $default  reduce using rule 32 (operatorBody)


state 213

   58 states: states stateCase .

    $default  reduce using rule 58 (states)


state 214

   94 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 235
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 215

   95 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 236
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 216

   97 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 237
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 217

   98 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 238
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 218

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 239
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 219

   99 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 240
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 220

   96 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 241
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 221

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}' .

    $default  reduce using rule 34 (operatorBody)


state 222

   53 callOrAssign: ';' .

    $default  reduce using rule 53 (callOrAssign)


state 223

   50 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 50 (callsOrAssigns)


state 224

   52 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 52 (callOrAssign)


state 225

   57 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 57 (callOrAssign_nonEmpty)


state 226

   54 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 54 (callOrAssign_nonEmpty)


state 227

   55 callOrAssign_nonEmpty: lvalue '=' . call ';'
   56                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 24

    call    go to state 242
    lvalue  go to state 243


state 228

   47 typeDeclElem: ID_ @5 . '=' expr

    '='  shift, and go to state 244


state 229

   49 typeDeclElem: ID_ @6 . '(' expr ')'

    '('  shift, and go to state 245


state 230

   41 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 41 (typeDecl)


state 231

   44 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 206

    typeDeclElem  go to state 246


state 232

  112 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 112 (lvalue)


state 233

  113 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 247
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 234

   60 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS  shift, and go to state 248
    ID_  shift, and go to state 249

    $default  reduce using rule 62 (stateVars_opt)

    stateVars_opt  go to state 250
    stateVars      go to state 251
    stateVar       go to state 252


state 235

   94 copyStmt: COPY '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 253
    ','  shift, and go to state 163


state 236

   95 segmentStmt: SEGMENT_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 254
    ','  shift, and go to state 163


state 237

   97 segmentStmt: SEGMENT_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 255
    ','  shift, and go to state 163


state 238

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 256
    ','  shift, and go to state 163


state 239

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 257
    ','  shift, and go to state 163


state 240

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 258
    ','  shift, and go to state 163


state 241

   96 segmentStmt: SEGMENT_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 259
    ','  shift, and go to state 163


state 242

   55 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 260


state 243

   56 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 261


state 244

   47 typeDeclElem: ID_ @5 '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 262
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 245

   49 typeDeclElem: ID_ @6 '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 263
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 246

   44 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 44 (typeDeclElems)


state 247

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 264


state 248

   67 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 265


state 249

   65 stateVar: ID_ .
   66         | ID_ . '#' expr

    '#'  shift, and go to state 266

    $default  reduce using rule 65 (stateVar)


state 250

   60 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 267


state 251

   61 stateVars_opt: stateVars .
   63 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 268

    $default  reduce using rule 61 (stateVars_opt)


state 252

   64 stateVars: stateVar .

    $default  reduce using rule 64 (stateVars)


state 253

   94 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 94 (copyStmt)


state 254

   95 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 95 (segmentStmt)


state 255

   97 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 97 (segmentStmt)


state 256

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 257

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 100 (segmentStmt)


state 258

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 99 (segmentStmt)


state 259

   96 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 96 (segmentStmt)


state 260

   55 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 261

   56 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 56 (callOrAssign_nonEmpty)


state 262

   47 typeDeclElem: ID_ @5 '=' expr .

    $default  reduce using rule 47 (typeDeclElem)


state 263

   49 typeDeclElem: ID_ @6 '(' expr . ')'

    ')'  shift, and go to state 269


state 264

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 113 (lvalue)


state 265

   67 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 270


state 266

   66 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 271
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 267

   60 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 272


state 268

   63 stateVars: stateVars ',' . stateVar

    EOS  shift, and go to state 248
    ID_  shift, and go to state 249

    stateVar  go to state 273


state 269

   49 typeDeclElem: ID_ @6 '(' expr ')' .

    $default  reduce using rule 49 (typeDeclElem)


state 270

   67 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 274


state 271

   66 stateVar: ID_ '#' expr .

    $default  reduce using rule 66 (stateVar)


state 272

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 275
    CLOSE            shift, and go to state 276
    COPY             shift, and go to state 192
    DONE             shift, and go to state 277
    GOTO             shift, and go to state 278
    ID_              shift, and go to state 24
    IF               shift, and go to state 279
    PRINTF           shift, and go to state 280
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 281
    '{'              shift, and go to state 282

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 283
    stmts             go to state 284
    stmt_nonEmpty     go to state 285
    matchedStmt       go to state 286
    unmatchedStmt     go to state 287
    stmtBlock         go to state 288
    builtinStmtBehav  go to state 289
    copyStmt          go to state 290
    segmentStmt       go to state 291
    call              go to state 292
    assign            go to state 293
    lvalue            go to state 294


state 273

   63 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 63 (stateVars)


state 274

   67 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 67 (stateVar)


state 275

   86 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 295


state 276

   87 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 296


state 277

   88 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 297


state 278

   77 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 298


state 279

   76 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF . '(' expr ')' stmt
   84              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 299


state 280

   89 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 300


state 281

   78 matchedStmt: STAY . ';'

    ';'  shift, and go to state 301


state 282

   85 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 302
    typeDecls      go to state 155
    @4             go to state 156


state 283

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 60 (stateCase)


state 284

   68 stmts_opt: stmts .
   70 stmts: stmts . stmt

    ATTENTION        shift, and go to state 275
    CLOSE            shift, and go to state 276
    COPY             shift, and go to state 192
    DONE             shift, and go to state 277
    GOTO             shift, and go to state 278
    ID_              shift, and go to state 24
    IF               shift, and go to state 279
    PRINTF           shift, and go to state 280
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 281
    '{'              shift, and go to state 282
    ';'              shift, and go to state 303

    $default  reduce using rule 68 (stmts_opt)

    stmt              go to state 304
    stmt_nonEmpty     go to state 305
    matchedStmt       go to state 286
    unmatchedStmt     go to state 287
    stmtBlock         go to state 288
    builtinStmtBehav  go to state 289
    copyStmt          go to state 290
    segmentStmt       go to state 291
    call              go to state 292
    assign            go to state 293
    lvalue            go to state 294


state 285

   71 stmts: stmt_nonEmpty .

    $default  reduce using rule 71 (stmts)


state 286

   74 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 74 (stmt_nonEmpty)


state 287

   75 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 75 (stmt_nonEmpty)


state 288

   82 matchedStmt: stmtBlock .

    $default  reduce using rule 82 (matchedStmt)


state 289

   80 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 306


state 290

   90 builtinStmtBehav: copyStmt .

    $default  reduce using rule 90 (builtinStmtBehav)


state 291

   91 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 91 (builtinStmtBehav)


state 292

   81 matchedStmt: call . ';'

    ';'  shift, and go to state 307


state 293

   79 matchedStmt: assign . ';'

    ';'  shift, and go to state 308


state 294

  108 assign: lvalue . '=' expr

    '='  shift, and go to state 309


state 295

   86 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 310
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 296

   87 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 311


state 297

   88 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 312


state 298

   77 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 313


state 299

   76 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' . expr ')' stmt
   84              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 314
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 300

   89 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 315


state 301

   78 matchedStmt: STAY ';' .

    $default  reduce using rule 78 (matchedStmt)


state 302

   85 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 275
    CLOSE            shift, and go to state 276
    COPY             shift, and go to state 192
    DONE             shift, and go to state 277
    GOTO             shift, and go to state 278
    ID_              shift, and go to state 24
    IF               shift, and go to state 279
    PRINTF           shift, and go to state 280
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 281
    '{'              shift, and go to state 282

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 316
    stmts             go to state 284
    stmt_nonEmpty     go to state 285
    matchedStmt       go to state 286
    unmatchedStmt     go to state 287
    stmtBlock         go to state 288
    builtinStmtBehav  go to state 289
    copyStmt          go to state 290
    segmentStmt       go to state 291
    call              go to state 292
    assign            go to state 293
    lvalue            go to state 294


state 303

   73 stmt: ';' .

    $default  reduce using rule 73 (stmt)


state 304

   70 stmts: stmts stmt .

    $default  reduce using rule 70 (stmts)


state 305

   72 stmt: stmt_nonEmpty .

    $default  reduce using rule 72 (stmt)


state 306

   80 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 80 (matchedStmt)


state 307

   81 matchedStmt: call ';' .

    $default  reduce using rule 81 (matchedStmt)


state 308

   79 matchedStmt: assign ';' .

    $default  reduce using rule 79 (matchedStmt)


state 309

  108 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 317
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 310

   86 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 318


state 311

   87 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 319


state 312

   88 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 88 (builtinStmtBehav)


state 313

   77 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 77 (matchedStmt)


state 314

   76 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr . ')' stmt
   84              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 320


state 315

   89 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 321

    $default  reduce using rule 105 (more_args_opt)

    more_args_opt  go to state 322


state 316

   85 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 323


state 317

  108 assign: lvalue '=' expr .

    $default  reduce using rule 108 (assign)


state 318

   86 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 86 (builtinStmtBehav)


state 319

   87 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 87 (builtinStmtBehav)


state 320

   76 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr ')' . stmt
   84              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 275
    CLOSE            shift, and go to state 276
    COPY             shift, and go to state 192
    DONE             shift, and go to state 277
    GOTO             shift, and go to state 278
    ID_              shift, and go to state 24
    IF               shift, and go to state 279
    PRINTF           shift, and go to state 280
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 281
    '{'              shift, and go to state 282
    ';'              shift, and go to state 303

    stmt              go to state 324
    stmt_nonEmpty     go to state 305
    matchedStmt       go to state 325
    unmatchedStmt     go to state 287
    stmtBlock         go to state 288
    builtinStmtBehav  go to state 289
    copyStmt          go to state 290
    segmentStmt       go to state 291
    call              go to state 292
    assign            go to state 293
    lvalue            go to state 294


state 321

  104 more_args_opt: ',' . args

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 326
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 322

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 327


state 323

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 85 (stmtBlock)


state 324

   83 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 83 (unmatchedStmt)


state 325

   74 stmt_nonEmpty: matchedStmt .
   76 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 328

    $default  reduce using rule 74 (stmt_nonEmpty)


state 326

  104 more_args_opt: ',' args .
  106 args: args . ',' expr

    ','  shift, and go to state 163

    $default  reduce using rule 104 (more_args_opt)


state 327

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 89 (builtinStmtBehav)


state 328

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 275
    CLOSE            shift, and go to state 276
    COPY             shift, and go to state 192
    DONE             shift, and go to state 277
    GOTO             shift, and go to state 278
    ID_              shift, and go to state 24
    IF               shift, and go to state 279
    PRINTF           shift, and go to state 280
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 281
    '{'              shift, and go to state 282

    matchedStmt       go to state 329
    unmatchedStmt     go to state 330
    stmtBlock         go to state 288
    builtinStmtBehav  go to state 289
    copyStmt          go to state 290
    segmentStmt       go to state 291
    call              go to state 292
    assign            go to state 293
    lvalue            go to state 294


state 329

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 76 (matchedStmt)


state 330

   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 84 (unmatchedStmt)
