Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 @1: /* empty */

    7 operator: type_opt opSignature @1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | BOOLEAN arraySize
   12     | sizedType '[' expr ']'
   13     | sizedType arraySize '[' expr ']'

   14 sizedType: SIGNED
   15          | UNSIGNED

   16 arraySize: '[' expr ']'

   17 opSignature: ID_ '(' ioDecls_opt ')'

   18 ioDecls_opt: ioDecls
   19            | /* empty */

   20 ioDecls: ioDecls ',' ioDecl
   21        | ioDecl

   22 ioDecl: ioKind type ID_

   23 ioKind: INPUT
   24       | OUTPUT
   25       | PARAM

   26 exception_opt: exception
   27              | /* empty */

   28 exception: PASS_THROUGH_EXCEPTION

   29 @2: /* empty */

   30 operatorBody: '{' typeDecls_opt @2 states '}'

   31 @3: /* empty */

   32 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}'
   33             | '{' typeDecls_opt '}'

   34 typeDecls_opt: typeDecls
   35              | /* empty */

   36 typeDecls: typeDecls typeDecl

   37 @4: /* empty */

   38 typeDecls: @4 typeDecl

   39 typeDecl: type typeDeclElems ';'
   40         | ';'

   41 typeDeclElems: typeDeclElem
   42              | typeDeclElems ',' typeDeclElem

   43 typeDeclElem: ID_

   44 @5: /* empty */

   45 typeDeclElem: ID_ @5 '=' expr

   46 @6: /* empty */

   47 typeDeclElem: ID_ @6 '(' expr ')'

   48 callsOrAssigns: callsOrAssigns callOrAssign
   49               | callOrAssign_nonEmpty

   50 callOrAssign: callOrAssign_nonEmpty
   51             | ';'

   52 callOrAssign_nonEmpty: call ';'
   53                      | lvalue '=' call ';'
   54                      | lvalue '=' lvalue ';'
   55                      | builtinStmtCompose ';'

   56 states: states stateCase
   57       | stateCase

   58 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   59 stateVars_opt: stateVars
   60              | /* empty */

   61 stateVars: stateVars ',' stateVar
   62          | stateVar

   63 stateVar: ID_
   64         | ID_ '#' expr
   65         | EOS '(' ID_ ')'

   66 stmts_opt: stmts
   67          | /* empty */

   68 stmts: stmts stmt
   69      | stmt_nonEmpty

   70 stmt: stmt_nonEmpty
   71     | ';'

   72 stmt_nonEmpty: matchedStmt
   73              | unmatchedStmt

   74 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   75            | GOTO ID_ ';'
   76            | STAY ';'
   77            | assign ';'
   78            | builtinStmtBehav ';'
   79            | call ';'
   80            | stmtBlock

   81 unmatchedStmt: IF '(' expr ')' stmt
   82              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   83 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   84 builtinStmtBehav: ATTENTION '(' expr ')'
   85                 | CLOSE '(' ID_ ')'
   86                 | DONE '(' ')'
   87                 | PRINTF '(' STRING more_args_opt ')'
   88                 | copyStmt
   89                 | segmentStmt

   90 builtinStmtCompose: copyStmt
   91                   | segmentStmt

   92 copyStmt: COPY '(' args ')'

   93 segmentStmt: SEGMENT_R_ '(' args ')'
   94            | SEGMENT_W_ '(' args ')'
   95            | SEGMENT_RW_ '(' args ')'
   96            | SEGMENT_SEQ_R_ '(' args ')'
   97            | SEGMENT_SEQ_W_ '(' args ')'
   98            | SEGMENT_SEQ_RW_ '(' args ')'

   99 call: ID_ '(' args_opt ')'

  100 args_opt: args
  101         | /* empty */

  102 more_args_opt: ',' args
  103              | /* empty */

  104 args: args ',' expr
  105     | expr

  106 assign: lvalue '=' expr

  107 lvalue: ID_
  108       | ID_ '[' expr ']'
  109       | ID_ '[' expr ':' expr ']'
  110       | ID_ '[' expr ']' '[' expr ']'
  111       | ID_ '[' expr ']' '[' expr ':' expr ']'

  112 expr: condExpr
  113     | '{' condExprs_opt '}'

  114 condExprs_opt: condExprs
  115              | /* empty */

  116 condExprs: condExprs ',' condExpr
  117          | condExpr

  118 condExpr: logOrExpr '?' condExpr ':' condExpr
  119         | logOrExpr

  120 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  121          | logAndExpr

  122 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  123           | bitOrExpr

  124 bitOrExpr: bitOrExpr '|' bitXorExpr
  125          | bitXorExpr

  126 bitXorExpr: bitXorExpr '^' bitAndExpr
  127           | bitAndExpr

  128 bitAndExpr: bitAndExpr '&' equalExpr
  129           | equalExpr

  130 equalExpr: equalExpr equalOp inequalExpr
  131          | inequalExpr

  132 inequalExpr: inequalExpr inequalOp shiftExpr
  133            | shiftExpr

  134 shiftExpr: shiftExpr shiftOp addExpr
  135          | addExpr

  136 addExpr: addExpr addOp prodExpr
  137        | prodExpr

  138 prodExpr: prodExpr prodOp unaryExpr
  139         | unaryExpr

  140 unaryExpr: unaryOp fixedExpr
  141          | '(' type ')' fixedExpr
  142          | '(' sizedType ')' fixedExpr
  143          | fixedExpr

  144 fixedExpr: atomExpr '.' atomExpr
  145          | atomExpr

  146 atomExpr: lvalue
  147         | lvalue '@' atomExpr
  148         | NUM
  149         | TRUE
  150         | FALSE
  151         | call
  152         | builtinExpr
  153         | '(' expr ')'

  154 builtinExpr: CAT '(' args ')'
  155            | WIDTHOF '(' expr ')'
  156            | BITSOF '(' expr ')'

  157 equalOp: EQUALS
  158        | NOT_EQUALS

  159 inequalOp: '<'
  160          | '>'
  161          | LTE
  162          | GTE

  163 shiftOp: LEFT_SHIFT
  164        | RIGHT_SHIFT

  165 addOp: '+'
  166      | '-'

  167 prodOp: '*'
  168       | '/'
  169       | '%'

  170 unaryOp: '+'
  171        | '-'
  172        | '!'
  173        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 172
'#' (35) 64
'%' (37) 169
'&' (38) 128
'(' (40) 17 47 58 65 74 81 82 84 85 86 87 92 93 94 95 96 97 98 99 141
    142 153 154 155 156
')' (41) 17 47 58 65 74 81 82 84 85 86 87 92 93 94 95 96 97 98 99 141
    142 153 154 155 156
'*' (42) 167
'+' (43) 165 170
',' (44) 20 42 61 102 104 116
'-' (45) 166 171
'.' (46) 144
'/' (47) 168
':' (58) 58 109 111 118
';' (59) 39 40 51 52 53 54 55 71 75 76 77 78 79
'<' (60) 159
'=' (61) 45 53 54 106
'>' (62) 160
'?' (63) 118
'@' (64) 147
'[' (91) 12 13 16 108 109 110 111
']' (93) 12 13 16 108 109 110 111
'^' (94) 126
'{' (123) 30 32 33 83 113
'|' (124) 124
'}' (125) 30 32 33 83 113
'~' (126) 173
error (256)
ATTENTION (258) 84
BITSOF (259) 156
BOOLEAN (260) 10 11
CAT (261) 154
CLOSE (262) 85
COPY (263) 92
DONE (264) 86
ELSE (265) 74 82
EOS (266) 65
EQUALS (267) 157
FALSE (268) 150
GOTO (269) 75
GTE (270) 162
ID_ (271) 17 22 43 45 47 58 63 64 65 75 85 99 107 108 109 110 111
IF (272) 74 81 82
INPUT (273) 23
LEFT_SHIFT (274) 163
LOGIC_AND (275) 122
LOGIC_OR (276) 120
LTE (277) 161
NOT_EQUALS (278) 158
NUM (279) 148
OUTPUT (280) 24
PARAM (281) 25
PASS_THROUGH_EXCEPTION (282) 28
PRINTF (283) 87
RIGHT_SHIFT (284) 164
SEGMENT_R_ (285) 93
SEGMENT_RW_ (286) 95
SEGMENT_SEQ_R_ (287) 96
SEGMENT_SEQ_RW_ (288) 98
SEGMENT_SEQ_W_ (289) 97
SEGMENT_W_ (290) 94
SIGNED (291) 14
STATE (292) 58
STAY (293) 76
STRING (294) 87
TRUE (295) 149
UNSIGNED (296) 15
WIDTHOF (297) 155


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
start (70)
    on left: 1, on right: 0
operators_opt (71)
    on left: 2 3, on right: 1
operators (72)
    on left: 4 5, on right: 2 4
operator (73)
    on left: 7, on right: 4 5
@1 (74)
    on left: 6, on right: 7
type_opt (75)
    on left: 8 9, on right: 7
type (76)
    on left: 10 11 12 13, on right: 8 22 39 141
sizedType (77)
    on left: 14 15, on right: 12 13 142
arraySize (78)
    on left: 16, on right: 11 13
opSignature (79)
    on left: 17, on right: 7
ioDecls_opt (80)
    on left: 18 19, on right: 17
ioDecls (81)
    on left: 20 21, on right: 18 20
ioDecl (82)
    on left: 22, on right: 20 21
ioKind (83)
    on left: 23 24 25, on right: 22
exception_opt (84)
    on left: 26 27, on right: 7
exception (85)
    on left: 28, on right: 26
operatorBody (86)
    on left: 30 32 33, on right: 7
@2 (87)
    on left: 29, on right: 30
@3 (88)
    on left: 31, on right: 32
typeDecls_opt (89)
    on left: 34 35, on right: 30 32 33 83
typeDecls (90)
    on left: 36 38, on right: 34 36
@4 (91)
    on left: 37, on right: 38
typeDecl (92)
    on left: 39 40, on right: 36 38
typeDeclElems (93)
    on left: 41 42, on right: 39 42
typeDeclElem (94)
    on left: 43 45 47, on right: 41 42
@5 (95)
    on left: 44, on right: 45
@6 (96)
    on left: 46, on right: 47
callsOrAssigns (97)
    on left: 48 49, on right: 32 48
callOrAssign (98)
    on left: 50 51, on right: 48
callOrAssign_nonEmpty (99)
    on left: 52 53 54 55, on right: 49 50
states (100)
    on left: 56 57, on right: 30 56
stateCase (101)
    on left: 58, on right: 56 57
stateVars_opt (102)
    on left: 59 60, on right: 58
stateVars (103)
    on left: 61 62, on right: 59 61
stateVar (104)
    on left: 63 64 65, on right: 61 62
stmts_opt (105)
    on left: 66 67, on right: 58 83
stmts (106)
    on left: 68 69, on right: 66 68
stmt (107)
    on left: 70 71, on right: 68 81
stmt_nonEmpty (108)
    on left: 72 73, on right: 69 70
matchedStmt (109)
    on left: 74 75 76 77 78 79 80, on right: 72 74 82
unmatchedStmt (110)
    on left: 81 82, on right: 73 82
stmtBlock (111)
    on left: 83, on right: 80
builtinStmtBehav (112)
    on left: 84 85 86 87 88 89, on right: 78
builtinStmtCompose (113)
    on left: 90 91, on right: 55
copyStmt (114)
    on left: 92, on right: 88 90
segmentStmt (115)
    on left: 93 94 95 96 97 98, on right: 89 91
call (116)
    on left: 99, on right: 52 53 79 151
args_opt (117)
    on left: 100 101, on right: 99
more_args_opt (118)
    on left: 102 103, on right: 87
args (119)
    on left: 104 105, on right: 92 93 94 95 96 97 98 100 102 104 154
assign (120)
    on left: 106, on right: 77
lvalue (121)
    on left: 107 108 109 110 111, on right: 53 54 106 146 147
expr (122)
    on left: 112 113, on right: 12 13 16 45 47 64 74 81 82 84 104 105
    106 108 109 110 111 153 155 156
condExprs_opt (123)
    on left: 114 115, on right: 113
condExprs (124)
    on left: 116 117, on right: 114 116
condExpr (125)
    on left: 118 119, on right: 112 116 117 118
logOrExpr (126)
    on left: 120 121, on right: 118 119 120
logAndExpr (127)
    on left: 122 123, on right: 120 121 122
bitOrExpr (128)
    on left: 124 125, on right: 122 123 124
bitXorExpr (129)
    on left: 126 127, on right: 124 125 126
bitAndExpr (130)
    on left: 128 129, on right: 126 127 128
equalExpr (131)
    on left: 130 131, on right: 128 129 130
inequalExpr (132)
    on left: 132 133, on right: 130 131 132
shiftExpr (133)
    on left: 134 135, on right: 132 133 134
addExpr (134)
    on left: 136 137, on right: 134 135 136
prodExpr (135)
    on left: 138 139, on right: 136 137 138
unaryExpr (136)
    on left: 140 141 142 143, on right: 138 139
fixedExpr (137)
    on left: 144 145, on right: 140 141 142 143
atomExpr (138)
    on left: 146 147 148 149 150 151 152 153, on right: 144 145 147
builtinExpr (139)
    on left: 154 155 156, on right: 152
equalOp (140)
    on left: 157 158, on right: 130
inequalOp (141)
    on left: 159 160 161 162, on right: 132
shiftOp (142)
    on left: 163 164, on right: 134
addOp (143)
    on left: 165 166, on right: 136
prodOp (144)
    on left: 167 168 169, on right: 138
unaryOp (145)
    on left: 170 171 172 173, on right: 140


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 4
    operators_opt  go to state 5
    operators      go to state 6
    operator       go to state 7
    type_opt       go to state 8
    type           go to state 9
    sizedType      go to state 10


state 1

   10 type: BOOLEAN .
   11     | BOOLEAN . arraySize

    '['  shift, and go to state 11

    $default  reduce using rule 10 (type)

    arraySize  go to state 12


state 2

   14 sizedType: SIGNED .

    $default  reduce using rule 14 (sizedType)


state 3

   15 sizedType: UNSIGNED .

    $default  reduce using rule 15 (sizedType)


state 4

    0 $accept: start . $end

    $end  shift, and go to state 13


state 5

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 6

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 14
    type_opt   go to state 8
    type       go to state 9
    sizedType  go to state 10


state 7

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 8

    7 operator: type_opt . opSignature @1 operatorBody exception_opt

    ID_  shift, and go to state 15

    opSignature  go to state 16


state 9

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 10

   12 type: sizedType . '[' expr ']'
   13     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 17

    arraySize  go to state 18


state 11

   16 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 34
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 12

   11 type: BOOLEAN arraySize .

    $default  reduce using rule 11 (type)


state 13

    0 $accept: start $end .

    $default  accept


state 14

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 15

   17 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 51


state 16

    7 operator: type_opt opSignature . @1 operatorBody exception_opt

    $default  reduce using rule 6 (@1)

    @1  go to state 52


state 17

   12 type: sizedType '[' . expr ']'
   16 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 53
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 18

   13 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 54


state 19

  156 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 55


state 20

  154 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 56


state 21

  150 atomExpr: FALSE .

    $default  reduce using rule 150 (atomExpr)


state 22

   99 call: ID_ . '(' args_opt ')'
  107 lvalue: ID_ .
  108       | ID_ . '[' expr ']'
  109       | ID_ . '[' expr ':' expr ']'
  110       | ID_ . '[' expr ']' '[' expr ']'
  111       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 57
    '['  shift, and go to state 58

    $default  reduce using rule 107 (lvalue)


state 23

  148 atomExpr: NUM .

    $default  reduce using rule 148 (atomExpr)


state 24

  149 atomExpr: TRUE .

    $default  reduce using rule 149 (atomExpr)


state 25

  141 unaryExpr: '(' . type ')' fixedExpr
  142          | '(' . sizedType ')' fixedExpr
  153 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 19
    BOOLEAN   shift, and go to state 1
    CAT       shift, and go to state 20
    FALSE     shift, and go to state 21
    ID_       shift, and go to state 22
    NUM       shift, and go to state 23
    SIGNED    shift, and go to state 2
    TRUE      shift, and go to state 24
    UNSIGNED  shift, and go to state 3
    '('       shift, and go to state 25
    WIDTHOF   shift, and go to state 26
    '{'       shift, and go to state 27
    '-'       shift, and go to state 28
    '+'       shift, and go to state 29
    '~'       shift, and go to state 30
    '!'       shift, and go to state 31

    type         go to state 59
    sizedType    go to state 60
    call         go to state 32
    lvalue       go to state 33
    expr         go to state 61
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 26

  155 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 62


state 27

  113 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    $default  reduce using rule 115 (condExprs_opt)

    call           go to state 32
    lvalue         go to state 33
    condExprs_opt  go to state 63
    condExprs      go to state 64
    condExpr       go to state 65
    logOrExpr      go to state 36
    logAndExpr     go to state 37
    bitOrExpr      go to state 38
    bitXorExpr     go to state 39
    bitAndExpr     go to state 40
    equalExpr      go to state 41
    inequalExpr    go to state 42
    shiftExpr      go to state 43
    addExpr        go to state 44
    prodExpr       go to state 45
    unaryExpr      go to state 46
    fixedExpr      go to state 47
    atomExpr       go to state 48
    builtinExpr    go to state 49
    unaryOp        go to state 50


state 28

  171 unaryOp: '-' .

    $default  reduce using rule 171 (unaryOp)


state 29

  170 unaryOp: '+' .

    $default  reduce using rule 170 (unaryOp)


state 30

  173 unaryOp: '~' .

    $default  reduce using rule 173 (unaryOp)


state 31

  172 unaryOp: '!' .

    $default  reduce using rule 172 (unaryOp)


state 32

  151 atomExpr: call .

    $default  reduce using rule 151 (atomExpr)


state 33

  146 atomExpr: lvalue .
  147         | lvalue . '@' atomExpr

    '@'  shift, and go to state 66

    $default  reduce using rule 146 (atomExpr)


state 34

   16 arraySize: '[' expr . ']'

    ']'  shift, and go to state 67


state 35

  112 expr: condExpr .

    $default  reduce using rule 112 (expr)


state 36

  118 condExpr: logOrExpr . '?' condExpr ':' condExpr
  119         | logOrExpr .
  120 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 68
    '?'       shift, and go to state 69

    $default  reduce using rule 119 (condExpr)


state 37

  121 logOrExpr: logAndExpr .
  122 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 70

    $default  reduce using rule 121 (logOrExpr)


state 38

  123 logAndExpr: bitOrExpr .
  124 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 71

    $default  reduce using rule 123 (logAndExpr)


state 39

  125 bitOrExpr: bitXorExpr .
  126 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 72

    $default  reduce using rule 125 (bitOrExpr)


state 40

  127 bitXorExpr: bitAndExpr .
  128 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 73

    $default  reduce using rule 127 (bitXorExpr)


state 41

  129 bitAndExpr: equalExpr .
  130 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 74
    NOT_EQUALS  shift, and go to state 75

    $default  reduce using rule 129 (bitAndExpr)

    equalOp  go to state 76


state 42

  131 equalExpr: inequalExpr .
  132 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 77
    LTE  shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80

    $default  reduce using rule 131 (equalExpr)

    inequalOp  go to state 81


state 43

  133 inequalExpr: shiftExpr .
  134 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 82
    RIGHT_SHIFT  shift, and go to state 83

    $default  reduce using rule 133 (inequalExpr)

    shiftOp  go to state 84


state 44

  135 shiftExpr: addExpr .
  136 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 85
    '+'  shift, and go to state 86

    $default  reduce using rule 135 (shiftExpr)

    addOp  go to state 87


state 45

  137 addExpr: prodExpr .
  138 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 137 (addExpr)

    prodOp  go to state 91


state 46

  139 prodExpr: unaryExpr .

    $default  reduce using rule 139 (prodExpr)


state 47

  143 unaryExpr: fixedExpr .

    $default  reduce using rule 143 (unaryExpr)


state 48

  144 fixedExpr: atomExpr . '.' atomExpr
  145          | atomExpr .

    '.'  shift, and go to state 92

    $default  reduce using rule 145 (fixedExpr)


state 49

  152 atomExpr: builtinExpr .

    $default  reduce using rule 152 (atomExpr)


state 50

  140 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 93
    WIDTHOF  shift, and go to state 26

    call         go to state 32
    lvalue       go to state 33
    fixedExpr    go to state 94
    atomExpr     go to state 48
    builtinExpr  go to state 49


state 51

   17 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 95
    OUTPUT  shift, and go to state 96
    PARAM   shift, and go to state 97

    $default  reduce using rule 19 (ioDecls_opt)

    ioDecls_opt  go to state 98
    ioDecls      go to state 99
    ioDecl       go to state 100
    ioKind       go to state 101


state 52

    7 operator: type_opt opSignature @1 . operatorBody exception_opt

    '{'  shift, and go to state 102

    operatorBody  go to state 103


state 53

   12 type: sizedType '[' expr . ']'
   16 arraySize: '[' expr . ']'

    ']'  shift, and go to state 104


state 54

   13 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 105
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 55

  156 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 106
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 56

  154 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 107
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 57

   99 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    $default  reduce using rule 101 (args_opt)

    call         go to state 32
    args_opt     go to state 109
    args         go to state 110
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 58

  108 lvalue: ID_ '[' . expr ']'
  109       | ID_ '[' . expr ':' expr ']'
  110       | ID_ '[' . expr ']' '[' expr ']'
  111       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 111
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 59

  141 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 112


state 60

   12 type: sizedType . '[' expr ']'
   13     | sizedType . arraySize '[' expr ']'
  142 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 113
    '['  shift, and go to state 17

    arraySize  go to state 18


state 61

  153 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 114


state 62

  155 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 115
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 63

  113 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 116


state 64

  114 condExprs_opt: condExprs .
  116 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 117

    $default  reduce using rule 114 (condExprs_opt)


state 65

  117 condExprs: condExpr .

    $default  reduce using rule 117 (condExprs)


state 66

  147 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 93
    WIDTHOF  shift, and go to state 26

    call         go to state 32
    lvalue       go to state 33
    atomExpr     go to state 118
    builtinExpr  go to state 49


state 67

   16 arraySize: '[' expr ']' .

    $default  reduce using rule 16 (arraySize)


state 68

  120 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    logAndExpr   go to state 119
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 69

  118 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    condExpr     go to state 120
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 70

  122 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    bitOrExpr    go to state 121
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 71

  124 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    bitXorExpr   go to state 122
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 72

  126 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    bitAndExpr   go to state 123
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 73

  128 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    equalExpr    go to state 124
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 74

  157 equalOp: EQUALS .

    $default  reduce using rule 157 (equalOp)


state 75

  158 equalOp: NOT_EQUALS .

    $default  reduce using rule 158 (equalOp)


state 76

  130 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    inequalExpr  go to state 125
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 77

  162 inequalOp: GTE .

    $default  reduce using rule 162 (inequalOp)


state 78

  161 inequalOp: LTE .

    $default  reduce using rule 161 (inequalOp)


state 79

  159 inequalOp: '<' .

    $default  reduce using rule 159 (inequalOp)


state 80

  160 inequalOp: '>' .

    $default  reduce using rule 160 (inequalOp)


state 81

  132 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    shiftExpr    go to state 126
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 82

  163 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 163 (shiftOp)


state 83

  164 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 164 (shiftOp)


state 84

  134 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    addExpr      go to state 127
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 85

  166 addOp: '-' .

    $default  reduce using rule 166 (addOp)


state 86

  165 addOp: '+' .

    $default  reduce using rule 165 (addOp)


state 87

  136 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    prodExpr     go to state 128
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 88

  169 prodOp: '%' .

    $default  reduce using rule 169 (prodOp)


state 89

  167 prodOp: '*' .

    $default  reduce using rule 167 (prodOp)


state 90

  168 prodOp: '/' .

    $default  reduce using rule 168 (prodOp)


state 91

  138 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    unaryExpr    go to state 129
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 92

  144 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 93
    WIDTHOF  shift, and go to state 26

    call         go to state 32
    lvalue       go to state 33
    atomExpr     go to state 130
    builtinExpr  go to state 49


state 93

  153 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 61
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 94

  140 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 140 (unaryExpr)


state 95

   23 ioKind: INPUT .

    $default  reduce using rule 23 (ioKind)


state 96

   24 ioKind: OUTPUT .

    $default  reduce using rule 24 (ioKind)


state 97

   25 ioKind: PARAM .

    $default  reduce using rule 25 (ioKind)


state 98

   17 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 131


state 99

   18 ioDecls_opt: ioDecls .
   20 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 132

    $default  reduce using rule 18 (ioDecls_opt)


state 100

   21 ioDecls: ioDecl .

    $default  reduce using rule 21 (ioDecls)


state 101

   22 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3

    type       go to state 133
    sizedType  go to state 10


state 102

   30 operatorBody: '{' . typeDecls_opt @2 states '}'
   32             | '{' . typeDecls_opt @3 callsOrAssigns '}'
   33             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 37 (@4)
    SIGNED    reduce using rule 37 (@4)
    UNSIGNED  reduce using rule 37 (@4)
    ';'       reduce using rule 37 (@4)
    $default  reduce using rule 35 (typeDecls_opt)

    typeDecls_opt  go to state 134
    typeDecls      go to state 135
    @4             go to state 136


state 103

    7 operator: type_opt opSignature @1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 137

    $default  reduce using rule 27 (exception_opt)

    exception_opt  go to state 138
    exception      go to state 139


state 104

   12 type: sizedType '[' expr ']' .
   16 arraySize: '[' expr ']' .

    '['       reduce using rule 16 (arraySize)
    $default  reduce using rule 12 (type)


state 105

   13 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 140


state 106

  156 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 141


state 107

  104 args: args . ',' expr
  154 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 142
    ','  shift, and go to state 143


state 108

  105 args: expr .

    $default  reduce using rule 105 (args)


state 109

   99 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 144


state 110

  100 args_opt: args .
  104 args: args . ',' expr

    ','  shift, and go to state 143

    $default  reduce using rule 100 (args_opt)


state 111

  108 lvalue: ID_ '[' expr . ']'
  109       | ID_ '[' expr . ':' expr ']'
  110       | ID_ '[' expr . ']' '[' expr ']'
  111       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 145
    ':'  shift, and go to state 146


state 112

  141 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 93
    WIDTHOF  shift, and go to state 26

    call         go to state 32
    lvalue       go to state 33
    fixedExpr    go to state 147
    atomExpr     go to state 48
    builtinExpr  go to state 49


state 113

  142 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 93
    WIDTHOF  shift, and go to state 26

    call         go to state 32
    lvalue       go to state 33
    fixedExpr    go to state 148
    atomExpr     go to state 48
    builtinExpr  go to state 49


state 114

  153 atomExpr: '(' expr ')' .

    $default  reduce using rule 153 (atomExpr)


state 115

  155 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 149


state 116

  113 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 113 (expr)


state 117

  116 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    condExpr     go to state 150
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 118

  147 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 147 (atomExpr)


state 119

  120 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  122 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 70

    $default  reduce using rule 120 (logOrExpr)


state 120

  118 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 151


state 121

  122 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  124 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 71

    $default  reduce using rule 122 (logAndExpr)


state 122

  124 bitOrExpr: bitOrExpr '|' bitXorExpr .
  126 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 72

    $default  reduce using rule 124 (bitOrExpr)


state 123

  126 bitXorExpr: bitXorExpr '^' bitAndExpr .
  128 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 73

    $default  reduce using rule 126 (bitXorExpr)


state 124

  128 bitAndExpr: bitAndExpr '&' equalExpr .
  130 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 74
    NOT_EQUALS  shift, and go to state 75

    $default  reduce using rule 128 (bitAndExpr)

    equalOp  go to state 76


state 125

  130 equalExpr: equalExpr equalOp inequalExpr .
  132 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 77
    LTE  shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80

    $default  reduce using rule 130 (equalExpr)

    inequalOp  go to state 81


state 126

  132 inequalExpr: inequalExpr inequalOp shiftExpr .
  134 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 82
    RIGHT_SHIFT  shift, and go to state 83

    $default  reduce using rule 132 (inequalExpr)

    shiftOp  go to state 84


state 127

  134 shiftExpr: shiftExpr shiftOp addExpr .
  136 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 85
    '+'  shift, and go to state 86

    $default  reduce using rule 134 (shiftExpr)

    addOp  go to state 87


state 128

  136 addExpr: addExpr addOp prodExpr .
  138 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90

    $default  reduce using rule 136 (addExpr)

    prodOp  go to state 91


state 129

  138 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 138 (prodExpr)


state 130

  144 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 144 (fixedExpr)


state 131

   17 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 17 (opSignature)


state 132

   20 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 95
    OUTPUT  shift, and go to state 96
    PARAM   shift, and go to state 97

    ioDecl  go to state 152
    ioKind  go to state 101


state 133

   22 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 153


state 134

   30 operatorBody: '{' typeDecls_opt . @2 states '}'
   32             | '{' typeDecls_opt . @3 callsOrAssigns '}'
   33             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 154

    STATE     reduce using rule 29 (@2)
    $default  reduce using rule 31 (@3)

    @2  go to state 155
    @3  go to state 156


state 135

   34 typeDecls_opt: typeDecls .
   36 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    ';'       shift, and go to state 157

    $default  reduce using rule 34 (typeDecls_opt)

    type       go to state 158
    sizedType  go to state 10
    typeDecl   go to state 159


state 136

   38 typeDecls: @4 . typeDecl

    BOOLEAN   shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    ';'       shift, and go to state 157

    type       go to state 158
    sizedType  go to state 10
    typeDecl   go to state 160


state 137

   28 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 28 (exception)


state 138

    7 operator: type_opt opSignature @1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 139

   26 exception_opt: exception .

    $default  reduce using rule 26 (exception_opt)


state 140

   13 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 13 (type)


state 141

  156 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 156 (builtinExpr)


state 142

  154 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 154 (builtinExpr)


state 143

  104 args: args ',' . expr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 161
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 144

   99 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 99 (call)


state 145

  108 lvalue: ID_ '[' expr ']' .
  110       | ID_ '[' expr ']' . '[' expr ']'
  111       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 162

    $default  reduce using rule 108 (lvalue)


state 146

  109 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 163
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 147

  141 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 141 (unaryExpr)


state 148

  142 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 142 (unaryExpr)


state 149

  155 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 155 (builtinExpr)


state 150

  116 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 116 (condExprs)


state 151

  118 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    condExpr     go to state 164
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 152

   20 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 20 (ioDecls)


state 153

   22 ioDecl: ioKind type ID_ .

    $default  reduce using rule 22 (ioDecl)


state 154

   33 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 33 (operatorBody)


state 155

   30 operatorBody: '{' typeDecls_opt @2 . states '}'

    STATE  shift, and go to state 165

    states     go to state 166
    stateCase  go to state 167


state 156

   32 operatorBody: '{' typeDecls_opt @3 . callsOrAssigns '}'

    COPY             shift, and go to state 168
    ID_              shift, and go to state 22
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174

    callsOrAssigns         go to state 175
    callOrAssign_nonEmpty  go to state 176
    builtinStmtCompose     go to state 177
    copyStmt               go to state 178
    segmentStmt            go to state 179
    call                   go to state 180
    lvalue                 go to state 181


state 157

   40 typeDecl: ';' .

    $default  reduce using rule 40 (typeDecl)


state 158

   39 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 182

    typeDeclElems  go to state 183
    typeDeclElem   go to state 184


state 159

   36 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 36 (typeDecls)


state 160

   38 typeDecls: @4 typeDecl .

    $default  reduce using rule 38 (typeDecls)


state 161

  104 args: args ',' expr .

    $default  reduce using rule 104 (args)


state 162

  110 lvalue: ID_ '[' expr ']' '[' . expr ']'
  111       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 185
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 163

  109 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 186


state 164

  118 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 118 (condExpr)


state 165

   58 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 187


state 166

   30 operatorBody: '{' typeDecls_opt @2 states . '}'
   56 states: states . stateCase

    STATE  shift, and go to state 165
    '}'    shift, and go to state 188

    stateCase  go to state 189


state 167

   57 states: stateCase .

    $default  reduce using rule 57 (states)


state 168

   92 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 190


state 169

   93 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 191


state 170

   95 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 192


state 171

   96 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 193


state 172

   98 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 194


state 173

   97 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 195


state 174

   94 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 196


state 175

   32 operatorBody: '{' typeDecls_opt @3 callsOrAssigns . '}'
   48 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 168
    ID_              shift, and go to state 22
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    '}'              shift, and go to state 197
    ';'              shift, and go to state 198

    callOrAssign           go to state 199
    callOrAssign_nonEmpty  go to state 200
    builtinStmtCompose     go to state 177
    copyStmt               go to state 178
    segmentStmt            go to state 179
    call                   go to state 180
    lvalue                 go to state 181


state 176

   49 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 49 (callsOrAssigns)


state 177

   55 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 201


state 178

   90 builtinStmtCompose: copyStmt .

    $default  reduce using rule 90 (builtinStmtCompose)


state 179

   91 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 91 (builtinStmtCompose)


state 180

   52 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 202


state 181

   53 callOrAssign_nonEmpty: lvalue . '=' call ';'
   54                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 203


state 182

   43 typeDeclElem: ID_ .
   45             | ID_ . @5 '=' expr
   47             | ID_ . @6 '(' expr ')'

    '('       reduce using rule 46 (@6)
    '='       reduce using rule 44 (@5)
    $default  reduce using rule 43 (typeDeclElem)

    @5  go to state 204
    @6  go to state 205


state 183

   39 typeDecl: type typeDeclElems . ';'
   42 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 206
    ','  shift, and go to state 207


state 184

   41 typeDeclElems: typeDeclElem .

    $default  reduce using rule 41 (typeDeclElems)


state 185

  110 lvalue: ID_ '[' expr ']' '[' expr . ']'
  111       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 208
    ':'  shift, and go to state 209


state 186

  109 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 109 (lvalue)


state 187

   58 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 210


state 188

   30 operatorBody: '{' typeDecls_opt @2 states '}' .

    $default  reduce using rule 30 (operatorBody)


state 189

   56 states: states stateCase .

    $default  reduce using rule 56 (states)


state 190

   92 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 211
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 191

   93 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 212
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 192

   95 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 213
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 193

   96 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 214
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 194

   98 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 215
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 195

   97 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 216
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 196

   94 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 217
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 197

   32 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}' .

    $default  reduce using rule 32 (operatorBody)


state 198

   51 callOrAssign: ';' .

    $default  reduce using rule 51 (callOrAssign)


state 199

   48 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 48 (callsOrAssigns)


state 200

   50 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 50 (callOrAssign)


state 201

   55 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 202

   52 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 52 (callOrAssign_nonEmpty)


state 203

   53 callOrAssign_nonEmpty: lvalue '=' . call ';'
   54                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 22

    call    go to state 218
    lvalue  go to state 219


state 204

   45 typeDeclElem: ID_ @5 . '=' expr

    '='  shift, and go to state 220


state 205

   47 typeDeclElem: ID_ @6 . '(' expr ')'

    '('  shift, and go to state 221


state 206

   39 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 39 (typeDecl)


state 207

   42 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 182

    typeDeclElem  go to state 222


state 208

  110 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 110 (lvalue)


state 209

  111 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 223
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 210

   58 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS  shift, and go to state 224
    ID_  shift, and go to state 225

    $default  reduce using rule 60 (stateVars_opt)

    stateVars_opt  go to state 226
    stateVars      go to state 227
    stateVar       go to state 228


state 211

   92 copyStmt: COPY '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 229
    ','  shift, and go to state 143


state 212

   93 segmentStmt: SEGMENT_R_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 230
    ','  shift, and go to state 143


state 213

   95 segmentStmt: SEGMENT_RW_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 231
    ','  shift, and go to state 143


state 214

   96 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 232
    ','  shift, and go to state 143


state 215

   98 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 233
    ','  shift, and go to state 143


state 216

   97 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 234
    ','  shift, and go to state 143


state 217

   94 segmentStmt: SEGMENT_W_ '(' args . ')'
  104 args: args . ',' expr

    ')'  shift, and go to state 235
    ','  shift, and go to state 143


state 218

   53 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 236


state 219

   54 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 237


state 220

   45 typeDeclElem: ID_ @5 '=' . expr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 238
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 221

   47 typeDeclElem: ID_ @6 '(' . expr ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 239
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 222

   42 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 42 (typeDeclElems)


state 223

  111 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 240


state 224

   65 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 241


state 225

   63 stateVar: ID_ .
   64         | ID_ . '#' expr

    '#'  shift, and go to state 242

    $default  reduce using rule 63 (stateVar)


state 226

   58 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 243


state 227

   59 stateVars_opt: stateVars .
   61 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 244

    $default  reduce using rule 59 (stateVars_opt)


state 228

   62 stateVars: stateVar .

    $default  reduce using rule 62 (stateVars)


state 229

   92 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 92 (copyStmt)


state 230

   93 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 93 (segmentStmt)


state 231

   95 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 95 (segmentStmt)


state 232

   96 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 96 (segmentStmt)


state 233

   98 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 234

   97 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 97 (segmentStmt)


state 235

   94 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 94 (segmentStmt)


state 236

   53 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 53 (callOrAssign_nonEmpty)


state 237

   54 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 54 (callOrAssign_nonEmpty)


state 238

   45 typeDeclElem: ID_ @5 '=' expr .

    $default  reduce using rule 45 (typeDeclElem)


state 239

   47 typeDeclElem: ID_ @6 '(' expr . ')'

    ')'  shift, and go to state 245


state 240

  111 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 111 (lvalue)


state 241

   65 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 246


state 242

   64 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 247
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 243

   58 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 248


state 244

   61 stateVars: stateVars ',' . stateVar

    EOS  shift, and go to state 224
    ID_  shift, and go to state 225

    stateVar  go to state 249


state 245

   47 typeDeclElem: ID_ @6 '(' expr ')' .

    $default  reduce using rule 47 (typeDeclElem)


state 246

   65 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 250


state 247

   64 stateVar: ID_ '#' expr .

    $default  reduce using rule 64 (stateVar)


state 248

   58 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 251
    CLOSE            shift, and go to state 252
    COPY             shift, and go to state 168
    DONE             shift, and go to state 253
    GOTO             shift, and go to state 254
    ID_              shift, and go to state 22
    IF               shift, and go to state 255
    PRINTF           shift, and go to state 256
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    STAY             shift, and go to state 257
    '{'              shift, and go to state 258

    $default  reduce using rule 67 (stmts_opt)

    stmts_opt         go to state 259
    stmts             go to state 260
    stmt_nonEmpty     go to state 261
    matchedStmt       go to state 262
    unmatchedStmt     go to state 263
    stmtBlock         go to state 264
    builtinStmtBehav  go to state 265
    copyStmt          go to state 266
    segmentStmt       go to state 267
    call              go to state 268
    assign            go to state 269
    lvalue            go to state 270


state 249

   61 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 61 (stateVars)


state 250

   65 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 65 (stateVar)


state 251

   84 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 271


state 252

   85 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 272


state 253

   86 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 273


state 254

   75 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 274


state 255

   74 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   81 unmatchedStmt: IF . '(' expr ')' stmt
   82              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 275


state 256

   87 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 276


state 257

   76 matchedStmt: STAY . ';'

    ';'  shift, and go to state 277


state 258

   83 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 37 (@4)
    SIGNED    reduce using rule 37 (@4)
    UNSIGNED  reduce using rule 37 (@4)
    ';'       reduce using rule 37 (@4)
    $default  reduce using rule 35 (typeDecls_opt)

    typeDecls_opt  go to state 278
    typeDecls      go to state 135
    @4             go to state 136


state 259

   58 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 58 (stateCase)


state 260

   66 stmts_opt: stmts .
   68 stmts: stmts . stmt

    ATTENTION        shift, and go to state 251
    CLOSE            shift, and go to state 252
    COPY             shift, and go to state 168
    DONE             shift, and go to state 253
    GOTO             shift, and go to state 254
    ID_              shift, and go to state 22
    IF               shift, and go to state 255
    PRINTF           shift, and go to state 256
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    STAY             shift, and go to state 257
    '{'              shift, and go to state 258
    ';'              shift, and go to state 279

    $default  reduce using rule 66 (stmts_opt)

    stmt              go to state 280
    stmt_nonEmpty     go to state 281
    matchedStmt       go to state 262
    unmatchedStmt     go to state 263
    stmtBlock         go to state 264
    builtinStmtBehav  go to state 265
    copyStmt          go to state 266
    segmentStmt       go to state 267
    call              go to state 268
    assign            go to state 269
    lvalue            go to state 270


state 261

   69 stmts: stmt_nonEmpty .

    $default  reduce using rule 69 (stmts)


state 262

   72 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 72 (stmt_nonEmpty)


state 263

   73 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 73 (stmt_nonEmpty)


state 264

   80 matchedStmt: stmtBlock .

    $default  reduce using rule 80 (matchedStmt)


state 265

   78 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 282


state 266

   88 builtinStmtBehav: copyStmt .

    $default  reduce using rule 88 (builtinStmtBehav)


state 267

   89 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 89 (builtinStmtBehav)


state 268

   79 matchedStmt: call . ';'

    ';'  shift, and go to state 283


state 269

   77 matchedStmt: assign . ';'

    ';'  shift, and go to state 284


state 270

  106 assign: lvalue . '=' expr

    '='  shift, and go to state 285


state 271

   84 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 286
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 272

   85 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 287


state 273

   86 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 288


state 274

   75 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 289


state 275

   74 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   81 unmatchedStmt: IF '(' . expr ')' stmt
   82              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 290
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 276

   87 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 291


state 277

   76 matchedStmt: STAY ';' .

    $default  reduce using rule 76 (matchedStmt)


state 278

   83 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 251
    CLOSE            shift, and go to state 252
    COPY             shift, and go to state 168
    DONE             shift, and go to state 253
    GOTO             shift, and go to state 254
    ID_              shift, and go to state 22
    IF               shift, and go to state 255
    PRINTF           shift, and go to state 256
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    STAY             shift, and go to state 257
    '{'              shift, and go to state 258

    $default  reduce using rule 67 (stmts_opt)

    stmts_opt         go to state 292
    stmts             go to state 260
    stmt_nonEmpty     go to state 261
    matchedStmt       go to state 262
    unmatchedStmt     go to state 263
    stmtBlock         go to state 264
    builtinStmtBehav  go to state 265
    copyStmt          go to state 266
    segmentStmt       go to state 267
    call              go to state 268
    assign            go to state 269
    lvalue            go to state 270


state 279

   71 stmt: ';' .

    $default  reduce using rule 71 (stmt)


state 280

   68 stmts: stmts stmt .

    $default  reduce using rule 68 (stmts)


state 281

   70 stmt: stmt_nonEmpty .

    $default  reduce using rule 70 (stmt)


state 282

   78 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 78 (matchedStmt)


state 283

   79 matchedStmt: call ';' .

    $default  reduce using rule 79 (matchedStmt)


state 284

   77 matchedStmt: assign ';' .

    $default  reduce using rule 77 (matchedStmt)


state 285

  106 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    lvalue       go to state 33
    expr         go to state 293
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 286

   84 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 294


state 287

   85 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 295


state 288

   86 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 86 (builtinStmtBehav)


state 289

   75 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 75 (matchedStmt)


state 290

   74 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   81 unmatchedStmt: IF '(' expr . ')' stmt
   82              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 296


state 291

   87 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 297

    $default  reduce using rule 103 (more_args_opt)

    more_args_opt  go to state 298


state 292

   83 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 299


state 293

  106 assign: lvalue '=' expr .

    $default  reduce using rule 106 (assign)


state 294

   84 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 84 (builtinStmtBehav)


state 295

   85 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 85 (builtinStmtBehav)


state 296

   74 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   81 unmatchedStmt: IF '(' expr ')' . stmt
   82              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 251
    CLOSE            shift, and go to state 252
    COPY             shift, and go to state 168
    DONE             shift, and go to state 253
    GOTO             shift, and go to state 254
    ID_              shift, and go to state 22
    IF               shift, and go to state 255
    PRINTF           shift, and go to state 256
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    STAY             shift, and go to state 257
    '{'              shift, and go to state 258
    ';'              shift, and go to state 279

    stmt              go to state 300
    stmt_nonEmpty     go to state 281
    matchedStmt       go to state 301
    unmatchedStmt     go to state 263
    stmtBlock         go to state 264
    builtinStmtBehav  go to state 265
    copyStmt          go to state 266
    segmentStmt       go to state 267
    call              go to state 268
    assign            go to state 269
    lvalue            go to state 270


state 297

  102 more_args_opt: ',' . args

    BITSOF   shift, and go to state 19
    CAT      shift, and go to state 20
    FALSE    shift, and go to state 21
    ID_      shift, and go to state 22
    NUM      shift, and go to state 23
    TRUE     shift, and go to state 24
    '('      shift, and go to state 25
    WIDTHOF  shift, and go to state 26
    '{'      shift, and go to state 27
    '-'      shift, and go to state 28
    '+'      shift, and go to state 29
    '~'      shift, and go to state 30
    '!'      shift, and go to state 31

    call         go to state 32
    args         go to state 302
    lvalue       go to state 33
    expr         go to state 108
    condExpr     go to state 35
    logOrExpr    go to state 36
    logAndExpr   go to state 37
    bitOrExpr    go to state 38
    bitXorExpr   go to state 39
    bitAndExpr   go to state 40
    equalExpr    go to state 41
    inequalExpr  go to state 42
    shiftExpr    go to state 43
    addExpr      go to state 44
    prodExpr     go to state 45
    unaryExpr    go to state 46
    fixedExpr    go to state 47
    atomExpr     go to state 48
    builtinExpr  go to state 49
    unaryOp      go to state 50


state 298

   87 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 303


state 299

   83 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 83 (stmtBlock)


state 300

   81 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 81 (unmatchedStmt)


state 301

   72 stmt_nonEmpty: matchedStmt .
   74 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   82 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 304

    $default  reduce using rule 72 (stmt_nonEmpty)


state 302

  102 more_args_opt: ',' args .
  104 args: args . ',' expr

    ','  shift, and go to state 143

    $default  reduce using rule 102 (more_args_opt)


state 303

   87 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 87 (builtinStmtBehav)


state 304

   74 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   82 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 251
    CLOSE            shift, and go to state 252
    COPY             shift, and go to state 168
    DONE             shift, and go to state 253
    GOTO             shift, and go to state 254
    ID_              shift, and go to state 22
    IF               shift, and go to state 255
    PRINTF           shift, and go to state 256
    SEGMENT_R_       shift, and go to state 169
    SEGMENT_RW_      shift, and go to state 170
    SEGMENT_SEQ_R_   shift, and go to state 171
    SEGMENT_SEQ_RW_  shift, and go to state 172
    SEGMENT_SEQ_W_   shift, and go to state 173
    SEGMENT_W_       shift, and go to state 174
    STAY             shift, and go to state 257
    '{'              shift, and go to state 258

    matchedStmt       go to state 305
    unmatchedStmt     go to state 306
    stmtBlock         go to state 264
    builtinStmtBehav  go to state 265
    copyStmt          go to state 266
    segmentStmt       go to state 267
    call              go to state 268
    assign            go to state 269
    lvalue            go to state 270


state 305

   74 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 74 (matchedStmt)


state 306

   82 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 82 (unmatchedStmt)
