Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 @1: /* empty */

    7 operator: type_opt opSignature @1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | FLOAT
   12     | DOUBLE
   13     | BOOLEAN arraySize
   14     | sizedType '[' expr ']'
   15     | sizedType arraySize '[' expr ']'

   16 sizedType: SIGNED
   17          | UNSIGNED

   18 arraySize: '[' expr ']'

   19 opSignature: ID_ '(' ioDecls_opt ')'

   20 ioDecls_opt: ioDecls
   21            | /* empty */

   22 ioDecls: ioDecls ',' ioDecl
   23        | ioDecl

   24 ioDecl: ioKind type ID_

   25 ioKind: INPUT
   26       | OUTPUT
   27       | PARAM

   28 exception_opt: exception
   29              | /* empty */

   30 exception: PASS_THROUGH_EXCEPTION

   31 @2: /* empty */

   32 operatorBody: '{' typeDecls_opt @2 states '}'

   33 @3: /* empty */

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt '}'

   36 typeDecls_opt: typeDecls
   37              | /* empty */

   38 typeDecls: typeDecls typeDecl

   39 @4: /* empty */

   40 typeDecls: @4 typeDecl

   41 typeDecl: type typeDeclElems ';'
   42         | ';'

   43 typeDeclElems: typeDeclElem
   44              | typeDeclElems ',' typeDeclElem

   45 typeDeclElem: ID_

   46 @5: /* empty */

   47 typeDeclElem: ID_ @5 '=' expr

   48 @6: /* empty */

   49 typeDeclElem: ID_ @6 '(' expr ')'

   50 callsOrAssigns: callsOrAssigns callOrAssign
   51               | callOrAssign_nonEmpty

   52 callOrAssign: callOrAssign_nonEmpty
   53             | ';'

   54 callOrAssign_nonEmpty: call ';'
   55                      | lvalue '=' call ';'
   56                      | lvalue '=' lvalue ';'
   57                      | builtinStmtCompose ';'

   58 states: states stateCase
   59       | stateCase

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   61 stateVars_opt: stateVars
   62              | /* empty */

   63 stateVars: stateVars ',' stateVar
   64          | stateVar

   65 stateVar: ID_
   66         | ID_ '#' expr
   67         | EOS '(' ID_ ')'

   68 stmts_opt: stmts
   69          | /* empty */

   70 stmts: stmts stmt
   71      | stmt_nonEmpty

   72 stmt: stmt_nonEmpty
   73     | ';'

   74 stmt_nonEmpty: matchedStmt
   75              | unmatchedStmt

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   77            | GOTO ID_ ';'
   78            | STAY ';'
   79            | assign ';'
   80            | builtinStmtBehav ';'
   81            | call ';'
   82            | stmtBlock

   83 unmatchedStmt: IF '(' expr ')' stmt
   84              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   86 builtinStmtBehav: ATTENTION '(' expr ')'
   87                 | CLOSE '(' ID_ ')'
   88                 | DONE '(' ')'
   89                 | PRINTF '(' STRING more_args_opt ')'
   90                 | copyStmt
   91                 | segmentStmt

   92 builtinStmtCompose: copyStmt
   93                   | segmentStmt

   94 copyStmt: COPY '(' args ')'

   95 segmentStmt: SEGMENT_R_ '(' args ')'
   96            | SEGMENT_W_ '(' args ')'
   97            | SEGMENT_RW_ '(' args ')'
   98            | SEGMENT_SEQ_R_ '(' args ')'
   99            | SEGMENT_SEQ_W_ '(' args ')'
  100            | SEGMENT_SEQ_RW_ '(' args ')'

  101 call: ID_ '(' args_opt ')'

  102 args_opt: args
  103         | /* empty */

  104 more_args_opt: ',' args
  105              | /* empty */

  106 args: args ',' expr
  107     | expr

  108 assign: lvalue '=' expr

  109 lvalue: ID_
  110       | ID_ '[' expr ']'
  111       | ID_ '[' expr ':' expr ']'
  112       | ID_ '[' expr ']' '[' expr ']'
  113       | ID_ '[' expr ']' '[' expr ':' expr ']'

  114 expr: condExpr
  115     | '{' condExprs_opt '}'

  116 condExprs_opt: condExprs
  117              | /* empty */

  118 condExprs: condExprs ',' condExpr
  119          | condExpr

  120 condExpr: logOrExpr '?' condExpr ':' condExpr
  121         | logOrExpr

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  123          | logAndExpr

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  125           | bitOrExpr

  126 bitOrExpr: bitOrExpr '|' bitXorExpr
  127          | bitXorExpr

  128 bitXorExpr: bitXorExpr '^' bitAndExpr
  129           | bitAndExpr

  130 bitAndExpr: bitAndExpr '&' equalExpr
  131           | equalExpr

  132 equalExpr: equalExpr equalOp inequalExpr
  133          | inequalExpr

  134 inequalExpr: inequalExpr inequalOp shiftExpr
  135            | shiftExpr

  136 shiftExpr: shiftExpr shiftOp addExpr
  137          | addExpr

  138 addExpr: addExpr addOp prodExpr
  139        | prodExpr

  140 prodExpr: prodExpr prodOp unaryExpr
  141         | unaryExpr

  142 unaryExpr: unaryOp fixedExpr
  143          | exprOp '(' expr ')'
  144          | logOp '(' expr ')'
  145          | sqrtOp '(' expr ')'
  146          | floorOp '(' expr ')'
  147          | '(' type ')' fixedExpr
  148          | '(' sizedType ')' fixedExpr
  149          | fixedExpr

  150 fixedExpr: atomExpr '.' atomExpr
  151          | atomExpr

  152 atomExpr: lvalue
  153         | lvalue '@' atomExpr
  154         | NUM
  155         | TRUE
  156         | FALSE
  157         | call
  158         | builtinExpr
  159         | '(' expr ')'

  160 builtinExpr: CAT '(' args ')'
  161            | WIDTHOF '(' expr ')'
  162            | BITSOF '(' expr ')'

  163 equalOp: EQUALS
  164        | NOT_EQUALS

  165 inequalOp: '<'
  166          | '>'
  167          | LTE
  168          | GTE

  169 shiftOp: LEFT_SHIFT
  170        | RIGHT_SHIFT

  171 addOp: '+'
  172      | '-'

  173 exprOp: EXP

  174 logOp: LOG

  175 sqrtOp: SQRT

  176 floorOp: FLOOR

  177 prodOp: '*'
  178       | '/'
  179       | '%'

  180 unaryOp: '+'
  181        | '-'
  182        | '!'
  183        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 182
'#' (35) 66
'%' (37) 179
'&' (38) 130
'(' (40) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 145 146 147 148 159 160 161 162
')' (41) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 145 146 147 148 159 160 161 162
'*' (42) 177
'+' (43) 171 180
',' (44) 22 44 63 104 106 118
'-' (45) 172 181
'.' (46) 150
'/' (47) 178
':' (58) 60 111 113 120
';' (59) 41 42 53 54 55 56 57 73 77 78 79 80 81
'<' (60) 165
'=' (61) 47 55 56 108
'>' (62) 166
'?' (63) 120
'@' (64) 153
'[' (91) 14 15 18 110 111 112 113
']' (93) 14 15 18 110 111 112 113
'^' (94) 128
'{' (123) 32 34 35 85 115
'|' (124) 126
'}' (125) 32 34 35 85 115
'~' (126) 183
error (256)
ATTENTION (258) 86
BITSOF (259) 162
BOOLEAN (260) 10 13
FLOAT (261) 11
DOUBLE (262) 12
CAT (263) 160
CLOSE (264) 87
COPY (265) 94
DONE (266) 88
ELSE (267) 76 84
EOS (268) 67
EQUALS (269) 163
FALSE (270) 156
GOTO (271) 77
GTE (272) 168
ID_ (273) 19 24 45 47 49 60 65 66 67 77 87 101 109 110 111 112 113
IF (274) 76 83 84
INPUT (275) 25
LEFT_SHIFT (276) 169
LOGIC_AND (277) 124
LOGIC_OR (278) 122
LTE (279) 167
NOT_EQUALS (280) 164
NUM (281) 154
OUTPUT (282) 26
PARAM (283) 27
PASS_THROUGH_EXCEPTION (284) 30
PRINTF (285) 89
RIGHT_SHIFT (286) 170
SEGMENT_R_ (287) 95
SEGMENT_RW_ (288) 97
SEGMENT_SEQ_R_ (289) 98
SEGMENT_SEQ_RW_ (290) 100
SEGMENT_SEQ_W_ (291) 99
SEGMENT_W_ (292) 96
SIGNED (293) 16
STATE (294) 60
STAY (295) 78
STRING (296) 89
TRUE (297) 155
UNSIGNED (298) 17
WIDTHOF (299) 161
EXP (300) 173
LOG (301) 174
SQRT (302) 175
FLOOR (303) 176


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
start (76)
    on left: 1, on right: 0
operators_opt (77)
    on left: 2 3, on right: 1
operators (78)
    on left: 4 5, on right: 2 4
operator (79)
    on left: 7, on right: 4 5
@1 (80)
    on left: 6, on right: 7
type_opt (81)
    on left: 8 9, on right: 7
type (82)
    on left: 10 11 12 13 14 15, on right: 8 24 41 147
sizedType (83)
    on left: 16 17, on right: 14 15 148
arraySize (84)
    on left: 18, on right: 13 15
opSignature (85)
    on left: 19, on right: 7
ioDecls_opt (86)
    on left: 20 21, on right: 19
ioDecls (87)
    on left: 22 23, on right: 20 22
ioDecl (88)
    on left: 24, on right: 22 23
ioKind (89)
    on left: 25 26 27, on right: 24
exception_opt (90)
    on left: 28 29, on right: 7
exception (91)
    on left: 30, on right: 28
operatorBody (92)
    on left: 32 34 35, on right: 7
@2 (93)
    on left: 31, on right: 32
@3 (94)
    on left: 33, on right: 34
typeDecls_opt (95)
    on left: 36 37, on right: 32 34 35 85
typeDecls (96)
    on left: 38 40, on right: 36 38
@4 (97)
    on left: 39, on right: 40
typeDecl (98)
    on left: 41 42, on right: 38 40
typeDeclElems (99)
    on left: 43 44, on right: 41 44
typeDeclElem (100)
    on left: 45 47 49, on right: 43 44
@5 (101)
    on left: 46, on right: 47
@6 (102)
    on left: 48, on right: 49
callsOrAssigns (103)
    on left: 50 51, on right: 34 50
callOrAssign (104)
    on left: 52 53, on right: 50
callOrAssign_nonEmpty (105)
    on left: 54 55 56 57, on right: 51 52
states (106)
    on left: 58 59, on right: 32 58
stateCase (107)
    on left: 60, on right: 58 59
stateVars_opt (108)
    on left: 61 62, on right: 60
stateVars (109)
    on left: 63 64, on right: 61 63
stateVar (110)
    on left: 65 66 67, on right: 63 64
stmts_opt (111)
    on left: 68 69, on right: 60 85
stmts (112)
    on left: 70 71, on right: 68 70
stmt (113)
    on left: 72 73, on right: 70 83
stmt_nonEmpty (114)
    on left: 74 75, on right: 71 72
matchedStmt (115)
    on left: 76 77 78 79 80 81 82, on right: 74 76 84
unmatchedStmt (116)
    on left: 83 84, on right: 75 84
stmtBlock (117)
    on left: 85, on right: 82
builtinStmtBehav (118)
    on left: 86 87 88 89 90 91, on right: 80
builtinStmtCompose (119)
    on left: 92 93, on right: 57
copyStmt (120)
    on left: 94, on right: 90 92
segmentStmt (121)
    on left: 95 96 97 98 99 100, on right: 91 93
call (122)
    on left: 101, on right: 54 55 81 157
args_opt (123)
    on left: 102 103, on right: 101
more_args_opt (124)
    on left: 104 105, on right: 89
args (125)
    on left: 106 107, on right: 94 95 96 97 98 99 100 102 104 106 160
assign (126)
    on left: 108, on right: 79
lvalue (127)
    on left: 109 110 111 112 113, on right: 55 56 108 152 153
expr (128)
    on left: 114 115, on right: 14 15 18 47 49 66 76 83 84 86 106 107
    108 110 111 112 113 143 144 145 146 159 161 162
condExprs_opt (129)
    on left: 116 117, on right: 115
condExprs (130)
    on left: 118 119, on right: 116 118
condExpr (131)
    on left: 120 121, on right: 114 118 119 120
logOrExpr (132)
    on left: 122 123, on right: 120 121 122
logAndExpr (133)
    on left: 124 125, on right: 122 123 124
bitOrExpr (134)
    on left: 126 127, on right: 124 125 126
bitXorExpr (135)
    on left: 128 129, on right: 126 127 128
bitAndExpr (136)
    on left: 130 131, on right: 128 129 130
equalExpr (137)
    on left: 132 133, on right: 130 131 132
inequalExpr (138)
    on left: 134 135, on right: 132 133 134
shiftExpr (139)
    on left: 136 137, on right: 134 135 136
addExpr (140)
    on left: 138 139, on right: 136 137 138
prodExpr (141)
    on left: 140 141, on right: 138 139 140
unaryExpr (142)
    on left: 142 143 144 145 146 147 148 149, on right: 140 141
fixedExpr (143)
    on left: 150 151, on right: 142 147 148 149
atomExpr (144)
    on left: 152 153 154 155 156 157 158 159, on right: 150 151 153
builtinExpr (145)
    on left: 160 161 162, on right: 158
equalOp (146)
    on left: 163 164, on right: 132
inequalOp (147)
    on left: 165 166 167 168, on right: 134
shiftOp (148)
    on left: 169 170, on right: 136
addOp (149)
    on left: 171 172, on right: 138
exprOp (150)
    on left: 173, on right: 143
logOp (151)
    on left: 174, on right: 144
sqrtOp (152)
    on left: 175, on right: 145
floorOp (153)
    on left: 176, on right: 146
prodOp (154)
    on left: 177 178 179, on right: 140
unaryOp (155)
    on left: 180 181 182 183, on right: 142


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 6
    operators_opt  go to state 7
    operators      go to state 8
    operator       go to state 9
    type_opt       go to state 10
    type           go to state 11
    sizedType      go to state 12


state 1

   10 type: BOOLEAN .
   13     | BOOLEAN . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 10 (type)

    arraySize  go to state 14


state 2

   11 type: FLOAT .

    $default  reduce using rule 11 (type)


state 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


state 4

   16 sizedType: SIGNED .

    $default  reduce using rule 16 (sizedType)


state 5

   17 sizedType: UNSIGNED .

    $default  reduce using rule 17 (sizedType)


state 6

    0 $accept: start . $end

    $end  shift, and go to state 15


state 7

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 8

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 16
    type_opt   go to state 10
    type       go to state 11
    sizedType  go to state 12


state 9

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 10

    7 operator: type_opt . opSignature @1 operatorBody exception_opt

    ID_  shift, and go to state 17

    opSignature  go to state 18


state 11

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 12

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 19

    arraySize  go to state 20


state 13

   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 40
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 14

   13 type: BOOLEAN arraySize .

    $default  reduce using rule 13 (type)


state 15

    0 $accept: start $end .

    $default  accept


state 16

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 17

   19 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 61


state 18

    7 operator: type_opt opSignature . @1 operatorBody exception_opt

    $default  reduce using rule 6 (@1)

    @1  go to state 62


state 19

   14 type: sizedType '[' . expr ']'
   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 63
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 20

   15 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 64


state 21

  162 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 65


state 22

  160 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 66


state 23

  156 atomExpr: FALSE .

    $default  reduce using rule 156 (atomExpr)


state 24

  101 call: ID_ . '(' args_opt ')'
  109 lvalue: ID_ .
  110       | ID_ . '[' expr ']'
  111       | ID_ . '[' expr ':' expr ']'
  112       | ID_ . '[' expr ']' '[' expr ']'
  113       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 109 (lvalue)


state 25

  154 atomExpr: NUM .

    $default  reduce using rule 154 (atomExpr)


state 26

  155 atomExpr: TRUE .

    $default  reduce using rule 155 (atomExpr)


state 27

  147 unaryExpr: '(' . type ')' fixedExpr
  148          | '(' . sizedType ')' fixedExpr
  159 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 21
    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    CAT       shift, and go to state 22
    FALSE     shift, and go to state 23
    ID_       shift, and go to state 24
    NUM       shift, and go to state 25
    SIGNED    shift, and go to state 4
    TRUE      shift, and go to state 26
    UNSIGNED  shift, and go to state 5
    '('       shift, and go to state 27
    WIDTHOF   shift, and go to state 28
    '{'       shift, and go to state 29
    '-'       shift, and go to state 30
    '+'       shift, and go to state 31
    '~'       shift, and go to state 32
    '!'       shift, and go to state 33
    EXP       shift, and go to state 34
    LOG       shift, and go to state 35
    SQRT      shift, and go to state 36
    FLOOR     shift, and go to state 37

    type         go to state 69
    sizedType    go to state 70
    call         go to state 38
    lvalue       go to state 39
    expr         go to state 71
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 28

  161 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 72


state 29

  115 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    $default  reduce using rule 117 (condExprs_opt)

    call           go to state 38
    lvalue         go to state 39
    condExprs_opt  go to state 73
    condExprs      go to state 74
    condExpr       go to state 75
    logOrExpr      go to state 42
    logAndExpr     go to state 43
    bitOrExpr      go to state 44
    bitXorExpr     go to state 45
    bitAndExpr     go to state 46
    equalExpr      go to state 47
    inequalExpr    go to state 48
    shiftExpr      go to state 49
    addExpr        go to state 50
    prodExpr       go to state 51
    unaryExpr      go to state 52
    fixedExpr      go to state 53
    atomExpr       go to state 54
    builtinExpr    go to state 55
    exprOp         go to state 56
    logOp          go to state 57
    sqrtOp         go to state 58
    floorOp        go to state 59
    unaryOp        go to state 60


state 30

  181 unaryOp: '-' .

    $default  reduce using rule 181 (unaryOp)


state 31

  180 unaryOp: '+' .

    $default  reduce using rule 180 (unaryOp)


state 32

  183 unaryOp: '~' .

    $default  reduce using rule 183 (unaryOp)


state 33

  182 unaryOp: '!' .

    $default  reduce using rule 182 (unaryOp)


state 34

  173 exprOp: EXP .

    $default  reduce using rule 173 (exprOp)


state 35

  174 logOp: LOG .

    $default  reduce using rule 174 (logOp)


state 36

  175 sqrtOp: SQRT .

    $default  reduce using rule 175 (sqrtOp)


state 37

  176 floorOp: FLOOR .

    $default  reduce using rule 176 (floorOp)


state 38

  157 atomExpr: call .

    $default  reduce using rule 157 (atomExpr)


state 39

  152 atomExpr: lvalue .
  153         | lvalue . '@' atomExpr

    '@'  shift, and go to state 76

    $default  reduce using rule 152 (atomExpr)


state 40

   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 77


state 41

  114 expr: condExpr .

    $default  reduce using rule 114 (expr)


state 42

  120 condExpr: logOrExpr . '?' condExpr ':' condExpr
  121         | logOrExpr .
  122 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 78
    '?'       shift, and go to state 79

    $default  reduce using rule 121 (condExpr)


state 43

  123 logOrExpr: logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 80

    $default  reduce using rule 123 (logOrExpr)


state 44

  125 logAndExpr: bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 81

    $default  reduce using rule 125 (logAndExpr)


state 45

  127 bitOrExpr: bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 82

    $default  reduce using rule 127 (bitOrExpr)


state 46

  129 bitXorExpr: bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 83

    $default  reduce using rule 129 (bitXorExpr)


state 47

  131 bitAndExpr: equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 84
    NOT_EQUALS  shift, and go to state 85

    $default  reduce using rule 131 (bitAndExpr)

    equalOp  go to state 86


state 48

  133 equalExpr: inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 87
    LTE  shift, and go to state 88
    '<'  shift, and go to state 89
    '>'  shift, and go to state 90

    $default  reduce using rule 133 (equalExpr)

    inequalOp  go to state 91


state 49

  135 inequalExpr: shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 92
    RIGHT_SHIFT  shift, and go to state 93

    $default  reduce using rule 135 (inequalExpr)

    shiftOp  go to state 94


state 50

  137 shiftExpr: addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 95
    '+'  shift, and go to state 96

    $default  reduce using rule 137 (shiftExpr)

    addOp  go to state 97


state 51

  139 addExpr: prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    $default  reduce using rule 139 (addExpr)

    prodOp  go to state 101


state 52

  141 prodExpr: unaryExpr .

    $default  reduce using rule 141 (prodExpr)


state 53

  149 unaryExpr: fixedExpr .

    $default  reduce using rule 149 (unaryExpr)


state 54

  150 fixedExpr: atomExpr . '.' atomExpr
  151          | atomExpr .

    '.'  shift, and go to state 102

    $default  reduce using rule 151 (fixedExpr)


state 55

  158 atomExpr: builtinExpr .

    $default  reduce using rule 158 (atomExpr)


state 56

  143 unaryExpr: exprOp . '(' expr ')'

    '('  shift, and go to state 103


state 57

  144 unaryExpr: logOp . '(' expr ')'

    '('  shift, and go to state 104


state 58

  145 unaryExpr: sqrtOp . '(' expr ')'

    '('  shift, and go to state 105


state 59

  146 unaryExpr: floorOp . '(' expr ')'

    '('  shift, and go to state 106


state 60

  142 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 107
    WIDTHOF  shift, and go to state 28

    call         go to state 38
    lvalue       go to state 39
    fixedExpr    go to state 108
    atomExpr     go to state 54
    builtinExpr  go to state 55


state 61

   19 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 109
    OUTPUT  shift, and go to state 110
    PARAM   shift, and go to state 111

    $default  reduce using rule 21 (ioDecls_opt)

    ioDecls_opt  go to state 112
    ioDecls      go to state 113
    ioDecl       go to state 114
    ioKind       go to state 115


state 62

    7 operator: type_opt opSignature @1 . operatorBody exception_opt

    '{'  shift, and go to state 116

    operatorBody  go to state 117


state 63

   14 type: sizedType '[' expr . ']'
   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 118


state 64

   15 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 119
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 65

  162 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 120
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 66

  160 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 121
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 67

  101 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    $default  reduce using rule 103 (args_opt)

    call         go to state 38
    args_opt     go to state 123
    args         go to state 124
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 68

  110 lvalue: ID_ '[' . expr ']'
  111       | ID_ '[' . expr ':' expr ']'
  112       | ID_ '[' . expr ']' '[' expr ']'
  113       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 125
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 69

  147 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 126


state 70

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'
  148 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 127
    '['  shift, and go to state 19

    arraySize  go to state 20


state 71

  159 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 128


state 72

  161 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 129
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 73

  115 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 130


state 74

  116 condExprs_opt: condExprs .
  118 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 131

    $default  reduce using rule 116 (condExprs_opt)


state 75

  119 condExprs: condExpr .

    $default  reduce using rule 119 (condExprs)


state 76

  153 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 107
    WIDTHOF  shift, and go to state 28

    call         go to state 38
    lvalue       go to state 39
    atomExpr     go to state 132
    builtinExpr  go to state 55


state 77

   18 arraySize: '[' expr ']' .

    $default  reduce using rule 18 (arraySize)


state 78

  122 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    logAndExpr   go to state 133
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 79

  120 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    condExpr     go to state 134
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 80

  124 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    bitOrExpr    go to state 135
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 81

  126 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    bitXorExpr   go to state 136
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 82

  128 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    bitAndExpr   go to state 137
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 83

  130 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    equalExpr    go to state 138
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 84

  163 equalOp: EQUALS .

    $default  reduce using rule 163 (equalOp)


state 85

  164 equalOp: NOT_EQUALS .

    $default  reduce using rule 164 (equalOp)


state 86

  132 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    inequalExpr  go to state 139
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 87

  168 inequalOp: GTE .

    $default  reduce using rule 168 (inequalOp)


state 88

  167 inequalOp: LTE .

    $default  reduce using rule 167 (inequalOp)


state 89

  165 inequalOp: '<' .

    $default  reduce using rule 165 (inequalOp)


state 90

  166 inequalOp: '>' .

    $default  reduce using rule 166 (inequalOp)


state 91

  134 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    shiftExpr    go to state 140
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 92

  169 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 169 (shiftOp)


state 93

  170 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 170 (shiftOp)


state 94

  136 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    addExpr      go to state 141
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 95

  172 addOp: '-' .

    $default  reduce using rule 172 (addOp)


state 96

  171 addOp: '+' .

    $default  reduce using rule 171 (addOp)


state 97

  138 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    prodExpr     go to state 142
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 98

  179 prodOp: '%' .

    $default  reduce using rule 179 (prodOp)


state 99

  177 prodOp: '*' .

    $default  reduce using rule 177 (prodOp)


state 100

  178 prodOp: '/' .

    $default  reduce using rule 178 (prodOp)


state 101

  140 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    unaryExpr    go to state 143
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 102

  150 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 107
    WIDTHOF  shift, and go to state 28

    call         go to state 38
    lvalue       go to state 39
    atomExpr     go to state 144
    builtinExpr  go to state 55


state 103

  143 unaryExpr: exprOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 145
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 104

  144 unaryExpr: logOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 146
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 105

  145 unaryExpr: sqrtOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 147
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 106

  146 unaryExpr: floorOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 148
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 107

  159 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 71
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 108

  142 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 142 (unaryExpr)


state 109

   25 ioKind: INPUT .

    $default  reduce using rule 25 (ioKind)


state 110

   26 ioKind: OUTPUT .

    $default  reduce using rule 26 (ioKind)


state 111

   27 ioKind: PARAM .

    $default  reduce using rule 27 (ioKind)


state 112

   19 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 149


state 113

   20 ioDecls_opt: ioDecls .
   22 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 150

    $default  reduce using rule 20 (ioDecls_opt)


state 114

   23 ioDecls: ioDecl .

    $default  reduce using rule 23 (ioDecls)


state 115

   24 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    type       go to state 151
    sizedType  go to state 12


state 116

   32 operatorBody: '{' . typeDecls_opt @2 states '}'
   34             | '{' . typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 152
    typeDecls      go to state 153
    @4             go to state 154


state 117

    7 operator: type_opt opSignature @1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 155

    $default  reduce using rule 29 (exception_opt)

    exception_opt  go to state 156
    exception      go to state 157


state 118

   14 type: sizedType '[' expr ']' .
   18 arraySize: '[' expr ']' .

    '['       reduce using rule 18 (arraySize)
    $default  reduce using rule 14 (type)


state 119

   15 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 158


state 120

  162 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 159


state 121

  106 args: args . ',' expr
  160 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 160
    ','  shift, and go to state 161


state 122

  107 args: expr .

    $default  reduce using rule 107 (args)


state 123

  101 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 162


state 124

  102 args_opt: args .
  106 args: args . ',' expr

    ','  shift, and go to state 161

    $default  reduce using rule 102 (args_opt)


state 125

  110 lvalue: ID_ '[' expr . ']'
  111       | ID_ '[' expr . ':' expr ']'
  112       | ID_ '[' expr . ']' '[' expr ']'
  113       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 163
    ':'  shift, and go to state 164


state 126

  147 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 107
    WIDTHOF  shift, and go to state 28

    call         go to state 38
    lvalue       go to state 39
    fixedExpr    go to state 165
    atomExpr     go to state 54
    builtinExpr  go to state 55


state 127

  148 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 107
    WIDTHOF  shift, and go to state 28

    call         go to state 38
    lvalue       go to state 39
    fixedExpr    go to state 166
    atomExpr     go to state 54
    builtinExpr  go to state 55


state 128

  159 atomExpr: '(' expr ')' .

    $default  reduce using rule 159 (atomExpr)


state 129

  161 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 167


state 130

  115 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 115 (expr)


state 131

  118 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    condExpr     go to state 168
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 132

  153 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 153 (atomExpr)


state 133

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 80

    $default  reduce using rule 122 (logOrExpr)


state 134

  120 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 169


state 135

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 81

    $default  reduce using rule 124 (logAndExpr)


state 136

  126 bitOrExpr: bitOrExpr '|' bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 82

    $default  reduce using rule 126 (bitOrExpr)


state 137

  128 bitXorExpr: bitXorExpr '^' bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 83

    $default  reduce using rule 128 (bitXorExpr)


state 138

  130 bitAndExpr: bitAndExpr '&' equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 84
    NOT_EQUALS  shift, and go to state 85

    $default  reduce using rule 130 (bitAndExpr)

    equalOp  go to state 86


state 139

  132 equalExpr: equalExpr equalOp inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 87
    LTE  shift, and go to state 88
    '<'  shift, and go to state 89
    '>'  shift, and go to state 90

    $default  reduce using rule 132 (equalExpr)

    inequalOp  go to state 91


state 140

  134 inequalExpr: inequalExpr inequalOp shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 92
    RIGHT_SHIFT  shift, and go to state 93

    $default  reduce using rule 134 (inequalExpr)

    shiftOp  go to state 94


state 141

  136 shiftExpr: shiftExpr shiftOp addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 95
    '+'  shift, and go to state 96

    $default  reduce using rule 136 (shiftExpr)

    addOp  go to state 97


state 142

  138 addExpr: addExpr addOp prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    $default  reduce using rule 138 (addExpr)

    prodOp  go to state 101


state 143

  140 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 140 (prodExpr)


state 144

  150 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 150 (fixedExpr)


state 145

  143 unaryExpr: exprOp '(' expr . ')'

    ')'  shift, and go to state 170


state 146

  144 unaryExpr: logOp '(' expr . ')'

    ')'  shift, and go to state 171


state 147

  145 unaryExpr: sqrtOp '(' expr . ')'

    ')'  shift, and go to state 172


state 148

  146 unaryExpr: floorOp '(' expr . ')'

    ')'  shift, and go to state 173


state 149

   19 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 19 (opSignature)


state 150

   22 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 109
    OUTPUT  shift, and go to state 110
    PARAM   shift, and go to state 111

    ioDecl  go to state 174
    ioKind  go to state 115


state 151

   24 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 175


state 152

   32 operatorBody: '{' typeDecls_opt . @2 states '}'
   34             | '{' typeDecls_opt . @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 176

    STATE     reduce using rule 31 (@2)
    $default  reduce using rule 33 (@3)

    @2  go to state 177
    @3  go to state 178


state 153

   36 typeDecls_opt: typeDecls .
   38 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 179

    $default  reduce using rule 36 (typeDecls_opt)

    type       go to state 180
    sizedType  go to state 12
    typeDecl   go to state 181


state 154

   40 typeDecls: @4 . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 179

    type       go to state 180
    sizedType  go to state 12
    typeDecl   go to state 182


state 155

   30 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 30 (exception)


state 156

    7 operator: type_opt opSignature @1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 157

   28 exception_opt: exception .

    $default  reduce using rule 28 (exception_opt)


state 158

   15 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 15 (type)


state 159

  162 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 162 (builtinExpr)


state 160

  160 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 160 (builtinExpr)


state 161

  106 args: args ',' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 183
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 162

  101 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 101 (call)


state 163

  110 lvalue: ID_ '[' expr ']' .
  112       | ID_ '[' expr ']' . '[' expr ']'
  113       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 184

    $default  reduce using rule 110 (lvalue)


state 164

  111 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 185
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 165

  147 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 147 (unaryExpr)


state 166

  148 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 148 (unaryExpr)


state 167

  161 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 161 (builtinExpr)


state 168

  118 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 118 (condExprs)


state 169

  120 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    condExpr     go to state 186
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 170

  143 unaryExpr: exprOp '(' expr ')' .

    $default  reduce using rule 143 (unaryExpr)


state 171

  144 unaryExpr: logOp '(' expr ')' .

    $default  reduce using rule 144 (unaryExpr)


state 172

  145 unaryExpr: sqrtOp '(' expr ')' .

    $default  reduce using rule 145 (unaryExpr)


state 173

  146 unaryExpr: floorOp '(' expr ')' .

    $default  reduce using rule 146 (unaryExpr)


state 174

   22 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 22 (ioDecls)


state 175

   24 ioDecl: ioKind type ID_ .

    $default  reduce using rule 24 (ioDecl)


state 176

   35 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 35 (operatorBody)


state 177

   32 operatorBody: '{' typeDecls_opt @2 . states '}'

    STATE  shift, and go to state 187

    states     go to state 188
    stateCase  go to state 189


state 178

   34 operatorBody: '{' typeDecls_opt @3 . callsOrAssigns '}'

    COPY             shift, and go to state 190
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196

    callsOrAssigns         go to state 197
    callOrAssign_nonEmpty  go to state 198
    builtinStmtCompose     go to state 199
    copyStmt               go to state 200
    segmentStmt            go to state 201
    call                   go to state 202
    lvalue                 go to state 203


state 179

   42 typeDecl: ';' .

    $default  reduce using rule 42 (typeDecl)


state 180

   41 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 204

    typeDeclElems  go to state 205
    typeDeclElem   go to state 206


state 181

   38 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 38 (typeDecls)


state 182

   40 typeDecls: @4 typeDecl .

    $default  reduce using rule 40 (typeDecls)


state 183

  106 args: args ',' expr .

    $default  reduce using rule 106 (args)


state 184

  112 lvalue: ID_ '[' expr ']' '[' . expr ']'
  113       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 207
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 185

  111 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 208


state 186

  120 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 120 (condExpr)


state 187

   60 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 209


state 188

   32 operatorBody: '{' typeDecls_opt @2 states . '}'
   58 states: states . stateCase

    STATE  shift, and go to state 187
    '}'    shift, and go to state 210

    stateCase  go to state 211


state 189

   59 states: stateCase .

    $default  reduce using rule 59 (states)


state 190

   94 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 212


state 191

   95 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 213


state 192

   97 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 214


state 193

   98 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 215


state 194

  100 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 216


state 195

   99 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 217


state 196

   96 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 218


state 197

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns . '}'
   50 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 190
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    '}'              shift, and go to state 219
    ';'              shift, and go to state 220

    callOrAssign           go to state 221
    callOrAssign_nonEmpty  go to state 222
    builtinStmtCompose     go to state 199
    copyStmt               go to state 200
    segmentStmt            go to state 201
    call                   go to state 202
    lvalue                 go to state 203


state 198

   51 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 51 (callsOrAssigns)


state 199

   57 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 223


state 200

   92 builtinStmtCompose: copyStmt .

    $default  reduce using rule 92 (builtinStmtCompose)


state 201

   93 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 93 (builtinStmtCompose)


state 202

   54 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 224


state 203

   55 callOrAssign_nonEmpty: lvalue . '=' call ';'
   56                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 225


state 204

   45 typeDeclElem: ID_ .
   47             | ID_ . @5 '=' expr
   49             | ID_ . @6 '(' expr ')'

    '('       reduce using rule 48 (@6)
    '='       reduce using rule 46 (@5)
    $default  reduce using rule 45 (typeDeclElem)

    @5  go to state 226
    @6  go to state 227


state 205

   41 typeDecl: type typeDeclElems . ';'
   44 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 228
    ','  shift, and go to state 229


state 206

   43 typeDeclElems: typeDeclElem .

    $default  reduce using rule 43 (typeDeclElems)


state 207

  112 lvalue: ID_ '[' expr ']' '[' expr . ']'
  113       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 230
    ':'  shift, and go to state 231


state 208

  111 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 111 (lvalue)


state 209

   60 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 232


state 210

   32 operatorBody: '{' typeDecls_opt @2 states '}' .

    $default  reduce using rule 32 (operatorBody)


state 211

   58 states: states stateCase .

    $default  reduce using rule 58 (states)


state 212

   94 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 233
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 213

   95 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 234
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 214

   97 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 235
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 215

   98 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 236
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 216

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 237
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 217

   99 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 238
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 218

   96 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 239
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 219

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}' .

    $default  reduce using rule 34 (operatorBody)


state 220

   53 callOrAssign: ';' .

    $default  reduce using rule 53 (callOrAssign)


state 221

   50 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 50 (callsOrAssigns)


state 222

   52 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 52 (callOrAssign)


state 223

   57 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 57 (callOrAssign_nonEmpty)


state 224

   54 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 54 (callOrAssign_nonEmpty)


state 225

   55 callOrAssign_nonEmpty: lvalue '=' . call ';'
   56                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 24

    call    go to state 240
    lvalue  go to state 241


state 226

   47 typeDeclElem: ID_ @5 . '=' expr

    '='  shift, and go to state 242


state 227

   49 typeDeclElem: ID_ @6 . '(' expr ')'

    '('  shift, and go to state 243


state 228

   41 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 41 (typeDecl)


state 229

   44 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 204

    typeDeclElem  go to state 244


state 230

  112 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 112 (lvalue)


state 231

  113 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 245
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 232

   60 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS  shift, and go to state 246
    ID_  shift, and go to state 247

    $default  reduce using rule 62 (stateVars_opt)

    stateVars_opt  go to state 248
    stateVars      go to state 249
    stateVar       go to state 250


state 233

   94 copyStmt: COPY '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 251
    ','  shift, and go to state 161


state 234

   95 segmentStmt: SEGMENT_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 252
    ','  shift, and go to state 161


state 235

   97 segmentStmt: SEGMENT_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 253
    ','  shift, and go to state 161


state 236

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 254
    ','  shift, and go to state 161


state 237

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 255
    ','  shift, and go to state 161


state 238

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 256
    ','  shift, and go to state 161


state 239

   96 segmentStmt: SEGMENT_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 257
    ','  shift, and go to state 161


state 240

   55 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 258


state 241

   56 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 259


state 242

   47 typeDeclElem: ID_ @5 '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 260
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 243

   49 typeDeclElem: ID_ @6 '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 261
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 244

   44 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 44 (typeDeclElems)


state 245

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 262


state 246

   67 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 263


state 247

   65 stateVar: ID_ .
   66         | ID_ . '#' expr

    '#'  shift, and go to state 264

    $default  reduce using rule 65 (stateVar)


state 248

   60 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 265


state 249

   61 stateVars_opt: stateVars .
   63 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 266

    $default  reduce using rule 61 (stateVars_opt)


state 250

   64 stateVars: stateVar .

    $default  reduce using rule 64 (stateVars)


state 251

   94 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 94 (copyStmt)


state 252

   95 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 95 (segmentStmt)


state 253

   97 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 97 (segmentStmt)


state 254

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 255

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 100 (segmentStmt)


state 256

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 99 (segmentStmt)


state 257

   96 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 96 (segmentStmt)


state 258

   55 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 259

   56 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 56 (callOrAssign_nonEmpty)


state 260

   47 typeDeclElem: ID_ @5 '=' expr .

    $default  reduce using rule 47 (typeDeclElem)


state 261

   49 typeDeclElem: ID_ @6 '(' expr . ')'

    ')'  shift, and go to state 267


state 262

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 113 (lvalue)


state 263

   67 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 268


state 264

   66 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 269
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 265

   60 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 270


state 266

   63 stateVars: stateVars ',' . stateVar

    EOS  shift, and go to state 246
    ID_  shift, and go to state 247

    stateVar  go to state 271


state 267

   49 typeDeclElem: ID_ @6 '(' expr ')' .

    $default  reduce using rule 49 (typeDeclElem)


state 268

   67 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 272


state 269

   66 stateVar: ID_ '#' expr .

    $default  reduce using rule 66 (stateVar)


state 270

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 273
    CLOSE            shift, and go to state 274
    COPY             shift, and go to state 190
    DONE             shift, and go to state 275
    GOTO             shift, and go to state 276
    ID_              shift, and go to state 24
    IF               shift, and go to state 277
    PRINTF           shift, and go to state 278
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    STAY             shift, and go to state 279
    '{'              shift, and go to state 280

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 281
    stmts             go to state 282
    stmt_nonEmpty     go to state 283
    matchedStmt       go to state 284
    unmatchedStmt     go to state 285
    stmtBlock         go to state 286
    builtinStmtBehav  go to state 287
    copyStmt          go to state 288
    segmentStmt       go to state 289
    call              go to state 290
    assign            go to state 291
    lvalue            go to state 292


state 271

   63 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 63 (stateVars)


state 272

   67 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 67 (stateVar)


state 273

   86 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 293


state 274

   87 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 294


state 275

   88 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 295


state 276

   77 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 296


state 277

   76 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF . '(' expr ')' stmt
   84              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 297


state 278

   89 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 298


state 279

   78 matchedStmt: STAY . ';'

    ';'  shift, and go to state 299


state 280

   85 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 300
    typeDecls      go to state 153
    @4             go to state 154


state 281

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 60 (stateCase)


state 282

   68 stmts_opt: stmts .
   70 stmts: stmts . stmt

    ATTENTION        shift, and go to state 273
    CLOSE            shift, and go to state 274
    COPY             shift, and go to state 190
    DONE             shift, and go to state 275
    GOTO             shift, and go to state 276
    ID_              shift, and go to state 24
    IF               shift, and go to state 277
    PRINTF           shift, and go to state 278
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    STAY             shift, and go to state 279
    '{'              shift, and go to state 280
    ';'              shift, and go to state 301

    $default  reduce using rule 68 (stmts_opt)

    stmt              go to state 302
    stmt_nonEmpty     go to state 303
    matchedStmt       go to state 284
    unmatchedStmt     go to state 285
    stmtBlock         go to state 286
    builtinStmtBehav  go to state 287
    copyStmt          go to state 288
    segmentStmt       go to state 289
    call              go to state 290
    assign            go to state 291
    lvalue            go to state 292


state 283

   71 stmts: stmt_nonEmpty .

    $default  reduce using rule 71 (stmts)


state 284

   74 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 74 (stmt_nonEmpty)


state 285

   75 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 75 (stmt_nonEmpty)


state 286

   82 matchedStmt: stmtBlock .

    $default  reduce using rule 82 (matchedStmt)


state 287

   80 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 304


state 288

   90 builtinStmtBehav: copyStmt .

    $default  reduce using rule 90 (builtinStmtBehav)


state 289

   91 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 91 (builtinStmtBehav)


state 290

   81 matchedStmt: call . ';'

    ';'  shift, and go to state 305


state 291

   79 matchedStmt: assign . ';'

    ';'  shift, and go to state 306


state 292

  108 assign: lvalue . '=' expr

    '='  shift, and go to state 307


state 293

   86 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 308
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 294

   87 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 309


state 295

   88 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 310


state 296

   77 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 311


state 297

   76 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' . expr ')' stmt
   84              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 312
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 298

   89 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 313


state 299

   78 matchedStmt: STAY ';' .

    $default  reduce using rule 78 (matchedStmt)


state 300

   85 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 273
    CLOSE            shift, and go to state 274
    COPY             shift, and go to state 190
    DONE             shift, and go to state 275
    GOTO             shift, and go to state 276
    ID_              shift, and go to state 24
    IF               shift, and go to state 277
    PRINTF           shift, and go to state 278
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    STAY             shift, and go to state 279
    '{'              shift, and go to state 280

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 314
    stmts             go to state 282
    stmt_nonEmpty     go to state 283
    matchedStmt       go to state 284
    unmatchedStmt     go to state 285
    stmtBlock         go to state 286
    builtinStmtBehav  go to state 287
    copyStmt          go to state 288
    segmentStmt       go to state 289
    call              go to state 290
    assign            go to state 291
    lvalue            go to state 292


state 301

   73 stmt: ';' .

    $default  reduce using rule 73 (stmt)


state 302

   70 stmts: stmts stmt .

    $default  reduce using rule 70 (stmts)


state 303

   72 stmt: stmt_nonEmpty .

    $default  reduce using rule 72 (stmt)


state 304

   80 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 80 (matchedStmt)


state 305

   81 matchedStmt: call ';' .

    $default  reduce using rule 81 (matchedStmt)


state 306

   79 matchedStmt: assign ';' .

    $default  reduce using rule 79 (matchedStmt)


state 307

  108 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    lvalue       go to state 39
    expr         go to state 315
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 308

   86 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 316


state 309

   87 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 317


state 310

   88 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 88 (builtinStmtBehav)


state 311

   77 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 77 (matchedStmt)


state 312

   76 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr . ')' stmt
   84              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 318


state 313

   89 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 319

    $default  reduce using rule 105 (more_args_opt)

    more_args_opt  go to state 320


state 314

   85 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 321


state 315

  108 assign: lvalue '=' expr .

    $default  reduce using rule 108 (assign)


state 316

   86 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 86 (builtinStmtBehav)


state 317

   87 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 87 (builtinStmtBehav)


state 318

   76 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr ')' . stmt
   84              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 273
    CLOSE            shift, and go to state 274
    COPY             shift, and go to state 190
    DONE             shift, and go to state 275
    GOTO             shift, and go to state 276
    ID_              shift, and go to state 24
    IF               shift, and go to state 277
    PRINTF           shift, and go to state 278
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    STAY             shift, and go to state 279
    '{'              shift, and go to state 280
    ';'              shift, and go to state 301

    stmt              go to state 322
    stmt_nonEmpty     go to state 303
    matchedStmt       go to state 323
    unmatchedStmt     go to state 285
    stmtBlock         go to state 286
    builtinStmtBehav  go to state 287
    copyStmt          go to state 288
    segmentStmt       go to state 289
    call              go to state 290
    assign            go to state 291
    lvalue            go to state 292


state 319

  104 more_args_opt: ',' . args

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33
    EXP      shift, and go to state 34
    LOG      shift, and go to state 35
    SQRT     shift, and go to state 36
    FLOOR    shift, and go to state 37

    call         go to state 38
    args         go to state 324
    lvalue       go to state 39
    expr         go to state 122
    condExpr     go to state 41
    logOrExpr    go to state 42
    logAndExpr   go to state 43
    bitOrExpr    go to state 44
    bitXorExpr   go to state 45
    bitAndExpr   go to state 46
    equalExpr    go to state 47
    inequalExpr  go to state 48
    shiftExpr    go to state 49
    addExpr      go to state 50
    prodExpr     go to state 51
    unaryExpr    go to state 52
    fixedExpr    go to state 53
    atomExpr     go to state 54
    builtinExpr  go to state 55
    exprOp       go to state 56
    logOp        go to state 57
    sqrtOp       go to state 58
    floorOp      go to state 59
    unaryOp      go to state 60


state 320

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 325


state 321

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 85 (stmtBlock)


state 322

   83 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 83 (unmatchedStmt)


state 323

   74 stmt_nonEmpty: matchedStmt .
   76 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 326

    $default  reduce using rule 74 (stmt_nonEmpty)


state 324

  104 more_args_opt: ',' args .
  106 args: args . ',' expr

    ','  shift, and go to state 161

    $default  reduce using rule 104 (more_args_opt)


state 325

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 89 (builtinStmtBehav)


state 326

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 273
    CLOSE            shift, and go to state 274
    COPY             shift, and go to state 190
    DONE             shift, and go to state 275
    GOTO             shift, and go to state 276
    ID_              shift, and go to state 24
    IF               shift, and go to state 277
    PRINTF           shift, and go to state 278
    SEGMENT_R_       shift, and go to state 191
    SEGMENT_RW_      shift, and go to state 192
    SEGMENT_SEQ_R_   shift, and go to state 193
    SEGMENT_SEQ_RW_  shift, and go to state 194
    SEGMENT_SEQ_W_   shift, and go to state 195
    SEGMENT_W_       shift, and go to state 196
    STAY             shift, and go to state 279
    '{'              shift, and go to state 280

    matchedStmt       go to state 327
    unmatchedStmt     go to state 328
    stmtBlock         go to state 286
    builtinStmtBehav  go to state 287
    copyStmt          go to state 288
    segmentStmt       go to state 289
    call              go to state 290
    assign            go to state 291
    lvalue            go to state 292


state 327

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 76 (matchedStmt)


state 328

   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 84 (unmatchedStmt)
