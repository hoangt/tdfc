Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 $@1: /* empty */

    7 operator: type_opt opSignature $@1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | FLOAT
   12     | DOUBLE
   13     | DOUBLE arraySize
   14     | BOOLEAN arraySize
   15     | sizedType '[' expr ']'
   16     | sizedType arraySize '[' expr ']'

   17 sizedType: SIGNED
   18          | UNSIGNED

   19 arraySize: '[' expr ']'

   20 opSignature: ID_ '(' ioDecls_opt ')'

   21 ioDecls_opt: ioDecls
   22            | /* empty */

   23 ioDecls: ioDecls ',' ioDecl
   24        | ioDecl

   25 ioDecl: ioKind type ID_

   26 ioKind: INPUT
   27       | OUTPUT
   28       | PARAM

   29 exception_opt: exception
   30              | /* empty */

   31 exception: PASS_THROUGH_EXCEPTION

   32 $@2: /* empty */

   33 operatorBody: '{' typeDecls_opt $@2 states '}'

   34 $@3: /* empty */

   35 operatorBody: '{' typeDecls_opt $@3 callsOrAssigns '}'
   36             | '{' typeDecls_opt '}'

   37 typeDecls_opt: typeDecls
   38              | /* empty */

   39 typeDecls: typeDecls typeDecl

   40 $@4: /* empty */

   41 typeDecls: $@4 typeDecl

   42 typeDecl: type typeDeclElems ';'
   43         | ';'

   44 typeDeclElems: typeDeclElem
   45              | typeDeclElems ',' typeDeclElem

   46 typeDeclElem: ID_

   47 $@5: /* empty */

   48 typeDeclElem: ID_ $@5 '=' expr

   49 $@6: /* empty */

   50 typeDeclElem: ID_ $@6 '(' expr ')'

   51 callsOrAssigns: callsOrAssigns callOrAssign
   52               | callOrAssign_nonEmpty

   53 callOrAssign: callOrAssign_nonEmpty
   54             | ';'

   55 callOrAssign_nonEmpty: call ';'
   56                      | lvalue '=' call ';'
   57                      | lvalue '=' lvalue ';'
   58                      | builtinStmtCompose ';'

   59 states: states stateCase
   60       | stateCase

   61 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   62 stateVars_opt: stateVars
   63              | /* empty */

   64 stateVars: stateVars ',' stateVar
   65          | stateVar

   66 stateVar: ID_
   67         | ID_ '#' expr
   68         | EOS '(' ID_ ')'
   69         | EOFR '(' ID_ ')'

   70 stmts_opt: stmts
   71          | /* empty */

   72 stmts: stmts stmt
   73      | stmt_nonEmpty

   74 stmt: stmt_nonEmpty
   75     | ';'

   76 stmt_nonEmpty: matchedStmt
   77              | unmatchedStmt

   78 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   79            | GOTO ID_ ';'
   80            | STAY ';'
   81            | assign ';'
   82            | builtinStmtBehav ';'
   83            | call ';'
   84            | stmtBlock

   85 unmatchedStmt: IF '(' expr ')' stmt
   86              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   87 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   88 builtinStmtBehav: ATTENTION '(' expr ')'
   89                 | CLOSE '(' ID_ ')'
   90                 | FRAMECLOSE '(' ID_ ')'
   91                 | DONE '(' ')'
   92                 | PRINTF '(' STRING more_args_opt ')'
   93                 | copyStmt
   94                 | segmentStmt

   95 builtinStmtCompose: copyStmt
   96                   | segmentStmt

   97 copyStmt: COPY '(' args ')'

   98 segmentStmt: SEGMENT_R_ '(' args ')'
   99            | SEGMENT_W_ '(' args ')'
  100            | SEGMENT_RW_ '(' args ')'
  101            | SEGMENT_SEQ_R_ '(' args ')'
  102            | SEGMENT_SEQ_W_ '(' args ')'
  103            | SEGMENT_SEQ_RW_ '(' args ')'

  104 call: ID_ '(' args_opt ')'

  105 args_opt: args
  106         | /* empty */

  107 more_args_opt: ',' args
  108              | /* empty */

  109 args: args ',' expr
  110     | expr

  111 assign: lvalue '=' expr

  112 lvalue: ID_
  113       | ID_ '[' expr ']'
  114       | ID_ '[' expr ':' expr ']'
  115       | ID_ '[' expr ']' '[' expr ']'
  116       | ID_ '[' expr ']' '[' expr ':' expr ']'

  117 expr: condExpr
  118     | '{' condExprs_opt '}'

  119 condExprs_opt: condExprs
  120              | /* empty */

  121 condExprs: condExprs ',' condExpr
  122          | condExpr

  123 condExpr: logOrExpr '?' condExpr ':' condExpr
  124         | logOrExpr

  125 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  126          | logAndExpr

  127 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  128           | bitOrExpr

  129 bitOrExpr: bitOrExpr '|' bitXorExpr
  130          | bitXorExpr

  131 bitXorExpr: bitXorExpr '^' bitAndExpr
  132           | bitAndExpr

  133 bitAndExpr: bitAndExpr '&' equalExpr
  134           | equalExpr

  135 equalExpr: equalExpr equalOp inequalExpr
  136          | inequalExpr

  137 inequalExpr: inequalExpr inequalOp shiftExpr
  138            | shiftExpr

  139 shiftExpr: shiftExpr shiftOp addExpr
  140          | addExpr

  141 addExpr: addExpr addOp prodExpr
  142        | prodExpr

  143 prodExpr: prodExpr prodOp unaryExpr
  144         | unaryExpr

  145 unaryExpr: unaryOp fixedExpr
  146          | exprOp '(' expr ')'
  147          | logOp '(' expr ')'
  148          | sqrtOp '(' expr ')'
  149          | absOp '(' expr ')'
  150          | floorOp '(' expr ')'
  151          | '(' type ')' fixedExpr
  152          | '(' sizedType ')' fixedExpr
  153          | floatExpr

  154 floatExpr: fixedExpr

  155 fixedExpr: atomExpr '.' atomExpr
  156          | atomExpr

  157 atomExpr: lvalue
  158         | lvalue '@' atomExpr
  159         | NUM
  160         | NUMDBL
  161         | TRUE
  162         | FALSE
  163         | call
  164         | builtinExpr
  165         | '(' expr ')'

  166 builtinExpr: CAT '(' args ')'
  167            | WIDTHOF '(' expr ')'
  168            | BITSOF '(' expr ')'

  169 equalOp: EQUALS
  170        | NOT_EQUALS

  171 inequalOp: '<'
  172          | '>'
  173          | LTE
  174          | GTE

  175 shiftOp: LEFT_SHIFT
  176        | RIGHT_SHIFT

  177 addOp: '+'
  178      | '-'

  179 exprOp: EXP

  180 logOp: LOG

  181 sqrtOp: SQRT

  182 absOp: ABS

  183 floorOp: FLOOR

  184 prodOp: '*'
  185       | '/'
  186       | '%'

  187 unaryOp: '+'
  188        | '-'
  189        | '!'
  190        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 189
'#' (35) 67
'%' (37) 186
'&' (38) 133
'(' (40) 20 50 61 68 69 78 85 86 88 89 90 91 92 97 98 99 100 101 102
    103 104 146 147 148 149 150 151 152 165 166 167 168
')' (41) 20 50 61 68 69 78 85 86 88 89 90 91 92 97 98 99 100 101 102
    103 104 146 147 148 149 150 151 152 165 166 167 168
'*' (42) 184
'+' (43) 177 187
',' (44) 23 45 64 107 109 121
'-' (45) 178 188
'.' (46) 155
'/' (47) 185
':' (58) 61 114 116 123
';' (59) 42 43 54 55 56 57 58 75 79 80 81 82 83
'<' (60) 171
'=' (61) 48 56 57 111
'>' (62) 172
'?' (63) 123
'@' (64) 158
'[' (91) 15 16 19 113 114 115 116
']' (93) 15 16 19 113 114 115 116
'^' (94) 131
'{' (123) 33 35 36 87 118
'|' (124) 129
'}' (125) 33 35 36 87 118
'~' (126) 190
error (256)
ATTENTION (258) 88
BITSOF (259) 168
BOOLEAN (260) 10 14
FLOAT (261) 11
DOUBLE (262) 12 13
CAT (263) 166
CLOSE (264) 89
FRAMECLOSE (265) 90
COPY (266) 97
DONE (267) 91
ELSE (268) 78 86
EOS (269) 68
EOFR (270) 69
EQUALS (271) 169
FALSE (272) 162
GOTO (273) 79
GTE (274) 174
ID_ (275) 20 25 46 48 50 61 66 67 68 69 79 89 90 104 112 113 114 115
    116
IF (276) 78 85 86
INPUT (277) 26
LEFT_SHIFT (278) 175
LOGIC_AND (279) 127
LOGIC_OR (280) 125
LTE (281) 173
NOT_EQUALS (282) 170
NUM (283) 159
NUMDBL (284) 160
OUTPUT (285) 27
PARAM (286) 28
PASS_THROUGH_EXCEPTION (287) 31
PRINTF (288) 92
RIGHT_SHIFT (289) 176
SEGMENT_R_ (290) 98
SEGMENT_RW_ (291) 100
SEGMENT_SEQ_R_ (292) 101
SEGMENT_SEQ_RW_ (293) 103
SEGMENT_SEQ_W_ (294) 102
SEGMENT_W_ (295) 99
SIGNED (296) 17
STATE (297) 61
STAY (298) 80
STRING (299) 92
TRUE (300) 161
UNSIGNED (301) 18
WIDTHOF (302) 167
EXP (303) 179
LOG (304) 180
SQRT (305) 181
FLOOR (306) 183
ABS (307) 182


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
start (80)
    on left: 1, on right: 0
operators_opt (81)
    on left: 2 3, on right: 1
operators (82)
    on left: 4 5, on right: 2 4
operator (83)
    on left: 7, on right: 4 5
$@1 (84)
    on left: 6, on right: 7
type_opt (85)
    on left: 8 9, on right: 7
type (86)
    on left: 10 11 12 13 14 15 16, on right: 8 25 42 151
sizedType (87)
    on left: 17 18, on right: 15 16 152
arraySize (88)
    on left: 19, on right: 13 14 16
opSignature (89)
    on left: 20, on right: 7
ioDecls_opt (90)
    on left: 21 22, on right: 20
ioDecls (91)
    on left: 23 24, on right: 21 23
ioDecl (92)
    on left: 25, on right: 23 24
ioKind (93)
    on left: 26 27 28, on right: 25
exception_opt (94)
    on left: 29 30, on right: 7
exception (95)
    on left: 31, on right: 29
operatorBody (96)
    on left: 33 35 36, on right: 7
$@2 (97)
    on left: 32, on right: 33
$@3 (98)
    on left: 34, on right: 35
typeDecls_opt (99)
    on left: 37 38, on right: 33 35 36 87
typeDecls (100)
    on left: 39 41, on right: 37 39
$@4 (101)
    on left: 40, on right: 41
typeDecl (102)
    on left: 42 43, on right: 39 41
typeDeclElems (103)
    on left: 44 45, on right: 42 45
typeDeclElem (104)
    on left: 46 48 50, on right: 44 45
$@5 (105)
    on left: 47, on right: 48
$@6 (106)
    on left: 49, on right: 50
callsOrAssigns (107)
    on left: 51 52, on right: 35 51
callOrAssign (108)
    on left: 53 54, on right: 51
callOrAssign_nonEmpty (109)
    on left: 55 56 57 58, on right: 52 53
states (110)
    on left: 59 60, on right: 33 59
stateCase (111)
    on left: 61, on right: 59 60
stateVars_opt (112)
    on left: 62 63, on right: 61
stateVars (113)
    on left: 64 65, on right: 62 64
stateVar (114)
    on left: 66 67 68 69, on right: 64 65
stmts_opt (115)
    on left: 70 71, on right: 61 87
stmts (116)
    on left: 72 73, on right: 70 72
stmt (117)
    on left: 74 75, on right: 72 85
stmt_nonEmpty (118)
    on left: 76 77, on right: 73 74
matchedStmt (119)
    on left: 78 79 80 81 82 83 84, on right: 76 78 86
unmatchedStmt (120)
    on left: 85 86, on right: 77 86
stmtBlock (121)
    on left: 87, on right: 84
builtinStmtBehav (122)
    on left: 88 89 90 91 92 93 94, on right: 82
builtinStmtCompose (123)
    on left: 95 96, on right: 58
copyStmt (124)
    on left: 97, on right: 93 95
segmentStmt (125)
    on left: 98 99 100 101 102 103, on right: 94 96
call (126)
    on left: 104, on right: 55 56 83 163
args_opt (127)
    on left: 105 106, on right: 104
more_args_opt (128)
    on left: 107 108, on right: 92
args (129)
    on left: 109 110, on right: 97 98 99 100 101 102 103 105 107 109
    166
assign (130)
    on left: 111, on right: 81
lvalue (131)
    on left: 112 113 114 115 116, on right: 56 57 111 157 158
expr (132)
    on left: 117 118, on right: 15 16 19 48 50 67 78 85 86 88 109 110
    111 113 114 115 116 146 147 148 149 150 165 167 168
condExprs_opt (133)
    on left: 119 120, on right: 118
condExprs (134)
    on left: 121 122, on right: 119 121
condExpr (135)
    on left: 123 124, on right: 117 121 122 123
logOrExpr (136)
    on left: 125 126, on right: 123 124 125
logAndExpr (137)
    on left: 127 128, on right: 125 126 127
bitOrExpr (138)
    on left: 129 130, on right: 127 128 129
bitXorExpr (139)
    on left: 131 132, on right: 129 130 131
bitAndExpr (140)
    on left: 133 134, on right: 131 132 133
equalExpr (141)
    on left: 135 136, on right: 133 134 135
inequalExpr (142)
    on left: 137 138, on right: 135 136 137
shiftExpr (143)
    on left: 139 140, on right: 137 138 139
addExpr (144)
    on left: 141 142, on right: 139 140 141
prodExpr (145)
    on left: 143 144, on right: 141 142 143
unaryExpr (146)
    on left: 145 146 147 148 149 150 151 152 153, on right: 143 144
floatExpr (147)
    on left: 154, on right: 153
fixedExpr (148)
    on left: 155 156, on right: 145 151 152 154
atomExpr (149)
    on left: 157 158 159 160 161 162 163 164 165, on right: 155 156
    158
builtinExpr (150)
    on left: 166 167 168, on right: 164
equalOp (151)
    on left: 169 170, on right: 135
inequalOp (152)
    on left: 171 172 173 174, on right: 137
shiftOp (153)
    on left: 175 176, on right: 139
addOp (154)
    on left: 177 178, on right: 141
exprOp (155)
    on left: 179, on right: 146
logOp (156)
    on left: 180, on right: 147
sqrtOp (157)
    on left: 181, on right: 148
absOp (158)
    on left: 182, on right: 149
floorOp (159)
    on left: 183, on right: 150
prodOp (160)
    on left: 184 185 186, on right: 143
unaryOp (161)
    on left: 187 188 189 190, on right: 145


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 6
    operators_opt  go to state 7
    operators      go to state 8
    operator       go to state 9
    type_opt       go to state 10
    type           go to state 11
    sizedType      go to state 12


state 1

   10 type: BOOLEAN .
   14     | BOOLEAN . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 10 (type)

    arraySize  go to state 14


state 2

   11 type: FLOAT .

    $default  reduce using rule 11 (type)


state 3

   12 type: DOUBLE .
   13     | DOUBLE . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 12 (type)

    arraySize  go to state 15


state 4

   17 sizedType: SIGNED .

    $default  reduce using rule 17 (sizedType)


state 5

   18 sizedType: UNSIGNED .

    $default  reduce using rule 18 (sizedType)


state 6

    0 $accept: start . $end

    $end  shift, and go to state 16


state 7

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 8

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 17
    type_opt   go to state 10
    type       go to state 11
    sizedType  go to state 12


state 9

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 10

    7 operator: type_opt . opSignature $@1 operatorBody exception_opt

    ID_  shift, and go to state 18

    opSignature  go to state 19


state 11

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 12

   15 type: sizedType . '[' expr ']'
   16     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 20

    arraySize  go to state 21


state 13

   19 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 43
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 14

   14 type: BOOLEAN arraySize .

    $default  reduce using rule 14 (type)


state 15

   13 type: DOUBLE arraySize .

    $default  reduce using rule 13 (type)


state 16

    0 $accept: start $end .

    $default  accept


state 17

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 18

   20 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 66


state 19

    7 operator: type_opt opSignature . $@1 operatorBody exception_opt

    $default  reduce using rule 6 ($@1)

    $@1  go to state 67


state 20

   15 type: sizedType '[' . expr ']'
   19 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 68
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 21

   16 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 69


state 22

  168 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 70


state 23

  166 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 71


state 24

  162 atomExpr: FALSE .

    $default  reduce using rule 162 (atomExpr)


state 25

  104 call: ID_ . '(' args_opt ')'
  112 lvalue: ID_ .
  113       | ID_ . '[' expr ']'
  114       | ID_ . '[' expr ':' expr ']'
  115       | ID_ . '[' expr ']' '[' expr ']'
  116       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 72
    '['  shift, and go to state 73

    $default  reduce using rule 112 (lvalue)


state 26

  159 atomExpr: NUM .

    $default  reduce using rule 159 (atomExpr)


state 27

  160 atomExpr: NUMDBL .

    $default  reduce using rule 160 (atomExpr)


state 28

  161 atomExpr: TRUE .

    $default  reduce using rule 161 (atomExpr)


state 29

  167 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 74


state 30

  151 unaryExpr: '(' . type ')' fixedExpr
  152          | '(' . sizedType ')' fixedExpr
  165 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 22
    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    CAT       shift, and go to state 23
    FALSE     shift, and go to state 24
    ID_       shift, and go to state 25
    NUM       shift, and go to state 26
    NUMDBL    shift, and go to state 27
    SIGNED    shift, and go to state 4
    TRUE      shift, and go to state 28
    UNSIGNED  shift, and go to state 5
    WIDTHOF   shift, and go to state 29
    '('       shift, and go to state 30
    '{'       shift, and go to state 31
    '-'       shift, and go to state 32
    '+'       shift, and go to state 33
    '~'       shift, and go to state 34
    '!'       shift, and go to state 35
    EXP       shift, and go to state 36
    LOG       shift, and go to state 37
    SQRT      shift, and go to state 38
    FLOOR     shift, and go to state 39
    ABS       shift, and go to state 40

    type         go to state 75
    sizedType    go to state 76
    call         go to state 41
    lvalue       go to state 42
    expr         go to state 77
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 31

  118 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    $default  reduce using rule 120 (condExprs_opt)

    call           go to state 41
    lvalue         go to state 42
    condExprs_opt  go to state 78
    condExprs      go to state 79
    condExpr       go to state 80
    logOrExpr      go to state 45
    logAndExpr     go to state 46
    bitOrExpr      go to state 47
    bitXorExpr     go to state 48
    bitAndExpr     go to state 49
    equalExpr      go to state 50
    inequalExpr    go to state 51
    shiftExpr      go to state 52
    addExpr        go to state 53
    prodExpr       go to state 54
    unaryExpr      go to state 55
    floatExpr      go to state 56
    fixedExpr      go to state 57
    atomExpr       go to state 58
    builtinExpr    go to state 59
    exprOp         go to state 60
    logOp          go to state 61
    sqrtOp         go to state 62
    absOp          go to state 63
    floorOp        go to state 64
    unaryOp        go to state 65


state 32

  188 unaryOp: '-' .

    $default  reduce using rule 188 (unaryOp)


state 33

  187 unaryOp: '+' .

    $default  reduce using rule 187 (unaryOp)


state 34

  190 unaryOp: '~' .

    $default  reduce using rule 190 (unaryOp)


state 35

  189 unaryOp: '!' .

    $default  reduce using rule 189 (unaryOp)


state 36

  179 exprOp: EXP .

    $default  reduce using rule 179 (exprOp)


state 37

  180 logOp: LOG .

    $default  reduce using rule 180 (logOp)


state 38

  181 sqrtOp: SQRT .

    $default  reduce using rule 181 (sqrtOp)


state 39

  183 floorOp: FLOOR .

    $default  reduce using rule 183 (floorOp)


state 40

  182 absOp: ABS .

    $default  reduce using rule 182 (absOp)


state 41

  163 atomExpr: call .

    $default  reduce using rule 163 (atomExpr)


state 42

  157 atomExpr: lvalue .
  158         | lvalue . '@' atomExpr

    '@'  shift, and go to state 81

    $default  reduce using rule 157 (atomExpr)


state 43

   19 arraySize: '[' expr . ']'

    ']'  shift, and go to state 82


state 44

  117 expr: condExpr .

    $default  reduce using rule 117 (expr)


state 45

  123 condExpr: logOrExpr . '?' condExpr ':' condExpr
  124         | logOrExpr .
  125 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 83
    '?'       shift, and go to state 84

    $default  reduce using rule 124 (condExpr)


state 46

  126 logOrExpr: logAndExpr .
  127 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 85

    $default  reduce using rule 126 (logOrExpr)


state 47

  128 logAndExpr: bitOrExpr .
  129 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 86

    $default  reduce using rule 128 (logAndExpr)


state 48

  130 bitOrExpr: bitXorExpr .
  131 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 87

    $default  reduce using rule 130 (bitOrExpr)


state 49

  132 bitXorExpr: bitAndExpr .
  133 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 88

    $default  reduce using rule 132 (bitXorExpr)


state 50

  134 bitAndExpr: equalExpr .
  135 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 89
    NOT_EQUALS  shift, and go to state 90

    $default  reduce using rule 134 (bitAndExpr)

    equalOp  go to state 91


state 51

  136 equalExpr: inequalExpr .
  137 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 92
    LTE  shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95

    $default  reduce using rule 136 (equalExpr)

    inequalOp  go to state 96


state 52

  138 inequalExpr: shiftExpr .
  139 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 97
    RIGHT_SHIFT  shift, and go to state 98

    $default  reduce using rule 138 (inequalExpr)

    shiftOp  go to state 99


state 53

  140 shiftExpr: addExpr .
  141 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 100
    '+'  shift, and go to state 101

    $default  reduce using rule 140 (shiftExpr)

    addOp  go to state 102


state 54

  142 addExpr: prodExpr .
  143 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 142 (addExpr)

    prodOp  go to state 106


state 55

  144 prodExpr: unaryExpr .

    $default  reduce using rule 144 (prodExpr)


state 56

  153 unaryExpr: floatExpr .

    $default  reduce using rule 153 (unaryExpr)


state 57

  154 floatExpr: fixedExpr .

    $default  reduce using rule 154 (floatExpr)


state 58

  155 fixedExpr: atomExpr . '.' atomExpr
  156          | atomExpr .

    '.'  shift, and go to state 107

    $default  reduce using rule 156 (fixedExpr)


state 59

  164 atomExpr: builtinExpr .

    $default  reduce using rule 164 (atomExpr)


state 60

  146 unaryExpr: exprOp . '(' expr ')'

    '('  shift, and go to state 108


state 61

  147 unaryExpr: logOp . '(' expr ')'

    '('  shift, and go to state 109


state 62

  148 unaryExpr: sqrtOp . '(' expr ')'

    '('  shift, and go to state 110


state 63

  149 unaryExpr: absOp . '(' expr ')'

    '('  shift, and go to state 111


state 64

  150 unaryExpr: floorOp . '(' expr ')'

    '('  shift, and go to state 112


state 65

  145 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 113

    call         go to state 41
    lvalue       go to state 42
    fixedExpr    go to state 114
    atomExpr     go to state 58
    builtinExpr  go to state 59


state 66

   20 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 115
    OUTPUT  shift, and go to state 116
    PARAM   shift, and go to state 117

    $default  reduce using rule 22 (ioDecls_opt)

    ioDecls_opt  go to state 118
    ioDecls      go to state 119
    ioDecl       go to state 120
    ioKind       go to state 121


state 67

    7 operator: type_opt opSignature $@1 . operatorBody exception_opt

    '{'  shift, and go to state 122

    operatorBody  go to state 123


state 68

   15 type: sizedType '[' expr . ']'
   19 arraySize: '[' expr . ']'

    ']'  shift, and go to state 124


state 69

   16 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 125
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 70

  168 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 126
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 71

  166 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 127
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 72

  104 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    $default  reduce using rule 106 (args_opt)

    call         go to state 41
    args_opt     go to state 129
    args         go to state 130
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 73

  113 lvalue: ID_ '[' . expr ']'
  114       | ID_ '[' . expr ':' expr ']'
  115       | ID_ '[' . expr ']' '[' expr ']'
  116       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 131
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 74

  167 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 132
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 75

  151 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 133


state 76

   15 type: sizedType . '[' expr ']'
   16     | sizedType . arraySize '[' expr ']'
  152 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 134
    '['  shift, and go to state 20

    arraySize  go to state 21


state 77

  165 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 135


state 78

  118 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 136


state 79

  119 condExprs_opt: condExprs .
  121 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 137

    $default  reduce using rule 119 (condExprs_opt)


state 80

  122 condExprs: condExpr .

    $default  reduce using rule 122 (condExprs)


state 81

  158 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 113

    call         go to state 41
    lvalue       go to state 42
    atomExpr     go to state 138
    builtinExpr  go to state 59


state 82

   19 arraySize: '[' expr ']' .

    $default  reduce using rule 19 (arraySize)


state 83

  125 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    logAndExpr   go to state 139
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 84

  123 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    condExpr     go to state 140
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 85

  127 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    bitOrExpr    go to state 141
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 86

  129 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    bitXorExpr   go to state 142
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 87

  131 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    bitAndExpr   go to state 143
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 88

  133 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    equalExpr    go to state 144
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 89

  169 equalOp: EQUALS .

    $default  reduce using rule 169 (equalOp)


state 90

  170 equalOp: NOT_EQUALS .

    $default  reduce using rule 170 (equalOp)


state 91

  135 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    inequalExpr  go to state 145
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 92

  174 inequalOp: GTE .

    $default  reduce using rule 174 (inequalOp)


state 93

  173 inequalOp: LTE .

    $default  reduce using rule 173 (inequalOp)


state 94

  171 inequalOp: '<' .

    $default  reduce using rule 171 (inequalOp)


state 95

  172 inequalOp: '>' .

    $default  reduce using rule 172 (inequalOp)


state 96

  137 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    shiftExpr    go to state 146
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 97

  175 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 175 (shiftOp)


state 98

  176 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 176 (shiftOp)


state 99

  139 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    addExpr      go to state 147
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 100

  178 addOp: '-' .

    $default  reduce using rule 178 (addOp)


state 101

  177 addOp: '+' .

    $default  reduce using rule 177 (addOp)


state 102

  141 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    prodExpr     go to state 148
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 103

  186 prodOp: '%' .

    $default  reduce using rule 186 (prodOp)


state 104

  184 prodOp: '*' .

    $default  reduce using rule 184 (prodOp)


state 105

  185 prodOp: '/' .

    $default  reduce using rule 185 (prodOp)


state 106

  143 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    unaryExpr    go to state 149
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 107

  155 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 113

    call         go to state 41
    lvalue       go to state 42
    atomExpr     go to state 150
    builtinExpr  go to state 59


state 108

  146 unaryExpr: exprOp '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 151
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 109

  147 unaryExpr: logOp '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 152
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 110

  148 unaryExpr: sqrtOp '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 153
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 111

  149 unaryExpr: absOp '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 154
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 112

  150 unaryExpr: floorOp '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 155
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 113

  165 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 77
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 114

  145 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 145 (unaryExpr)


state 115

   26 ioKind: INPUT .

    $default  reduce using rule 26 (ioKind)


state 116

   27 ioKind: OUTPUT .

    $default  reduce using rule 27 (ioKind)


state 117

   28 ioKind: PARAM .

    $default  reduce using rule 28 (ioKind)


state 118

   20 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 156


state 119

   21 ioDecls_opt: ioDecls .
   23 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 157

    $default  reduce using rule 21 (ioDecls_opt)


state 120

   24 ioDecls: ioDecl .

    $default  reduce using rule 24 (ioDecls)


state 121

   25 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    type       go to state 158
    sizedType  go to state 12


state 122

   33 operatorBody: '{' . typeDecls_opt $@2 states '}'
   35             | '{' . typeDecls_opt $@3 callsOrAssigns '}'
   36             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 40 ($@4)
    FLOAT     reduce using rule 40 ($@4)
    DOUBLE    reduce using rule 40 ($@4)
    SIGNED    reduce using rule 40 ($@4)
    UNSIGNED  reduce using rule 40 ($@4)
    ';'       reduce using rule 40 ($@4)
    $default  reduce using rule 38 (typeDecls_opt)

    typeDecls_opt  go to state 159
    typeDecls      go to state 160
    $@4            go to state 161


state 123

    7 operator: type_opt opSignature $@1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 162

    $default  reduce using rule 30 (exception_opt)

    exception_opt  go to state 163
    exception      go to state 164


state 124

   15 type: sizedType '[' expr ']' .
   19 arraySize: '[' expr ']' .

    '['       reduce using rule 19 (arraySize)
    $default  reduce using rule 15 (type)


state 125

   16 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 165


state 126

  168 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 166


state 127

  109 args: args . ',' expr
  166 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 167
    ','  shift, and go to state 168


state 128

  110 args: expr .

    $default  reduce using rule 110 (args)


state 129

  104 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 169


state 130

  105 args_opt: args .
  109 args: args . ',' expr

    ','  shift, and go to state 168

    $default  reduce using rule 105 (args_opt)


state 131

  113 lvalue: ID_ '[' expr . ']'
  114       | ID_ '[' expr . ':' expr ']'
  115       | ID_ '[' expr . ']' '[' expr ']'
  116       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 170
    ':'  shift, and go to state 171


state 132

  167 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 172


state 133

  151 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 113

    call         go to state 41
    lvalue       go to state 42
    fixedExpr    go to state 173
    atomExpr     go to state 58
    builtinExpr  go to state 59


state 134

  152 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 113

    call         go to state 41
    lvalue       go to state 42
    fixedExpr    go to state 174
    atomExpr     go to state 58
    builtinExpr  go to state 59


state 135

  165 atomExpr: '(' expr ')' .

    $default  reduce using rule 165 (atomExpr)


state 136

  118 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 118 (expr)


state 137

  121 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    condExpr     go to state 175
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 138

  158 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 158 (atomExpr)


state 139

  125 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  127 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 85

    $default  reduce using rule 125 (logOrExpr)


state 140

  123 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 176


state 141

  127 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  129 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 86

    $default  reduce using rule 127 (logAndExpr)


state 142

  129 bitOrExpr: bitOrExpr '|' bitXorExpr .
  131 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 87

    $default  reduce using rule 129 (bitOrExpr)


state 143

  131 bitXorExpr: bitXorExpr '^' bitAndExpr .
  133 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 88

    $default  reduce using rule 131 (bitXorExpr)


state 144

  133 bitAndExpr: bitAndExpr '&' equalExpr .
  135 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 89
    NOT_EQUALS  shift, and go to state 90

    $default  reduce using rule 133 (bitAndExpr)

    equalOp  go to state 91


state 145

  135 equalExpr: equalExpr equalOp inequalExpr .
  137 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 92
    LTE  shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95

    $default  reduce using rule 135 (equalExpr)

    inequalOp  go to state 96


state 146

  137 inequalExpr: inequalExpr inequalOp shiftExpr .
  139 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 97
    RIGHT_SHIFT  shift, and go to state 98

    $default  reduce using rule 137 (inequalExpr)

    shiftOp  go to state 99


state 147

  139 shiftExpr: shiftExpr shiftOp addExpr .
  141 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 100
    '+'  shift, and go to state 101

    $default  reduce using rule 139 (shiftExpr)

    addOp  go to state 102


state 148

  141 addExpr: addExpr addOp prodExpr .
  143 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105

    $default  reduce using rule 141 (addExpr)

    prodOp  go to state 106


state 149

  143 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 143 (prodExpr)


state 150

  155 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 155 (fixedExpr)


state 151

  146 unaryExpr: exprOp '(' expr . ')'

    ')'  shift, and go to state 177


state 152

  147 unaryExpr: logOp '(' expr . ')'

    ')'  shift, and go to state 178


state 153

  148 unaryExpr: sqrtOp '(' expr . ')'

    ')'  shift, and go to state 179


state 154

  149 unaryExpr: absOp '(' expr . ')'

    ')'  shift, and go to state 180


state 155

  150 unaryExpr: floorOp '(' expr . ')'

    ')'  shift, and go to state 181


state 156

   20 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 20 (opSignature)


state 157

   23 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 115
    OUTPUT  shift, and go to state 116
    PARAM   shift, and go to state 117

    ioDecl  go to state 182
    ioKind  go to state 121


state 158

   25 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 183


state 159

   33 operatorBody: '{' typeDecls_opt . $@2 states '}'
   35             | '{' typeDecls_opt . $@3 callsOrAssigns '}'
   36             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 184

    STATE     reduce using rule 32 ($@2)
    $default  reduce using rule 34 ($@3)

    $@2  go to state 185
    $@3  go to state 186


state 160

   37 typeDecls_opt: typeDecls .
   39 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 187

    $default  reduce using rule 37 (typeDecls_opt)

    type       go to state 188
    sizedType  go to state 12
    typeDecl   go to state 189


state 161

   41 typeDecls: $@4 . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 187

    type       go to state 188
    sizedType  go to state 12
    typeDecl   go to state 190


state 162

   31 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 31 (exception)


state 163

    7 operator: type_opt opSignature $@1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 164

   29 exception_opt: exception .

    $default  reduce using rule 29 (exception_opt)


state 165

   16 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 16 (type)


state 166

  168 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 168 (builtinExpr)


state 167

  166 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 166 (builtinExpr)


state 168

  109 args: args ',' . expr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 191
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 169

  104 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 104 (call)


state 170

  113 lvalue: ID_ '[' expr ']' .
  115       | ID_ '[' expr ']' . '[' expr ']'
  116       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 192

    $default  reduce using rule 113 (lvalue)


state 171

  114 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 193
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 172

  167 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 167 (builtinExpr)


state 173

  151 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 151 (unaryExpr)


state 174

  152 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 152 (unaryExpr)


state 175

  121 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 121 (condExprs)


state 176

  123 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    condExpr     go to state 194
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 177

  146 unaryExpr: exprOp '(' expr ')' .

    $default  reduce using rule 146 (unaryExpr)


state 178

  147 unaryExpr: logOp '(' expr ')' .

    $default  reduce using rule 147 (unaryExpr)


state 179

  148 unaryExpr: sqrtOp '(' expr ')' .

    $default  reduce using rule 148 (unaryExpr)


state 180

  149 unaryExpr: absOp '(' expr ')' .

    $default  reduce using rule 149 (unaryExpr)


state 181

  150 unaryExpr: floorOp '(' expr ')' .

    $default  reduce using rule 150 (unaryExpr)


state 182

   23 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 23 (ioDecls)


state 183

   25 ioDecl: ioKind type ID_ .

    $default  reduce using rule 25 (ioDecl)


state 184

   36 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 36 (operatorBody)


state 185

   33 operatorBody: '{' typeDecls_opt $@2 . states '}'

    STATE  shift, and go to state 195

    states     go to state 196
    stateCase  go to state 197


state 186

   35 operatorBody: '{' typeDecls_opt $@3 . callsOrAssigns '}'

    COPY             shift, and go to state 198
    ID_              shift, and go to state 25
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204

    callsOrAssigns         go to state 205
    callOrAssign_nonEmpty  go to state 206
    builtinStmtCompose     go to state 207
    copyStmt               go to state 208
    segmentStmt            go to state 209
    call                   go to state 210
    lvalue                 go to state 211


state 187

   43 typeDecl: ';' .

    $default  reduce using rule 43 (typeDecl)


state 188

   42 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 212

    typeDeclElems  go to state 213
    typeDeclElem   go to state 214


state 189

   39 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 39 (typeDecls)


state 190

   41 typeDecls: $@4 typeDecl .

    $default  reduce using rule 41 (typeDecls)


state 191

  109 args: args ',' expr .

    $default  reduce using rule 109 (args)


state 192

  115 lvalue: ID_ '[' expr ']' '[' . expr ']'
  116       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 215
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 193

  114 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 216


state 194

  123 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 123 (condExpr)


state 195

   61 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 217


state 196

   33 operatorBody: '{' typeDecls_opt $@2 states . '}'
   59 states: states . stateCase

    STATE  shift, and go to state 195
    '}'    shift, and go to state 218

    stateCase  go to state 219


state 197

   60 states: stateCase .

    $default  reduce using rule 60 (states)


state 198

   97 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 220


state 199

   98 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 221


state 200

  100 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 222


state 201

  101 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 223


state 202

  103 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 224


state 203

  102 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 225


state 204

   99 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 226


state 205

   35 operatorBody: '{' typeDecls_opt $@3 callsOrAssigns . '}'
   51 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 198
    ID_              shift, and go to state 25
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    '}'              shift, and go to state 227
    ';'              shift, and go to state 228

    callOrAssign           go to state 229
    callOrAssign_nonEmpty  go to state 230
    builtinStmtCompose     go to state 207
    copyStmt               go to state 208
    segmentStmt            go to state 209
    call                   go to state 210
    lvalue                 go to state 211


state 206

   52 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 52 (callsOrAssigns)


state 207

   58 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 231


state 208

   95 builtinStmtCompose: copyStmt .

    $default  reduce using rule 95 (builtinStmtCompose)


state 209

   96 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 96 (builtinStmtCompose)


state 210

   55 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 232


state 211

   56 callOrAssign_nonEmpty: lvalue . '=' call ';'
   57                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 233


state 212

   46 typeDeclElem: ID_ .
   48             | ID_ . $@5 '=' expr
   50             | ID_ . $@6 '(' expr ')'

    '('       reduce using rule 49 ($@6)
    '='       reduce using rule 47 ($@5)
    $default  reduce using rule 46 (typeDeclElem)

    $@5  go to state 234
    $@6  go to state 235


state 213

   42 typeDecl: type typeDeclElems . ';'
   45 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 236
    ','  shift, and go to state 237


state 214

   44 typeDeclElems: typeDeclElem .

    $default  reduce using rule 44 (typeDeclElems)


state 215

  115 lvalue: ID_ '[' expr ']' '[' expr . ']'
  116       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 238
    ':'  shift, and go to state 239


state 216

  114 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 114 (lvalue)


state 217

   61 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 240


state 218

   33 operatorBody: '{' typeDecls_opt $@2 states '}' .

    $default  reduce using rule 33 (operatorBody)


state 219

   59 states: states stateCase .

    $default  reduce using rule 59 (states)


state 220

   97 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 241
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 221

   98 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 242
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 222

  100 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 243
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 223

  101 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 244
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 224

  103 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 245
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 225

  102 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 246
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 226

   99 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 247
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 227

   35 operatorBody: '{' typeDecls_opt $@3 callsOrAssigns '}' .

    $default  reduce using rule 35 (operatorBody)


state 228

   54 callOrAssign: ';' .

    $default  reduce using rule 54 (callOrAssign)


state 229

   51 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 51 (callsOrAssigns)


state 230

   53 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 53 (callOrAssign)


state 231

   58 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 58 (callOrAssign_nonEmpty)


state 232

   55 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 233

   56 callOrAssign_nonEmpty: lvalue '=' . call ';'
   57                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 25

    call    go to state 248
    lvalue  go to state 249


state 234

   48 typeDeclElem: ID_ $@5 . '=' expr

    '='  shift, and go to state 250


state 235

   50 typeDeclElem: ID_ $@6 . '(' expr ')'

    '('  shift, and go to state 251


state 236

   42 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 42 (typeDecl)


state 237

   45 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 212

    typeDeclElem  go to state 252


state 238

  115 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 115 (lvalue)


state 239

  116 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 253
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 240

   61 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS   shift, and go to state 254
    EOFR  shift, and go to state 255
    ID_   shift, and go to state 256

    $default  reduce using rule 63 (stateVars_opt)

    stateVars_opt  go to state 257
    stateVars      go to state 258
    stateVar       go to state 259


state 241

   97 copyStmt: COPY '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 260
    ','  shift, and go to state 168


state 242

   98 segmentStmt: SEGMENT_R_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 261
    ','  shift, and go to state 168


state 243

  100 segmentStmt: SEGMENT_RW_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 262
    ','  shift, and go to state 168


state 244

  101 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 263
    ','  shift, and go to state 168


state 245

  103 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 264
    ','  shift, and go to state 168


state 246

  102 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 265
    ','  shift, and go to state 168


state 247

   99 segmentStmt: SEGMENT_W_ '(' args . ')'
  109 args: args . ',' expr

    ')'  shift, and go to state 266
    ','  shift, and go to state 168


state 248

   56 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 267


state 249

   57 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 268


state 250

   48 typeDeclElem: ID_ $@5 '=' . expr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 269
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 251

   50 typeDeclElem: ID_ $@6 '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 270
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 252

   45 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 45 (typeDeclElems)


state 253

  116 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 271


state 254

   68 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 272


state 255

   69 stateVar: EOFR . '(' ID_ ')'

    '('  shift, and go to state 273


state 256

   66 stateVar: ID_ .
   67         | ID_ . '#' expr

    '#'  shift, and go to state 274

    $default  reduce using rule 66 (stateVar)


state 257

   61 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 275


state 258

   62 stateVars_opt: stateVars .
   64 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 276

    $default  reduce using rule 62 (stateVars_opt)


state 259

   65 stateVars: stateVar .

    $default  reduce using rule 65 (stateVars)


state 260

   97 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 97 (copyStmt)


state 261

   98 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 262

  100 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 100 (segmentStmt)


state 263

  101 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 101 (segmentStmt)


state 264

  103 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 103 (segmentStmt)


state 265

  102 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 102 (segmentStmt)


state 266

   99 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 99 (segmentStmt)


state 267

   56 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 56 (callOrAssign_nonEmpty)


state 268

   57 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 57 (callOrAssign_nonEmpty)


state 269

   48 typeDeclElem: ID_ $@5 '=' expr .

    $default  reduce using rule 48 (typeDeclElem)


state 270

   50 typeDeclElem: ID_ $@6 '(' expr . ')'

    ')'  shift, and go to state 277


state 271

  116 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 116 (lvalue)


state 272

   68 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 278


state 273

   69 stateVar: EOFR '(' . ID_ ')'

    ID_  shift, and go to state 279


state 274

   67 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 280
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 275

   61 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 281


state 276

   64 stateVars: stateVars ',' . stateVar

    EOS   shift, and go to state 254
    EOFR  shift, and go to state 255
    ID_   shift, and go to state 256

    stateVar  go to state 282


state 277

   50 typeDeclElem: ID_ $@6 '(' expr ')' .

    $default  reduce using rule 50 (typeDeclElem)


state 278

   68 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 283


state 279

   69 stateVar: EOFR '(' ID_ . ')'

    ')'  shift, and go to state 284


state 280

   67 stateVar: ID_ '#' expr .

    $default  reduce using rule 67 (stateVar)


state 281

   61 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 285
    CLOSE            shift, and go to state 286
    FRAMECLOSE       shift, and go to state 287
    COPY             shift, and go to state 198
    DONE             shift, and go to state 288
    GOTO             shift, and go to state 289
    ID_              shift, and go to state 25
    IF               shift, and go to state 290
    PRINTF           shift, and go to state 291
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    STAY             shift, and go to state 292
    '{'              shift, and go to state 293

    $default  reduce using rule 71 (stmts_opt)

    stmts_opt         go to state 294
    stmts             go to state 295
    stmt_nonEmpty     go to state 296
    matchedStmt       go to state 297
    unmatchedStmt     go to state 298
    stmtBlock         go to state 299
    builtinStmtBehav  go to state 300
    copyStmt          go to state 301
    segmentStmt       go to state 302
    call              go to state 303
    assign            go to state 304
    lvalue            go to state 305


state 282

   64 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 64 (stateVars)


state 283

   68 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 68 (stateVar)


state 284

   69 stateVar: EOFR '(' ID_ ')' .

    $default  reduce using rule 69 (stateVar)


state 285

   88 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 306


state 286

   89 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 307


state 287

   90 builtinStmtBehav: FRAMECLOSE . '(' ID_ ')'

    '('  shift, and go to state 308


state 288

   91 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 309


state 289

   79 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 310


state 290

   78 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   85 unmatchedStmt: IF . '(' expr ')' stmt
   86              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 311


state 291

   92 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 312


state 292

   80 matchedStmt: STAY . ';'

    ';'  shift, and go to state 313


state 293

   87 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 40 ($@4)
    FLOAT     reduce using rule 40 ($@4)
    DOUBLE    reduce using rule 40 ($@4)
    SIGNED    reduce using rule 40 ($@4)
    UNSIGNED  reduce using rule 40 ($@4)
    ';'       reduce using rule 40 ($@4)
    $default  reduce using rule 38 (typeDecls_opt)

    typeDecls_opt  go to state 314
    typeDecls      go to state 160
    $@4            go to state 161


state 294

   61 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 61 (stateCase)


state 295

   70 stmts_opt: stmts .
   72 stmts: stmts . stmt

    ATTENTION        shift, and go to state 285
    CLOSE            shift, and go to state 286
    FRAMECLOSE       shift, and go to state 287
    COPY             shift, and go to state 198
    DONE             shift, and go to state 288
    GOTO             shift, and go to state 289
    ID_              shift, and go to state 25
    IF               shift, and go to state 290
    PRINTF           shift, and go to state 291
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    STAY             shift, and go to state 292
    '{'              shift, and go to state 293
    ';'              shift, and go to state 315

    $default  reduce using rule 70 (stmts_opt)

    stmt              go to state 316
    stmt_nonEmpty     go to state 317
    matchedStmt       go to state 297
    unmatchedStmt     go to state 298
    stmtBlock         go to state 299
    builtinStmtBehav  go to state 300
    copyStmt          go to state 301
    segmentStmt       go to state 302
    call              go to state 303
    assign            go to state 304
    lvalue            go to state 305


state 296

   73 stmts: stmt_nonEmpty .

    $default  reduce using rule 73 (stmts)


state 297

   76 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 76 (stmt_nonEmpty)


state 298

   77 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 77 (stmt_nonEmpty)


state 299

   84 matchedStmt: stmtBlock .

    $default  reduce using rule 84 (matchedStmt)


state 300

   82 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 318


state 301

   93 builtinStmtBehav: copyStmt .

    $default  reduce using rule 93 (builtinStmtBehav)


state 302

   94 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 94 (builtinStmtBehav)


state 303

   83 matchedStmt: call . ';'

    ';'  shift, and go to state 319


state 304

   81 matchedStmt: assign . ';'

    ';'  shift, and go to state 320


state 305

  111 assign: lvalue . '=' expr

    '='  shift, and go to state 321


state 306

   88 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 322
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 307

   89 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 323


state 308

   90 builtinStmtBehav: FRAMECLOSE '(' . ID_ ')'

    ID_  shift, and go to state 324


state 309

   91 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 325


state 310

   79 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 326


state 311

   78 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   85 unmatchedStmt: IF '(' . expr ')' stmt
   86              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 327
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 312

   92 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 328


state 313

   80 matchedStmt: STAY ';' .

    $default  reduce using rule 80 (matchedStmt)


state 314

   87 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 285
    CLOSE            shift, and go to state 286
    FRAMECLOSE       shift, and go to state 287
    COPY             shift, and go to state 198
    DONE             shift, and go to state 288
    GOTO             shift, and go to state 289
    ID_              shift, and go to state 25
    IF               shift, and go to state 290
    PRINTF           shift, and go to state 291
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    STAY             shift, and go to state 292
    '{'              shift, and go to state 293

    $default  reduce using rule 71 (stmts_opt)

    stmts_opt         go to state 329
    stmts             go to state 295
    stmt_nonEmpty     go to state 296
    matchedStmt       go to state 297
    unmatchedStmt     go to state 298
    stmtBlock         go to state 299
    builtinStmtBehav  go to state 300
    copyStmt          go to state 301
    segmentStmt       go to state 302
    call              go to state 303
    assign            go to state 304
    lvalue            go to state 305


state 315

   75 stmt: ';' .

    $default  reduce using rule 75 (stmt)


state 316

   72 stmts: stmts stmt .

    $default  reduce using rule 72 (stmts)


state 317

   74 stmt: stmt_nonEmpty .

    $default  reduce using rule 74 (stmt)


state 318

   82 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 82 (matchedStmt)


state 319

   83 matchedStmt: call ';' .

    $default  reduce using rule 83 (matchedStmt)


state 320

   81 matchedStmt: assign ';' .

    $default  reduce using rule 81 (matchedStmt)


state 321

  111 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    lvalue       go to state 42
    expr         go to state 330
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 322

   88 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 331


state 323

   89 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 332


state 324

   90 builtinStmtBehav: FRAMECLOSE '(' ID_ . ')'

    ')'  shift, and go to state 333


state 325

   91 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 91 (builtinStmtBehav)


state 326

   79 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 79 (matchedStmt)


state 327

   78 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   85 unmatchedStmt: IF '(' expr . ')' stmt
   86              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 334


state 328

   92 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 335

    $default  reduce using rule 108 (more_args_opt)

    more_args_opt  go to state 336


state 329

   87 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 337


state 330

  111 assign: lvalue '=' expr .

    $default  reduce using rule 111 (assign)


state 331

   88 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 88 (builtinStmtBehav)


state 332

   89 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 89 (builtinStmtBehav)


state 333

   90 builtinStmtBehav: FRAMECLOSE '(' ID_ ')' .

    $default  reduce using rule 90 (builtinStmtBehav)


state 334

   78 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   85 unmatchedStmt: IF '(' expr ')' . stmt
   86              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 285
    CLOSE            shift, and go to state 286
    FRAMECLOSE       shift, and go to state 287
    COPY             shift, and go to state 198
    DONE             shift, and go to state 288
    GOTO             shift, and go to state 289
    ID_              shift, and go to state 25
    IF               shift, and go to state 290
    PRINTF           shift, and go to state 291
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    STAY             shift, and go to state 292
    '{'              shift, and go to state 293
    ';'              shift, and go to state 315

    stmt              go to state 338
    stmt_nonEmpty     go to state 317
    matchedStmt       go to state 339
    unmatchedStmt     go to state 298
    stmtBlock         go to state 299
    builtinStmtBehav  go to state 300
    copyStmt          go to state 301
    segmentStmt       go to state 302
    call              go to state 303
    assign            go to state 304
    lvalue            go to state 305


state 335

  107 more_args_opt: ',' . args

    BITSOF   shift, and go to state 22
    CAT      shift, and go to state 23
    FALSE    shift, and go to state 24
    ID_      shift, and go to state 25
    NUM      shift, and go to state 26
    NUMDBL   shift, and go to state 27
    TRUE     shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '('      shift, and go to state 30
    '{'      shift, and go to state 31
    '-'      shift, and go to state 32
    '+'      shift, and go to state 33
    '~'      shift, and go to state 34
    '!'      shift, and go to state 35
    EXP      shift, and go to state 36
    LOG      shift, and go to state 37
    SQRT     shift, and go to state 38
    FLOOR    shift, and go to state 39
    ABS      shift, and go to state 40

    call         go to state 41
    args         go to state 340
    lvalue       go to state 42
    expr         go to state 128
    condExpr     go to state 44
    logOrExpr    go to state 45
    logAndExpr   go to state 46
    bitOrExpr    go to state 47
    bitXorExpr   go to state 48
    bitAndExpr   go to state 49
    equalExpr    go to state 50
    inequalExpr  go to state 51
    shiftExpr    go to state 52
    addExpr      go to state 53
    prodExpr     go to state 54
    unaryExpr    go to state 55
    floatExpr    go to state 56
    fixedExpr    go to state 57
    atomExpr     go to state 58
    builtinExpr  go to state 59
    exprOp       go to state 60
    logOp        go to state 61
    sqrtOp       go to state 62
    absOp        go to state 63
    floorOp      go to state 64
    unaryOp      go to state 65


state 336

   92 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 341


state 337

   87 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 87 (stmtBlock)


state 338

   85 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 85 (unmatchedStmt)


state 339

   76 stmt_nonEmpty: matchedStmt .
   78 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   86 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 342

    $default  reduce using rule 76 (stmt_nonEmpty)


state 340

  107 more_args_opt: ',' args .
  109 args: args . ',' expr

    ','  shift, and go to state 168

    $default  reduce using rule 107 (more_args_opt)


state 341

   92 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 92 (builtinStmtBehav)


state 342

   78 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   86 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 285
    CLOSE            shift, and go to state 286
    FRAMECLOSE       shift, and go to state 287
    COPY             shift, and go to state 198
    DONE             shift, and go to state 288
    GOTO             shift, and go to state 289
    ID_              shift, and go to state 25
    IF               shift, and go to state 290
    PRINTF           shift, and go to state 291
    SEGMENT_R_       shift, and go to state 199
    SEGMENT_RW_      shift, and go to state 200
    SEGMENT_SEQ_R_   shift, and go to state 201
    SEGMENT_SEQ_RW_  shift, and go to state 202
    SEGMENT_SEQ_W_   shift, and go to state 203
    SEGMENT_W_       shift, and go to state 204
    STAY             shift, and go to state 292
    '{'              shift, and go to state 293

    matchedStmt       go to state 343
    unmatchedStmt     go to state 344
    stmtBlock         go to state 299
    builtinStmtBehav  go to state 300
    copyStmt          go to state 301
    segmentStmt       go to state 302
    call              go to state 303
    assign            go to state 304
    lvalue            go to state 305


state 343

   78 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 78 (matchedStmt)


state 344

   86 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 86 (unmatchedStmt)
