Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 @1: /* empty */

    7 operator: type_opt opSignature @1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | FLOAT
   12     | DOUBLE
   13     | BOOLEAN arraySize
   14     | sizedType '[' expr ']'
   15     | sizedType arraySize '[' expr ']'

   16 sizedType: SIGNED
   17          | UNSIGNED

   18 arraySize: '[' expr ']'

   19 opSignature: ID_ '(' ioDecls_opt ')'

   20 ioDecls_opt: ioDecls
   21            | /* empty */

   22 ioDecls: ioDecls ',' ioDecl
   23        | ioDecl

   24 ioDecl: ioKind type ID_

   25 ioKind: INPUT
   26       | OUTPUT
   27       | PARAM

   28 exception_opt: exception
   29              | /* empty */

   30 exception: PASS_THROUGH_EXCEPTION

   31 @2: /* empty */

   32 operatorBody: '{' typeDecls_opt @2 states '}'

   33 @3: /* empty */

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt '}'

   36 typeDecls_opt: typeDecls
   37              | /* empty */

   38 typeDecls: typeDecls typeDecl

   39 @4: /* empty */

   40 typeDecls: @4 typeDecl

   41 typeDecl: type typeDeclElems ';'
   42         | ';'

   43 typeDeclElems: typeDeclElem
   44              | typeDeclElems ',' typeDeclElem

   45 typeDeclElem: ID_

   46 @5: /* empty */

   47 typeDeclElem: ID_ @5 '=' expr

   48 @6: /* empty */

   49 typeDeclElem: ID_ @6 '(' expr ')'

   50 callsOrAssigns: callsOrAssigns callOrAssign
   51               | callOrAssign_nonEmpty

   52 callOrAssign: callOrAssign_nonEmpty
   53             | ';'

   54 callOrAssign_nonEmpty: call ';'
   55                      | lvalue '=' call ';'
   56                      | lvalue '=' lvalue ';'
   57                      | builtinStmtCompose ';'

   58 states: states stateCase
   59       | stateCase

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   61 stateVars_opt: stateVars
   62              | /* empty */

   63 stateVars: stateVars ',' stateVar
   64          | stateVar

   65 stateVar: ID_
   66         | ID_ '#' expr
   67         | EOS '(' ID_ ')'
   68         | EOFR '(' ID_ ')'

   69 stmts_opt: stmts
   70          | /* empty */

   71 stmts: stmts stmt
   72      | stmt_nonEmpty

   73 stmt: stmt_nonEmpty
   74     | ';'

   75 stmt_nonEmpty: matchedStmt
   76              | unmatchedStmt

   77 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   78            | GOTO ID_ ';'
   79            | STAY ';'
   80            | assign ';'
   81            | builtinStmtBehav ';'
   82            | call ';'
   83            | stmtBlock

   84 unmatchedStmt: IF '(' expr ')' stmt
   85              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   86 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   87 builtinStmtBehav: ATTENTION '(' expr ')'
   88                 | CLOSE '(' ID_ ')'
   89                 | FRAMECLOSE '(' ID_ ')'
   90                 | DONE '(' ')'
   91                 | PRINTF '(' STRING more_args_opt ')'
   92                 | copyStmt
   93                 | segmentStmt

   94 builtinStmtCompose: copyStmt
   95                   | segmentStmt

   96 copyStmt: COPY '(' args ')'

   97 segmentStmt: SEGMENT_R_ '(' args ')'
   98            | SEGMENT_W_ '(' args ')'
   99            | SEGMENT_RW_ '(' args ')'
  100            | SEGMENT_SEQ_R_ '(' args ')'
  101            | SEGMENT_SEQ_W_ '(' args ')'
  102            | SEGMENT_SEQ_RW_ '(' args ')'

  103 call: ID_ '(' args_opt ')'

  104 args_opt: args
  105         | /* empty */

  106 more_args_opt: ',' args
  107              | /* empty */

  108 args: args ',' expr
  109     | expr

  110 assign: lvalue '=' expr

  111 lvalue: ID_
  112       | ID_ '[' expr ']'
  113       | ID_ '[' expr ':' expr ']'
  114       | ID_ '[' expr ']' '[' expr ']'
  115       | ID_ '[' expr ']' '[' expr ':' expr ']'

  116 expr: condExpr
  117     | '{' condExprs_opt '}'

  118 condExprs_opt: condExprs
  119              | /* empty */

  120 condExprs: condExprs ',' condExpr
  121          | condExpr

  122 condExpr: logOrExpr '?' condExpr ':' condExpr
  123         | logOrExpr

  124 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  125          | logAndExpr

  126 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  127           | bitOrExpr

  128 bitOrExpr: bitOrExpr '|' bitXorExpr
  129          | bitXorExpr

  130 bitXorExpr: bitXorExpr '^' bitAndExpr
  131           | bitAndExpr

  132 bitAndExpr: bitAndExpr '&' equalExpr
  133           | equalExpr

  134 equalExpr: equalExpr equalOp inequalExpr
  135          | inequalExpr

  136 inequalExpr: inequalExpr inequalOp shiftExpr
  137            | shiftExpr

  138 shiftExpr: shiftExpr shiftOp addExpr
  139          | addExpr

  140 addExpr: addExpr addOp prodExpr
  141        | prodExpr

  142 prodExpr: prodExpr prodOp unaryExpr
  143         | unaryExpr

  144 unaryExpr: unaryOp fixedExpr
  145          | exprOp '(' expr ')'
  146          | logOp '(' expr ')'
  147          | sqrtOp '(' expr ')'
  148          | floorOp '(' expr ')'
  149          | '(' type ')' fixedExpr
  150          | '(' sizedType ')' fixedExpr
  151          | floatExpr

  152 floatExpr: fixedExpr

  153 fixedExpr: atomExpr '.' atomExpr
  154          | atomExpr

  155 atomExpr: lvalue
  156         | lvalue '@' atomExpr
  157         | NUM
  158         | NUMDBL
  159         | TRUE
  160         | FALSE
  161         | call
  162         | builtinExpr
  163         | '(' expr ')'

  164 builtinExpr: CAT '(' args ')'
  165            | WIDTHOF '(' expr ')'
  166            | BITSOF '(' expr ')'

  167 equalOp: EQUALS
  168        | NOT_EQUALS

  169 inequalOp: '<'
  170          | '>'
  171          | LTE
  172          | GTE

  173 shiftOp: LEFT_SHIFT
  174        | RIGHT_SHIFT

  175 addOp: '+'
  176      | '-'

  177 exprOp: EXP

  178 logOp: LOG

  179 sqrtOp: SQRT

  180 floorOp: FLOOR

  181 prodOp: '*'
  182       | '/'
  183       | '%'

  184 unaryOp: '+'
  185        | '-'
  186        | '!'
  187        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 186
'#' (35) 66
'%' (37) 183
'&' (38) 132
'(' (40) 19 49 60 67 68 77 84 85 87 88 89 90 91 96 97 98 99 100 101
    102 103 145 146 147 148 149 150 163 164 165 166
')' (41) 19 49 60 67 68 77 84 85 87 88 89 90 91 96 97 98 99 100 101
    102 103 145 146 147 148 149 150 163 164 165 166
'*' (42) 181
'+' (43) 175 184
',' (44) 22 44 63 106 108 120
'-' (45) 176 185
'.' (46) 153
'/' (47) 182
':' (58) 60 113 115 122
';' (59) 41 42 53 54 55 56 57 74 78 79 80 81 82
'<' (60) 169
'=' (61) 47 55 56 110
'>' (62) 170
'?' (63) 122
'@' (64) 156
'[' (91) 14 15 18 112 113 114 115
']' (93) 14 15 18 112 113 114 115
'^' (94) 130
'{' (123) 32 34 35 86 117
'|' (124) 128
'}' (125) 32 34 35 86 117
'~' (126) 187
error (256)
ATTENTION (258) 87
BITSOF (259) 166
BOOLEAN (260) 10 13
FLOAT (261) 11
DOUBLE (262) 12
CAT (263) 164
CLOSE (264) 88
FRAMECLOSE (265) 89
COPY (266) 96
DONE (267) 90
ELSE (268) 77 85
EOS (269) 67
EOFR (270) 68
EQUALS (271) 167
FALSE (272) 160
GOTO (273) 78
GTE (274) 172
ID_ (275) 19 24 45 47 49 60 65 66 67 68 78 88 89 103 111 112 113 114
    115
IF (276) 77 84 85
INPUT (277) 25
LEFT_SHIFT (278) 173
LOGIC_AND (279) 126
LOGIC_OR (280) 124
LTE (281) 171
NOT_EQUALS (282) 168
NUM (283) 157
NUMDBL (284) 158
OUTPUT (285) 26
PARAM (286) 27
PASS_THROUGH_EXCEPTION (287) 30
PRINTF (288) 91
RIGHT_SHIFT (289) 174
SEGMENT_R_ (290) 97
SEGMENT_RW_ (291) 99
SEGMENT_SEQ_R_ (292) 100
SEGMENT_SEQ_RW_ (293) 102
SEGMENT_SEQ_W_ (294) 101
SEGMENT_W_ (295) 98
SIGNED (296) 16
STATE (297) 60
STAY (298) 79
STRING (299) 91
TRUE (300) 159
UNSIGNED (301) 17
WIDTHOF (302) 165
EXP (303) 177
LOG (304) 178
SQRT (305) 179
FLOOR (306) 180


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
start (79)
    on left: 1, on right: 0
operators_opt (80)
    on left: 2 3, on right: 1
operators (81)
    on left: 4 5, on right: 2 4
operator (82)
    on left: 7, on right: 4 5
@1 (83)
    on left: 6, on right: 7
type_opt (84)
    on left: 8 9, on right: 7
type (85)
    on left: 10 11 12 13 14 15, on right: 8 24 41 149
sizedType (86)
    on left: 16 17, on right: 14 15 150
arraySize (87)
    on left: 18, on right: 13 15
opSignature (88)
    on left: 19, on right: 7
ioDecls_opt (89)
    on left: 20 21, on right: 19
ioDecls (90)
    on left: 22 23, on right: 20 22
ioDecl (91)
    on left: 24, on right: 22 23
ioKind (92)
    on left: 25 26 27, on right: 24
exception_opt (93)
    on left: 28 29, on right: 7
exception (94)
    on left: 30, on right: 28
operatorBody (95)
    on left: 32 34 35, on right: 7
@2 (96)
    on left: 31, on right: 32
@3 (97)
    on left: 33, on right: 34
typeDecls_opt (98)
    on left: 36 37, on right: 32 34 35 86
typeDecls (99)
    on left: 38 40, on right: 36 38
@4 (100)
    on left: 39, on right: 40
typeDecl (101)
    on left: 41 42, on right: 38 40
typeDeclElems (102)
    on left: 43 44, on right: 41 44
typeDeclElem (103)
    on left: 45 47 49, on right: 43 44
@5 (104)
    on left: 46, on right: 47
@6 (105)
    on left: 48, on right: 49
callsOrAssigns (106)
    on left: 50 51, on right: 34 50
callOrAssign (107)
    on left: 52 53, on right: 50
callOrAssign_nonEmpty (108)
    on left: 54 55 56 57, on right: 51 52
states (109)
    on left: 58 59, on right: 32 58
stateCase (110)
    on left: 60, on right: 58 59
stateVars_opt (111)
    on left: 61 62, on right: 60
stateVars (112)
    on left: 63 64, on right: 61 63
stateVar (113)
    on left: 65 66 67 68, on right: 63 64
stmts_opt (114)
    on left: 69 70, on right: 60 86
stmts (115)
    on left: 71 72, on right: 69 71
stmt (116)
    on left: 73 74, on right: 71 84
stmt_nonEmpty (117)
    on left: 75 76, on right: 72 73
matchedStmt (118)
    on left: 77 78 79 80 81 82 83, on right: 75 77 85
unmatchedStmt (119)
    on left: 84 85, on right: 76 85
stmtBlock (120)
    on left: 86, on right: 83
builtinStmtBehav (121)
    on left: 87 88 89 90 91 92 93, on right: 81
builtinStmtCompose (122)
    on left: 94 95, on right: 57
copyStmt (123)
    on left: 96, on right: 92 94
segmentStmt (124)
    on left: 97 98 99 100 101 102, on right: 93 95
call (125)
    on left: 103, on right: 54 55 82 161
args_opt (126)
    on left: 104 105, on right: 103
more_args_opt (127)
    on left: 106 107, on right: 91
args (128)
    on left: 108 109, on right: 96 97 98 99 100 101 102 104 106 108
    164
assign (129)
    on left: 110, on right: 80
lvalue (130)
    on left: 111 112 113 114 115, on right: 55 56 110 155 156
expr (131)
    on left: 116 117, on right: 14 15 18 47 49 66 77 84 85 87 108 109
    110 112 113 114 115 145 146 147 148 163 165 166
condExprs_opt (132)
    on left: 118 119, on right: 117
condExprs (133)
    on left: 120 121, on right: 118 120
condExpr (134)
    on left: 122 123, on right: 116 120 121 122
logOrExpr (135)
    on left: 124 125, on right: 122 123 124
logAndExpr (136)
    on left: 126 127, on right: 124 125 126
bitOrExpr (137)
    on left: 128 129, on right: 126 127 128
bitXorExpr (138)
    on left: 130 131, on right: 128 129 130
bitAndExpr (139)
    on left: 132 133, on right: 130 131 132
equalExpr (140)
    on left: 134 135, on right: 132 133 134
inequalExpr (141)
    on left: 136 137, on right: 134 135 136
shiftExpr (142)
    on left: 138 139, on right: 136 137 138
addExpr (143)
    on left: 140 141, on right: 138 139 140
prodExpr (144)
    on left: 142 143, on right: 140 141 142
unaryExpr (145)
    on left: 144 145 146 147 148 149 150 151, on right: 142 143
floatExpr (146)
    on left: 152, on right: 151
fixedExpr (147)
    on left: 153 154, on right: 144 149 150 152
atomExpr (148)
    on left: 155 156 157 158 159 160 161 162 163, on right: 153 154
    156
builtinExpr (149)
    on left: 164 165 166, on right: 162
equalOp (150)
    on left: 167 168, on right: 134
inequalOp (151)
    on left: 169 170 171 172, on right: 136
shiftOp (152)
    on left: 173 174, on right: 138
addOp (153)
    on left: 175 176, on right: 140
exprOp (154)
    on left: 177, on right: 145
logOp (155)
    on left: 178, on right: 146
sqrtOp (156)
    on left: 179, on right: 147
floorOp (157)
    on left: 180, on right: 148
prodOp (158)
    on left: 181 182 183, on right: 142
unaryOp (159)
    on left: 184 185 186 187, on right: 144


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 6
    operators_opt  go to state 7
    operators      go to state 8
    operator       go to state 9
    type_opt       go to state 10
    type           go to state 11
    sizedType      go to state 12


state 1

   10 type: BOOLEAN .
   13     | BOOLEAN . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 10 (type)

    arraySize  go to state 14


state 2

   11 type: FLOAT .

    $default  reduce using rule 11 (type)


state 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


state 4

   16 sizedType: SIGNED .

    $default  reduce using rule 16 (sizedType)


state 5

   17 sizedType: UNSIGNED .

    $default  reduce using rule 17 (sizedType)


state 6

    0 $accept: start . $end

    $end  shift, and go to state 15


state 7

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 8

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 16
    type_opt   go to state 10
    type       go to state 11
    sizedType  go to state 12


state 9

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 10

    7 operator: type_opt . opSignature @1 operatorBody exception_opt

    ID_  shift, and go to state 17

    opSignature  go to state 18


state 11

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 12

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 19

    arraySize  go to state 20


state 13

   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 41
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 14

   13 type: BOOLEAN arraySize .

    $default  reduce using rule 13 (type)


state 15

    0 $accept: start $end .

    $default  accept


state 16

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 17

   19 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 63


state 18

    7 operator: type_opt opSignature . @1 operatorBody exception_opt

    $default  reduce using rule 6 (@1)

    @1  go to state 64


state 19

   14 type: sizedType '[' . expr ']'
   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 65
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 20

   15 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 66


state 21

  166 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 67


state 22

  164 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 68


state 23

  160 atomExpr: FALSE .

    $default  reduce using rule 160 (atomExpr)


state 24

  103 call: ID_ . '(' args_opt ')'
  111 lvalue: ID_ .
  112       | ID_ . '[' expr ']'
  113       | ID_ . '[' expr ':' expr ']'
  114       | ID_ . '[' expr ']' '[' expr ']'
  115       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 111 (lvalue)


state 25

  157 atomExpr: NUM .

    $default  reduce using rule 157 (atomExpr)


state 26

  158 atomExpr: NUMDBL .

    $default  reduce using rule 158 (atomExpr)


state 27

  159 atomExpr: TRUE .

    $default  reduce using rule 159 (atomExpr)


state 28

  149 unaryExpr: '(' . type ')' fixedExpr
  150          | '(' . sizedType ')' fixedExpr
  163 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 21
    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    CAT       shift, and go to state 22
    FALSE     shift, and go to state 23
    ID_       shift, and go to state 24
    NUM       shift, and go to state 25
    NUMDBL    shift, and go to state 26
    SIGNED    shift, and go to state 4
    TRUE      shift, and go to state 27
    UNSIGNED  shift, and go to state 5
    '('       shift, and go to state 28
    WIDTHOF   shift, and go to state 29
    '{'       shift, and go to state 30
    '-'       shift, and go to state 31
    '+'       shift, and go to state 32
    '~'       shift, and go to state 33
    '!'       shift, and go to state 34
    EXP       shift, and go to state 35
    LOG       shift, and go to state 36
    SQRT      shift, and go to state 37
    FLOOR     shift, and go to state 38

    type         go to state 71
    sizedType    go to state 72
    call         go to state 39
    lvalue       go to state 40
    expr         go to state 73
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 29

  165 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 74


state 30

  117 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    $default  reduce using rule 119 (condExprs_opt)

    call           go to state 39
    lvalue         go to state 40
    condExprs_opt  go to state 75
    condExprs      go to state 76
    condExpr       go to state 77
    logOrExpr      go to state 43
    logAndExpr     go to state 44
    bitOrExpr      go to state 45
    bitXorExpr     go to state 46
    bitAndExpr     go to state 47
    equalExpr      go to state 48
    inequalExpr    go to state 49
    shiftExpr      go to state 50
    addExpr        go to state 51
    prodExpr       go to state 52
    unaryExpr      go to state 53
    floatExpr      go to state 54
    fixedExpr      go to state 55
    atomExpr       go to state 56
    builtinExpr    go to state 57
    exprOp         go to state 58
    logOp          go to state 59
    sqrtOp         go to state 60
    floorOp        go to state 61
    unaryOp        go to state 62


state 31

  185 unaryOp: '-' .

    $default  reduce using rule 185 (unaryOp)


state 32

  184 unaryOp: '+' .

    $default  reduce using rule 184 (unaryOp)


state 33

  187 unaryOp: '~' .

    $default  reduce using rule 187 (unaryOp)


state 34

  186 unaryOp: '!' .

    $default  reduce using rule 186 (unaryOp)


state 35

  177 exprOp: EXP .

    $default  reduce using rule 177 (exprOp)


state 36

  178 logOp: LOG .

    $default  reduce using rule 178 (logOp)


state 37

  179 sqrtOp: SQRT .

    $default  reduce using rule 179 (sqrtOp)


state 38

  180 floorOp: FLOOR .

    $default  reduce using rule 180 (floorOp)


state 39

  161 atomExpr: call .

    $default  reduce using rule 161 (atomExpr)


state 40

  155 atomExpr: lvalue .
  156         | lvalue . '@' atomExpr

    '@'  shift, and go to state 78

    $default  reduce using rule 155 (atomExpr)


state 41

   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 79


state 42

  116 expr: condExpr .

    $default  reduce using rule 116 (expr)


state 43

  122 condExpr: logOrExpr . '?' condExpr ':' condExpr
  123         | logOrExpr .
  124 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 80
    '?'       shift, and go to state 81

    $default  reduce using rule 123 (condExpr)


state 44

  125 logOrExpr: logAndExpr .
  126 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 82

    $default  reduce using rule 125 (logOrExpr)


state 45

  127 logAndExpr: bitOrExpr .
  128 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 83

    $default  reduce using rule 127 (logAndExpr)


state 46

  129 bitOrExpr: bitXorExpr .
  130 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 84

    $default  reduce using rule 129 (bitOrExpr)


state 47

  131 bitXorExpr: bitAndExpr .
  132 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 85

    $default  reduce using rule 131 (bitXorExpr)


state 48

  133 bitAndExpr: equalExpr .
  134 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 86
    NOT_EQUALS  shift, and go to state 87

    $default  reduce using rule 133 (bitAndExpr)

    equalOp  go to state 88


state 49

  135 equalExpr: inequalExpr .
  136 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 89
    LTE  shift, and go to state 90
    '<'  shift, and go to state 91
    '>'  shift, and go to state 92

    $default  reduce using rule 135 (equalExpr)

    inequalOp  go to state 93


state 50

  137 inequalExpr: shiftExpr .
  138 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 94
    RIGHT_SHIFT  shift, and go to state 95

    $default  reduce using rule 137 (inequalExpr)

    shiftOp  go to state 96


state 51

  139 shiftExpr: addExpr .
  140 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 97
    '+'  shift, and go to state 98

    $default  reduce using rule 139 (shiftExpr)

    addOp  go to state 99


state 52

  141 addExpr: prodExpr .
  142 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 141 (addExpr)

    prodOp  go to state 103


state 53

  143 prodExpr: unaryExpr .

    $default  reduce using rule 143 (prodExpr)


state 54

  151 unaryExpr: floatExpr .

    $default  reduce using rule 151 (unaryExpr)


state 55

  152 floatExpr: fixedExpr .

    $default  reduce using rule 152 (floatExpr)


state 56

  153 fixedExpr: atomExpr . '.' atomExpr
  154          | atomExpr .

    '.'  shift, and go to state 104

    $default  reduce using rule 154 (fixedExpr)


state 57

  162 atomExpr: builtinExpr .

    $default  reduce using rule 162 (atomExpr)


state 58

  145 unaryExpr: exprOp . '(' expr ')'

    '('  shift, and go to state 105


state 59

  146 unaryExpr: logOp . '(' expr ')'

    '('  shift, and go to state 106


state 60

  147 unaryExpr: sqrtOp . '(' expr ')'

    '('  shift, and go to state 107


state 61

  148 unaryExpr: floorOp . '(' expr ')'

    '('  shift, and go to state 108


state 62

  144 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 110
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 63

   19 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 111
    OUTPUT  shift, and go to state 112
    PARAM   shift, and go to state 113

    $default  reduce using rule 21 (ioDecls_opt)

    ioDecls_opt  go to state 114
    ioDecls      go to state 115
    ioDecl       go to state 116
    ioKind       go to state 117


state 64

    7 operator: type_opt opSignature @1 . operatorBody exception_opt

    '{'  shift, and go to state 118

    operatorBody  go to state 119


state 65

   14 type: sizedType '[' expr . ']'
   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 120


state 66

   15 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 121
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 67

  166 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 122
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 68

  164 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 123
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 69

  103 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    $default  reduce using rule 105 (args_opt)

    call         go to state 39
    args_opt     go to state 125
    args         go to state 126
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 70

  112 lvalue: ID_ '[' . expr ']'
  113       | ID_ '[' . expr ':' expr ']'
  114       | ID_ '[' . expr ']' '[' expr ']'
  115       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 127
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 71

  149 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 128


state 72

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'
  150 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 129
    '['  shift, and go to state 19

    arraySize  go to state 20


state 73

  163 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 130


state 74

  165 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 131
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 75

  117 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 132


state 76

  118 condExprs_opt: condExprs .
  120 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 133

    $default  reduce using rule 118 (condExprs_opt)


state 77

  121 condExprs: condExpr .

    $default  reduce using rule 121 (condExprs)


state 78

  156 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    atomExpr     go to state 134
    builtinExpr  go to state 57


state 79

   18 arraySize: '[' expr ']' .

    $default  reduce using rule 18 (arraySize)


state 80

  124 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    logAndExpr   go to state 135
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 81

  122 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 136
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 82

  126 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitOrExpr    go to state 137
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 83

  128 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitXorExpr   go to state 138
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 84

  130 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    bitAndExpr   go to state 139
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 85

  132 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    equalExpr    go to state 140
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 86

  167 equalOp: EQUALS .

    $default  reduce using rule 167 (equalOp)


state 87

  168 equalOp: NOT_EQUALS .

    $default  reduce using rule 168 (equalOp)


state 88

  134 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    inequalExpr  go to state 141
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 89

  172 inequalOp: GTE .

    $default  reduce using rule 172 (inequalOp)


state 90

  171 inequalOp: LTE .

    $default  reduce using rule 171 (inequalOp)


state 91

  169 inequalOp: '<' .

    $default  reduce using rule 169 (inequalOp)


state 92

  170 inequalOp: '>' .

    $default  reduce using rule 170 (inequalOp)


state 93

  136 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    shiftExpr    go to state 142
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 94

  173 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 173 (shiftOp)


state 95

  174 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 174 (shiftOp)


state 96

  138 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    addExpr      go to state 143
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 97

  176 addOp: '-' .

    $default  reduce using rule 176 (addOp)


state 98

  175 addOp: '+' .

    $default  reduce using rule 175 (addOp)


state 99

  140 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    prodExpr     go to state 144
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 100

  183 prodOp: '%' .

    $default  reduce using rule 183 (prodOp)


state 101

  181 prodOp: '*' .

    $default  reduce using rule 181 (prodOp)


state 102

  182 prodOp: '/' .

    $default  reduce using rule 182 (prodOp)


state 103

  142 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    unaryExpr    go to state 145
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 104

  153 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    atomExpr     go to state 146
    builtinExpr  go to state 57


state 105

  145 unaryExpr: exprOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 147
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 106

  146 unaryExpr: logOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 148
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 107

  147 unaryExpr: sqrtOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 149
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 108

  148 unaryExpr: floorOp '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 150
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 109

  163 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 73
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 110

  144 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 144 (unaryExpr)


state 111

   25 ioKind: INPUT .

    $default  reduce using rule 25 (ioKind)


state 112

   26 ioKind: OUTPUT .

    $default  reduce using rule 26 (ioKind)


state 113

   27 ioKind: PARAM .

    $default  reduce using rule 27 (ioKind)


state 114

   19 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 151


state 115

   20 ioDecls_opt: ioDecls .
   22 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 152

    $default  reduce using rule 20 (ioDecls_opt)


state 116

   23 ioDecls: ioDecl .

    $default  reduce using rule 23 (ioDecls)


state 117

   24 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    type       go to state 153
    sizedType  go to state 12


state 118

   32 operatorBody: '{' . typeDecls_opt @2 states '}'
   34             | '{' . typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 154
    typeDecls      go to state 155
    @4             go to state 156


state 119

    7 operator: type_opt opSignature @1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 157

    $default  reduce using rule 29 (exception_opt)

    exception_opt  go to state 158
    exception      go to state 159


state 120

   14 type: sizedType '[' expr ']' .
   18 arraySize: '[' expr ']' .

    '['       reduce using rule 18 (arraySize)
    $default  reduce using rule 14 (type)


state 121

   15 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 160


state 122

  166 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 161


state 123

  108 args: args . ',' expr
  164 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 162
    ','  shift, and go to state 163


state 124

  109 args: expr .

    $default  reduce using rule 109 (args)


state 125

  103 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 164


state 126

  104 args_opt: args .
  108 args: args . ',' expr

    ','  shift, and go to state 163

    $default  reduce using rule 104 (args_opt)


state 127

  112 lvalue: ID_ '[' expr . ']'
  113       | ID_ '[' expr . ':' expr ']'
  114       | ID_ '[' expr . ']' '[' expr ']'
  115       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 165
    ':'  shift, and go to state 166


state 128

  149 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 167
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 129

  150 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 109
    WIDTHOF  shift, and go to state 29

    call         go to state 39
    lvalue       go to state 40
    fixedExpr    go to state 168
    atomExpr     go to state 56
    builtinExpr  go to state 57


state 130

  163 atomExpr: '(' expr ')' .

    $default  reduce using rule 163 (atomExpr)


state 131

  165 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 169


state 132

  117 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 117 (expr)


state 133

  120 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 170
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 134

  156 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 156 (atomExpr)


state 135

  124 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  126 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 82

    $default  reduce using rule 124 (logOrExpr)


state 136

  122 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 171


state 137

  126 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  128 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 83

    $default  reduce using rule 126 (logAndExpr)


state 138

  128 bitOrExpr: bitOrExpr '|' bitXorExpr .
  130 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 84

    $default  reduce using rule 128 (bitOrExpr)


state 139

  130 bitXorExpr: bitXorExpr '^' bitAndExpr .
  132 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 85

    $default  reduce using rule 130 (bitXorExpr)


state 140

  132 bitAndExpr: bitAndExpr '&' equalExpr .
  134 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 86
    NOT_EQUALS  shift, and go to state 87

    $default  reduce using rule 132 (bitAndExpr)

    equalOp  go to state 88


state 141

  134 equalExpr: equalExpr equalOp inequalExpr .
  136 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 89
    LTE  shift, and go to state 90
    '<'  shift, and go to state 91
    '>'  shift, and go to state 92

    $default  reduce using rule 134 (equalExpr)

    inequalOp  go to state 93


state 142

  136 inequalExpr: inequalExpr inequalOp shiftExpr .
  138 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 94
    RIGHT_SHIFT  shift, and go to state 95

    $default  reduce using rule 136 (inequalExpr)

    shiftOp  go to state 96


state 143

  138 shiftExpr: shiftExpr shiftOp addExpr .
  140 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 97
    '+'  shift, and go to state 98

    $default  reduce using rule 138 (shiftExpr)

    addOp  go to state 99


state 144

  140 addExpr: addExpr addOp prodExpr .
  142 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 140 (addExpr)

    prodOp  go to state 103


state 145

  142 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 142 (prodExpr)


state 146

  153 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 153 (fixedExpr)


state 147

  145 unaryExpr: exprOp '(' expr . ')'

    ')'  shift, and go to state 172


state 148

  146 unaryExpr: logOp '(' expr . ')'

    ')'  shift, and go to state 173


state 149

  147 unaryExpr: sqrtOp '(' expr . ')'

    ')'  shift, and go to state 174


state 150

  148 unaryExpr: floorOp '(' expr . ')'

    ')'  shift, and go to state 175


state 151

   19 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 19 (opSignature)


state 152

   22 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 111
    OUTPUT  shift, and go to state 112
    PARAM   shift, and go to state 113

    ioDecl  go to state 176
    ioKind  go to state 117


state 153

   24 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 177


state 154

   32 operatorBody: '{' typeDecls_opt . @2 states '}'
   34             | '{' typeDecls_opt . @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 178

    STATE     reduce using rule 31 (@2)
    $default  reduce using rule 33 (@3)

    @2  go to state 179
    @3  go to state 180


state 155

   36 typeDecls_opt: typeDecls .
   38 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 181

    $default  reduce using rule 36 (typeDecls_opt)

    type       go to state 182
    sizedType  go to state 12
    typeDecl   go to state 183


state 156

   40 typeDecls: @4 . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 181

    type       go to state 182
    sizedType  go to state 12
    typeDecl   go to state 184


state 157

   30 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 30 (exception)


state 158

    7 operator: type_opt opSignature @1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 159

   28 exception_opt: exception .

    $default  reduce using rule 28 (exception_opt)


state 160

   15 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 15 (type)


state 161

  166 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 166 (builtinExpr)


state 162

  164 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 164 (builtinExpr)


state 163

  108 args: args ',' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 185
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 164

  103 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 103 (call)


state 165

  112 lvalue: ID_ '[' expr ']' .
  114       | ID_ '[' expr ']' . '[' expr ']'
  115       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 186

    $default  reduce using rule 112 (lvalue)


state 166

  113 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 187
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 167

  149 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 149 (unaryExpr)


state 168

  150 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 150 (unaryExpr)


state 169

  165 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 165 (builtinExpr)


state 170

  120 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 120 (condExprs)


state 171

  122 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    condExpr     go to state 188
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 172

  145 unaryExpr: exprOp '(' expr ')' .

    $default  reduce using rule 145 (unaryExpr)


state 173

  146 unaryExpr: logOp '(' expr ')' .

    $default  reduce using rule 146 (unaryExpr)


state 174

  147 unaryExpr: sqrtOp '(' expr ')' .

    $default  reduce using rule 147 (unaryExpr)


state 175

  148 unaryExpr: floorOp '(' expr ')' .

    $default  reduce using rule 148 (unaryExpr)


state 176

   22 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 22 (ioDecls)


state 177

   24 ioDecl: ioKind type ID_ .

    $default  reduce using rule 24 (ioDecl)


state 178

   35 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 35 (operatorBody)


state 179

   32 operatorBody: '{' typeDecls_opt @2 . states '}'

    STATE  shift, and go to state 189

    states     go to state 190
    stateCase  go to state 191


state 180

   34 operatorBody: '{' typeDecls_opt @3 . callsOrAssigns '}'

    COPY             shift, and go to state 192
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198

    callsOrAssigns         go to state 199
    callOrAssign_nonEmpty  go to state 200
    builtinStmtCompose     go to state 201
    copyStmt               go to state 202
    segmentStmt            go to state 203
    call                   go to state 204
    lvalue                 go to state 205


state 181

   42 typeDecl: ';' .

    $default  reduce using rule 42 (typeDecl)


state 182

   41 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 206

    typeDeclElems  go to state 207
    typeDeclElem   go to state 208


state 183

   38 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 38 (typeDecls)


state 184

   40 typeDecls: @4 typeDecl .

    $default  reduce using rule 40 (typeDecls)


state 185

  108 args: args ',' expr .

    $default  reduce using rule 108 (args)


state 186

  114 lvalue: ID_ '[' expr ']' '[' . expr ']'
  115       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 209
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 187

  113 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 210


state 188

  122 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 122 (condExpr)


state 189

   60 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 211


state 190

   32 operatorBody: '{' typeDecls_opt @2 states . '}'
   58 states: states . stateCase

    STATE  shift, and go to state 189
    '}'    shift, and go to state 212

    stateCase  go to state 213


state 191

   59 states: stateCase .

    $default  reduce using rule 59 (states)


state 192

   96 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 214


state 193

   97 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 215


state 194

   99 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 216


state 195

  100 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 217


state 196

  102 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 218


state 197

  101 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 219


state 198

   98 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 220


state 199

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns . '}'
   50 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 192
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    '}'              shift, and go to state 221
    ';'              shift, and go to state 222

    callOrAssign           go to state 223
    callOrAssign_nonEmpty  go to state 224
    builtinStmtCompose     go to state 201
    copyStmt               go to state 202
    segmentStmt            go to state 203
    call                   go to state 204
    lvalue                 go to state 205


state 200

   51 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 51 (callsOrAssigns)


state 201

   57 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 225


state 202

   94 builtinStmtCompose: copyStmt .

    $default  reduce using rule 94 (builtinStmtCompose)


state 203

   95 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 95 (builtinStmtCompose)


state 204

   54 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 226


state 205

   55 callOrAssign_nonEmpty: lvalue . '=' call ';'
   56                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 227


state 206

   45 typeDeclElem: ID_ .
   47             | ID_ . @5 '=' expr
   49             | ID_ . @6 '(' expr ')'

    '('       reduce using rule 48 (@6)
    '='       reduce using rule 46 (@5)
    $default  reduce using rule 45 (typeDeclElem)

    @5  go to state 228
    @6  go to state 229


state 207

   41 typeDecl: type typeDeclElems . ';'
   44 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 230
    ','  shift, and go to state 231


state 208

   43 typeDeclElems: typeDeclElem .

    $default  reduce using rule 43 (typeDeclElems)


state 209

  114 lvalue: ID_ '[' expr ']' '[' expr . ']'
  115       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 232
    ':'  shift, and go to state 233


state 210

  113 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 113 (lvalue)


state 211

   60 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 234


state 212

   32 operatorBody: '{' typeDecls_opt @2 states '}' .

    $default  reduce using rule 32 (operatorBody)


state 213

   58 states: states stateCase .

    $default  reduce using rule 58 (states)


state 214

   96 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 235
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 215

   97 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 236
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 216

   99 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 237
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 217

  100 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 238
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 218

  102 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 239
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 219

  101 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 240
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 220

   98 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 241
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 221

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}' .

    $default  reduce using rule 34 (operatorBody)


state 222

   53 callOrAssign: ';' .

    $default  reduce using rule 53 (callOrAssign)


state 223

   50 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 50 (callsOrAssigns)


state 224

   52 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 52 (callOrAssign)


state 225

   57 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 57 (callOrAssign_nonEmpty)


state 226

   54 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 54 (callOrAssign_nonEmpty)


state 227

   55 callOrAssign_nonEmpty: lvalue '=' . call ';'
   56                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 24

    call    go to state 242
    lvalue  go to state 243


state 228

   47 typeDeclElem: ID_ @5 . '=' expr

    '='  shift, and go to state 244


state 229

   49 typeDeclElem: ID_ @6 . '(' expr ')'

    '('  shift, and go to state 245


state 230

   41 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 41 (typeDecl)


state 231

   44 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 206

    typeDeclElem  go to state 246


state 232

  114 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 114 (lvalue)


state 233

  115 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 247
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 234

   60 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS   shift, and go to state 248
    EOFR  shift, and go to state 249
    ID_   shift, and go to state 250

    $default  reduce using rule 62 (stateVars_opt)

    stateVars_opt  go to state 251
    stateVars      go to state 252
    stateVar       go to state 253


state 235

   96 copyStmt: COPY '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 254
    ','  shift, and go to state 163


state 236

   97 segmentStmt: SEGMENT_R_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 255
    ','  shift, and go to state 163


state 237

   99 segmentStmt: SEGMENT_RW_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 256
    ','  shift, and go to state 163


state 238

  100 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 257
    ','  shift, and go to state 163


state 239

  102 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 258
    ','  shift, and go to state 163


state 240

  101 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 259
    ','  shift, and go to state 163


state 241

   98 segmentStmt: SEGMENT_W_ '(' args . ')'
  108 args: args . ',' expr

    ')'  shift, and go to state 260
    ','  shift, and go to state 163


state 242

   55 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 261


state 243

   56 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 262


state 244

   47 typeDeclElem: ID_ @5 '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 263
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 245

   49 typeDeclElem: ID_ @6 '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 264
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 246

   44 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 44 (typeDeclElems)


state 247

  115 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 265


state 248

   67 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 266


state 249

   68 stateVar: EOFR . '(' ID_ ')'

    '('  shift, and go to state 267


state 250

   65 stateVar: ID_ .
   66         | ID_ . '#' expr

    '#'  shift, and go to state 268

    $default  reduce using rule 65 (stateVar)


state 251

   60 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 269


state 252

   61 stateVars_opt: stateVars .
   63 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 270

    $default  reduce using rule 61 (stateVars_opt)


state 253

   64 stateVars: stateVar .

    $default  reduce using rule 64 (stateVars)


state 254

   96 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 96 (copyStmt)


state 255

   97 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 97 (segmentStmt)


state 256

   99 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 99 (segmentStmt)


state 257

  100 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 100 (segmentStmt)


state 258

  102 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 102 (segmentStmt)


state 259

  101 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 101 (segmentStmt)


state 260

   98 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 261

   55 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 262

   56 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 56 (callOrAssign_nonEmpty)


state 263

   47 typeDeclElem: ID_ @5 '=' expr .

    $default  reduce using rule 47 (typeDeclElem)


state 264

   49 typeDeclElem: ID_ @6 '(' expr . ')'

    ')'  shift, and go to state 271


state 265

  115 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 115 (lvalue)


state 266

   67 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 272


state 267

   68 stateVar: EOFR '(' . ID_ ')'

    ID_  shift, and go to state 273


state 268

   66 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 274
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 269

   60 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 275


state 270

   63 stateVars: stateVars ',' . stateVar

    EOS   shift, and go to state 248
    EOFR  shift, and go to state 249
    ID_   shift, and go to state 250

    stateVar  go to state 276


state 271

   49 typeDeclElem: ID_ @6 '(' expr ')' .

    $default  reduce using rule 49 (typeDeclElem)


state 272

   67 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 277


state 273

   68 stateVar: EOFR '(' ID_ . ')'

    ')'  shift, and go to state 278


state 274

   66 stateVar: ID_ '#' expr .

    $default  reduce using rule 66 (stateVar)


state 275

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 279
    CLOSE            shift, and go to state 280
    FRAMECLOSE       shift, and go to state 281
    COPY             shift, and go to state 192
    DONE             shift, and go to state 282
    GOTO             shift, and go to state 283
    ID_              shift, and go to state 24
    IF               shift, and go to state 284
    PRINTF           shift, and go to state 285
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 286
    '{'              shift, and go to state 287

    $default  reduce using rule 70 (stmts_opt)

    stmts_opt         go to state 288
    stmts             go to state 289
    stmt_nonEmpty     go to state 290
    matchedStmt       go to state 291
    unmatchedStmt     go to state 292
    stmtBlock         go to state 293
    builtinStmtBehav  go to state 294
    copyStmt          go to state 295
    segmentStmt       go to state 296
    call              go to state 297
    assign            go to state 298
    lvalue            go to state 299


state 276

   63 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 63 (stateVars)


state 277

   67 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 67 (stateVar)


state 278

   68 stateVar: EOFR '(' ID_ ')' .

    $default  reduce using rule 68 (stateVar)


state 279

   87 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 300


state 280

   88 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 301


state 281

   89 builtinStmtBehav: FRAMECLOSE . '(' ID_ ')'

    '('  shift, and go to state 302


state 282

   90 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 303


state 283

   78 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 304


state 284

   77 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   84 unmatchedStmt: IF . '(' expr ')' stmt
   85              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 305


state 285

   91 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 306


state 286

   79 matchedStmt: STAY . ';'

    ';'  shift, and go to state 307


state 287

   86 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 308
    typeDecls      go to state 155
    @4             go to state 156


state 288

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 60 (stateCase)


state 289

   69 stmts_opt: stmts .
   71 stmts: stmts . stmt

    ATTENTION        shift, and go to state 279
    CLOSE            shift, and go to state 280
    FRAMECLOSE       shift, and go to state 281
    COPY             shift, and go to state 192
    DONE             shift, and go to state 282
    GOTO             shift, and go to state 283
    ID_              shift, and go to state 24
    IF               shift, and go to state 284
    PRINTF           shift, and go to state 285
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 286
    '{'              shift, and go to state 287
    ';'              shift, and go to state 309

    $default  reduce using rule 69 (stmts_opt)

    stmt              go to state 310
    stmt_nonEmpty     go to state 311
    matchedStmt       go to state 291
    unmatchedStmt     go to state 292
    stmtBlock         go to state 293
    builtinStmtBehav  go to state 294
    copyStmt          go to state 295
    segmentStmt       go to state 296
    call              go to state 297
    assign            go to state 298
    lvalue            go to state 299


state 290

   72 stmts: stmt_nonEmpty .

    $default  reduce using rule 72 (stmts)


state 291

   75 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 75 (stmt_nonEmpty)


state 292

   76 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 76 (stmt_nonEmpty)


state 293

   83 matchedStmt: stmtBlock .

    $default  reduce using rule 83 (matchedStmt)


state 294

   81 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 312


state 295

   92 builtinStmtBehav: copyStmt .

    $default  reduce using rule 92 (builtinStmtBehav)


state 296

   93 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 93 (builtinStmtBehav)


state 297

   82 matchedStmt: call . ';'

    ';'  shift, and go to state 313


state 298

   80 matchedStmt: assign . ';'

    ';'  shift, and go to state 314


state 299

  110 assign: lvalue . '=' expr

    '='  shift, and go to state 315


state 300

   87 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 316
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 301

   88 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 317


state 302

   89 builtinStmtBehav: FRAMECLOSE '(' . ID_ ')'

    ID_  shift, and go to state 318


state 303

   90 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 319


state 304

   78 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 320


state 305

   77 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   84 unmatchedStmt: IF '(' . expr ')' stmt
   85              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 321
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 306

   91 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 322


state 307

   79 matchedStmt: STAY ';' .

    $default  reduce using rule 79 (matchedStmt)


state 308

   86 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 279
    CLOSE            shift, and go to state 280
    FRAMECLOSE       shift, and go to state 281
    COPY             shift, and go to state 192
    DONE             shift, and go to state 282
    GOTO             shift, and go to state 283
    ID_              shift, and go to state 24
    IF               shift, and go to state 284
    PRINTF           shift, and go to state 285
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 286
    '{'              shift, and go to state 287

    $default  reduce using rule 70 (stmts_opt)

    stmts_opt         go to state 323
    stmts             go to state 289
    stmt_nonEmpty     go to state 290
    matchedStmt       go to state 291
    unmatchedStmt     go to state 292
    stmtBlock         go to state 293
    builtinStmtBehav  go to state 294
    copyStmt          go to state 295
    segmentStmt       go to state 296
    call              go to state 297
    assign            go to state 298
    lvalue            go to state 299


state 309

   74 stmt: ';' .

    $default  reduce using rule 74 (stmt)


state 310

   71 stmts: stmts stmt .

    $default  reduce using rule 71 (stmts)


state 311

   73 stmt: stmt_nonEmpty .

    $default  reduce using rule 73 (stmt)


state 312

   81 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 81 (matchedStmt)


state 313

   82 matchedStmt: call ';' .

    $default  reduce using rule 82 (matchedStmt)


state 314

   80 matchedStmt: assign ';' .

    $default  reduce using rule 80 (matchedStmt)


state 315

  110 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    lvalue       go to state 40
    expr         go to state 324
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 316

   87 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 325


state 317

   88 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 326


state 318

   89 builtinStmtBehav: FRAMECLOSE '(' ID_ . ')'

    ')'  shift, and go to state 327


state 319

   90 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 90 (builtinStmtBehav)


state 320

   78 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 78 (matchedStmt)


state 321

   77 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   84 unmatchedStmt: IF '(' expr . ')' stmt
   85              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 328


state 322

   91 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 329

    $default  reduce using rule 107 (more_args_opt)

    more_args_opt  go to state 330


state 323

   86 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 331


state 324

  110 assign: lvalue '=' expr .

    $default  reduce using rule 110 (assign)


state 325

   87 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 87 (builtinStmtBehav)


state 326

   88 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 88 (builtinStmtBehav)


state 327

   89 builtinStmtBehav: FRAMECLOSE '(' ID_ ')' .

    $default  reduce using rule 89 (builtinStmtBehav)


state 328

   77 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   84 unmatchedStmt: IF '(' expr ')' . stmt
   85              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 279
    CLOSE            shift, and go to state 280
    FRAMECLOSE       shift, and go to state 281
    COPY             shift, and go to state 192
    DONE             shift, and go to state 282
    GOTO             shift, and go to state 283
    ID_              shift, and go to state 24
    IF               shift, and go to state 284
    PRINTF           shift, and go to state 285
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 286
    '{'              shift, and go to state 287
    ';'              shift, and go to state 309

    stmt              go to state 332
    stmt_nonEmpty     go to state 311
    matchedStmt       go to state 333
    unmatchedStmt     go to state 292
    stmtBlock         go to state 293
    builtinStmtBehav  go to state 294
    copyStmt          go to state 295
    segmentStmt       go to state 296
    call              go to state 297
    assign            go to state 298
    lvalue            go to state 299


state 329

  106 more_args_opt: ',' . args

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    NUMDBL   shift, and go to state 26
    TRUE     shift, and go to state 27
    '('      shift, and go to state 28
    WIDTHOF  shift, and go to state 29
    '{'      shift, and go to state 30
    '-'      shift, and go to state 31
    '+'      shift, and go to state 32
    '~'      shift, and go to state 33
    '!'      shift, and go to state 34
    EXP      shift, and go to state 35
    LOG      shift, and go to state 36
    SQRT     shift, and go to state 37
    FLOOR    shift, and go to state 38

    call         go to state 39
    args         go to state 334
    lvalue       go to state 40
    expr         go to state 124
    condExpr     go to state 42
    logOrExpr    go to state 43
    logAndExpr   go to state 44
    bitOrExpr    go to state 45
    bitXorExpr   go to state 46
    bitAndExpr   go to state 47
    equalExpr    go to state 48
    inequalExpr  go to state 49
    shiftExpr    go to state 50
    addExpr      go to state 51
    prodExpr     go to state 52
    unaryExpr    go to state 53
    floatExpr    go to state 54
    fixedExpr    go to state 55
    atomExpr     go to state 56
    builtinExpr  go to state 57
    exprOp       go to state 58
    logOp        go to state 59
    sqrtOp       go to state 60
    floorOp      go to state 61
    unaryOp      go to state 62


state 330

   91 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 335


state 331

   86 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 86 (stmtBlock)


state 332

   84 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 84 (unmatchedStmt)


state 333

   75 stmt_nonEmpty: matchedStmt .
   77 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   85 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 336

    $default  reduce using rule 75 (stmt_nonEmpty)


state 334

  106 more_args_opt: ',' args .
  108 args: args . ',' expr

    ','  shift, and go to state 163

    $default  reduce using rule 106 (more_args_opt)


state 335

   91 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 91 (builtinStmtBehav)


state 336

   77 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   85 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 279
    CLOSE            shift, and go to state 280
    FRAMECLOSE       shift, and go to state 281
    COPY             shift, and go to state 192
    DONE             shift, and go to state 282
    GOTO             shift, and go to state 283
    ID_              shift, and go to state 24
    IF               shift, and go to state 284
    PRINTF           shift, and go to state 285
    SEGMENT_R_       shift, and go to state 193
    SEGMENT_RW_      shift, and go to state 194
    SEGMENT_SEQ_R_   shift, and go to state 195
    SEGMENT_SEQ_RW_  shift, and go to state 196
    SEGMENT_SEQ_W_   shift, and go to state 197
    SEGMENT_W_       shift, and go to state 198
    STAY             shift, and go to state 286
    '{'              shift, and go to state 287

    matchedStmt       go to state 337
    unmatchedStmt     go to state 338
    stmtBlock         go to state 293
    builtinStmtBehav  go to state 294
    copyStmt          go to state 295
    segmentStmt       go to state 296
    call              go to state 297
    assign            go to state 298
    lvalue            go to state 299


state 337

   77 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 77 (matchedStmt)


state 338

   85 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 85 (unmatchedStmt)
