Grammar

    0 $accept: start $end

    1 start: operators_opt

    2 operators_opt: operators
    3              | /* empty */

    4 operators: operators operator
    5          | operator

    6 @1: /* empty */

    7 operator: type_opt opSignature @1 operatorBody exception_opt

    8 type_opt: type
    9         | /* empty */

   10 type: BOOLEAN
   11     | FLOAT
   12     | DOUBLE
   13     | BOOLEAN arraySize
   14     | sizedType '[' expr ']'
   15     | sizedType arraySize '[' expr ']'

   16 sizedType: SIGNED
   17          | UNSIGNED

   18 arraySize: '[' expr ']'

   19 opSignature: ID_ '(' ioDecls_opt ')'

   20 ioDecls_opt: ioDecls
   21            | /* empty */

   22 ioDecls: ioDecls ',' ioDecl
   23        | ioDecl

   24 ioDecl: ioKind type ID_

   25 ioKind: INPUT
   26       | OUTPUT
   27       | PARAM

   28 exception_opt: exception
   29              | /* empty */

   30 exception: PASS_THROUGH_EXCEPTION

   31 @2: /* empty */

   32 operatorBody: '{' typeDecls_opt @2 states '}'

   33 @3: /* empty */

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt '}'

   36 typeDecls_opt: typeDecls
   37              | /* empty */

   38 typeDecls: typeDecls typeDecl

   39 @4: /* empty */

   40 typeDecls: @4 typeDecl

   41 typeDecl: type typeDeclElems ';'
   42         | ';'

   43 typeDeclElems: typeDeclElem
   44              | typeDeclElems ',' typeDeclElem

   45 typeDeclElem: ID_

   46 @5: /* empty */

   47 typeDeclElem: ID_ @5 '=' expr

   48 @6: /* empty */

   49 typeDeclElem: ID_ @6 '(' expr ')'

   50 callsOrAssigns: callsOrAssigns callOrAssign
   51               | callOrAssign_nonEmpty

   52 callOrAssign: callOrAssign_nonEmpty
   53             | ';'

   54 callOrAssign_nonEmpty: call ';'
   55                      | lvalue '=' call ';'
   56                      | lvalue '=' lvalue ';'
   57                      | builtinStmtCompose ';'

   58 states: states stateCase
   59       | stateCase

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt

   61 stateVars_opt: stateVars
   62              | /* empty */

   63 stateVars: stateVars ',' stateVar
   64          | stateVar

   65 stateVar: ID_
   66         | ID_ '#' expr
   67         | EOS '(' ID_ ')'

   68 stmts_opt: stmts
   69          | /* empty */

   70 stmts: stmts stmt
   71      | stmt_nonEmpty

   72 stmt: stmt_nonEmpty
   73     | ';'

   74 stmt_nonEmpty: matchedStmt
   75              | unmatchedStmt

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt
   77            | GOTO ID_ ';'
   78            | STAY ';'
   79            | assign ';'
   80            | builtinStmtBehav ';'
   81            | call ';'
   82            | stmtBlock

   83 unmatchedStmt: IF '(' expr ')' stmt
   84              | IF '(' expr ')' matchedStmt ELSE unmatchedStmt

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}'

   86 builtinStmtBehav: ATTENTION '(' expr ')'
   87                 | CLOSE '(' ID_ ')'
   88                 | DONE '(' ')'
   89                 | PRINTF '(' STRING more_args_opt ')'
   90                 | copyStmt
   91                 | segmentStmt

   92 builtinStmtCompose: copyStmt
   93                   | segmentStmt

   94 copyStmt: COPY '(' args ')'

   95 segmentStmt: SEGMENT_R_ '(' args ')'
   96            | SEGMENT_W_ '(' args ')'
   97            | SEGMENT_RW_ '(' args ')'
   98            | SEGMENT_SEQ_R_ '(' args ')'
   99            | SEGMENT_SEQ_W_ '(' args ')'
  100            | SEGMENT_SEQ_RW_ '(' args ')'

  101 call: ID_ '(' args_opt ')'

  102 args_opt: args
  103         | /* empty */

  104 more_args_opt: ',' args
  105              | /* empty */

  106 args: args ',' expr
  107     | expr

  108 assign: lvalue '=' expr

  109 lvalue: ID_
  110       | ID_ '[' expr ']'
  111       | ID_ '[' expr ':' expr ']'
  112       | ID_ '[' expr ']' '[' expr ']'
  113       | ID_ '[' expr ']' '[' expr ':' expr ']'

  114 expr: condExpr
  115     | '{' condExprs_opt '}'

  116 condExprs_opt: condExprs
  117              | /* empty */

  118 condExprs: condExprs ',' condExpr
  119          | condExpr

  120 condExpr: logOrExpr '?' condExpr ':' condExpr
  121         | logOrExpr

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr
  123          | logAndExpr

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr
  125           | bitOrExpr

  126 bitOrExpr: bitOrExpr '|' bitXorExpr
  127          | bitXorExpr

  128 bitXorExpr: bitXorExpr '^' bitAndExpr
  129           | bitAndExpr

  130 bitAndExpr: bitAndExpr '&' equalExpr
  131           | equalExpr

  132 equalExpr: equalExpr equalOp inequalExpr
  133          | inequalExpr

  134 inequalExpr: inequalExpr inequalOp shiftExpr
  135            | shiftExpr

  136 shiftExpr: shiftExpr shiftOp addExpr
  137          | addExpr

  138 addExpr: addExpr addOp prodExpr
  139        | prodExpr

  140 prodExpr: prodExpr prodOp unaryExpr
  141         | unaryExpr

  142 unaryExpr: unaryOp fixedExpr
  143          | '(' type ')' fixedExpr
  144          | '(' sizedType ')' fixedExpr
  145          | fixedExpr

  146 fixedExpr: atomExpr '.' atomExpr
  147          | atomExpr

  148 atomExpr: lvalue
  149         | lvalue '@' atomExpr
  150         | NUM
  151         | TRUE
  152         | FALSE
  153         | call
  154         | builtinExpr
  155         | '(' expr ')'

  156 builtinExpr: CAT '(' args ')'
  157            | WIDTHOF '(' expr ')'
  158            | BITSOF '(' expr ')'

  159 equalOp: EQUALS
  160        | NOT_EQUALS

  161 inequalOp: '<'
  162          | '>'
  163          | LTE
  164          | GTE

  165 shiftOp: LEFT_SHIFT
  166        | RIGHT_SHIFT

  167 addOp: '+'
  168      | '-'

  169 prodOp: '*'
  170       | '/'
  171       | '%'

  172 unaryOp: '+'
  173        | '-'
  174        | '!'
  175        | '~'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 174
'#' (35) 66
'%' (37) 171
'&' (38) 130
'(' (40) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 155 156 157 158
')' (41) 19 49 60 67 76 83 84 86 87 88 89 94 95 96 97 98 99 100 101
    143 144 155 156 157 158
'*' (42) 169
'+' (43) 167 172
',' (44) 22 44 63 104 106 118
'-' (45) 168 173
'.' (46) 146
'/' (47) 170
':' (58) 60 111 113 120
';' (59) 41 42 53 54 55 56 57 73 77 78 79 80 81
'<' (60) 161
'=' (61) 47 55 56 108
'>' (62) 162
'?' (63) 120
'@' (64) 149
'[' (91) 14 15 18 110 111 112 113
']' (93) 14 15 18 110 111 112 113
'^' (94) 128
'{' (123) 32 34 35 85 115
'|' (124) 126
'}' (125) 32 34 35 85 115
'~' (126) 175
error (256)
ATTENTION (258) 86
BITSOF (259) 158
BOOLEAN (260) 10 13
FLOAT (261) 11
DOUBLE (262) 12
CAT (263) 156
CLOSE (264) 87
COPY (265) 94
DONE (266) 88
ELSE (267) 76 84
EOS (268) 67
EQUALS (269) 159
FALSE (270) 152
GOTO (271) 77
GTE (272) 164
ID_ (273) 19 24 45 47 49 60 65 66 67 77 87 101 109 110 111 112 113
IF (274) 76 83 84
INPUT (275) 25
LEFT_SHIFT (276) 165
LOGIC_AND (277) 124
LOGIC_OR (278) 122
LTE (279) 163
NOT_EQUALS (280) 160
NUM (281) 150
OUTPUT (282) 26
PARAM (283) 27
PASS_THROUGH_EXCEPTION (284) 30
PRINTF (285) 89
RIGHT_SHIFT (286) 166
SEGMENT_R_ (287) 95
SEGMENT_RW_ (288) 97
SEGMENT_SEQ_R_ (289) 98
SEGMENT_SEQ_RW_ (290) 100
SEGMENT_SEQ_W_ (291) 99
SEGMENT_W_ (292) 96
SIGNED (293) 16
STATE (294) 60
STAY (295) 78
STRING (296) 89
TRUE (297) 151
UNSIGNED (298) 17
WIDTHOF (299) 157


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
start (72)
    on left: 1, on right: 0
operators_opt (73)
    on left: 2 3, on right: 1
operators (74)
    on left: 4 5, on right: 2 4
operator (75)
    on left: 7, on right: 4 5
@1 (76)
    on left: 6, on right: 7
type_opt (77)
    on left: 8 9, on right: 7
type (78)
    on left: 10 11 12 13 14 15, on right: 8 24 41 143
sizedType (79)
    on left: 16 17, on right: 14 15 144
arraySize (80)
    on left: 18, on right: 13 15
opSignature (81)
    on left: 19, on right: 7
ioDecls_opt (82)
    on left: 20 21, on right: 19
ioDecls (83)
    on left: 22 23, on right: 20 22
ioDecl (84)
    on left: 24, on right: 22 23
ioKind (85)
    on left: 25 26 27, on right: 24
exception_opt (86)
    on left: 28 29, on right: 7
exception (87)
    on left: 30, on right: 28
operatorBody (88)
    on left: 32 34 35, on right: 7
@2 (89)
    on left: 31, on right: 32
@3 (90)
    on left: 33, on right: 34
typeDecls_opt (91)
    on left: 36 37, on right: 32 34 35 85
typeDecls (92)
    on left: 38 40, on right: 36 38
@4 (93)
    on left: 39, on right: 40
typeDecl (94)
    on left: 41 42, on right: 38 40
typeDeclElems (95)
    on left: 43 44, on right: 41 44
typeDeclElem (96)
    on left: 45 47 49, on right: 43 44
@5 (97)
    on left: 46, on right: 47
@6 (98)
    on left: 48, on right: 49
callsOrAssigns (99)
    on left: 50 51, on right: 34 50
callOrAssign (100)
    on left: 52 53, on right: 50
callOrAssign_nonEmpty (101)
    on left: 54 55 56 57, on right: 51 52
states (102)
    on left: 58 59, on right: 32 58
stateCase (103)
    on left: 60, on right: 58 59
stateVars_opt (104)
    on left: 61 62, on right: 60
stateVars (105)
    on left: 63 64, on right: 61 63
stateVar (106)
    on left: 65 66 67, on right: 63 64
stmts_opt (107)
    on left: 68 69, on right: 60 85
stmts (108)
    on left: 70 71, on right: 68 70
stmt (109)
    on left: 72 73, on right: 70 83
stmt_nonEmpty (110)
    on left: 74 75, on right: 71 72
matchedStmt (111)
    on left: 76 77 78 79 80 81 82, on right: 74 76 84
unmatchedStmt (112)
    on left: 83 84, on right: 75 84
stmtBlock (113)
    on left: 85, on right: 82
builtinStmtBehav (114)
    on left: 86 87 88 89 90 91, on right: 80
builtinStmtCompose (115)
    on left: 92 93, on right: 57
copyStmt (116)
    on left: 94, on right: 90 92
segmentStmt (117)
    on left: 95 96 97 98 99 100, on right: 91 93
call (118)
    on left: 101, on right: 54 55 81 153
args_opt (119)
    on left: 102 103, on right: 101
more_args_opt (120)
    on left: 104 105, on right: 89
args (121)
    on left: 106 107, on right: 94 95 96 97 98 99 100 102 104 106 156
assign (122)
    on left: 108, on right: 79
lvalue (123)
    on left: 109 110 111 112 113, on right: 55 56 108 148 149
expr (124)
    on left: 114 115, on right: 14 15 18 47 49 66 76 83 84 86 106 107
    108 110 111 112 113 155 157 158
condExprs_opt (125)
    on left: 116 117, on right: 115
condExprs (126)
    on left: 118 119, on right: 116 118
condExpr (127)
    on left: 120 121, on right: 114 118 119 120
logOrExpr (128)
    on left: 122 123, on right: 120 121 122
logAndExpr (129)
    on left: 124 125, on right: 122 123 124
bitOrExpr (130)
    on left: 126 127, on right: 124 125 126
bitXorExpr (131)
    on left: 128 129, on right: 126 127 128
bitAndExpr (132)
    on left: 130 131, on right: 128 129 130
equalExpr (133)
    on left: 132 133, on right: 130 131 132
inequalExpr (134)
    on left: 134 135, on right: 132 133 134
shiftExpr (135)
    on left: 136 137, on right: 134 135 136
addExpr (136)
    on left: 138 139, on right: 136 137 138
prodExpr (137)
    on left: 140 141, on right: 138 139 140
unaryExpr (138)
    on left: 142 143 144 145, on right: 140 141
fixedExpr (139)
    on left: 146 147, on right: 142 143 144 145
atomExpr (140)
    on left: 148 149 150 151 152 153 154 155, on right: 146 147 149
builtinExpr (141)
    on left: 156 157 158, on right: 154
equalOp (142)
    on left: 159 160, on right: 132
inequalOp (143)
    on left: 161 162 163 164, on right: 134
shiftOp (144)
    on left: 165 166, on right: 136
addOp (145)
    on left: 167 168, on right: 138
prodOp (146)
    on left: 169 170 171, on right: 140
unaryOp (147)
    on left: 172 173 174 175, on right: 142


state 0

    0 $accept: . start $end

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 3 (operators_opt)

    start          go to state 6
    operators_opt  go to state 7
    operators      go to state 8
    operator       go to state 9
    type_opt       go to state 10
    type           go to state 11
    sizedType      go to state 12


state 1

   10 type: BOOLEAN .
   13     | BOOLEAN . arraySize

    '['  shift, and go to state 13

    $default  reduce using rule 10 (type)

    arraySize  go to state 14


state 2

   11 type: FLOAT .

    $default  reduce using rule 11 (type)


state 3

   12 type: DOUBLE .

    $default  reduce using rule 12 (type)


state 4

   16 sizedType: SIGNED .

    $default  reduce using rule 16 (sizedType)


state 5

   17 sizedType: UNSIGNED .

    $default  reduce using rule 17 (sizedType)


state 6

    0 $accept: start . $end

    $end  shift, and go to state 15


state 7

    1 start: operators_opt .

    $default  reduce using rule 1 (start)


state 8

    2 operators_opt: operators .
    4 operators: operators . operator

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    ID_       reduce using rule 9 (type_opt)
    $default  reduce using rule 2 (operators_opt)

    operator   go to state 16
    type_opt   go to state 10
    type       go to state 11
    sizedType  go to state 12


state 9

    5 operators: operator .

    $default  reduce using rule 5 (operators)


state 10

    7 operator: type_opt . opSignature @1 operatorBody exception_opt

    ID_  shift, and go to state 17

    opSignature  go to state 18


state 11

    8 type_opt: type .

    $default  reduce using rule 8 (type_opt)


state 12

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'

    '['  shift, and go to state 19

    arraySize  go to state 20


state 13

   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 36
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 14

   13 type: BOOLEAN arraySize .

    $default  reduce using rule 13 (type)


state 15

    0 $accept: start $end .

    $default  accept


state 16

    4 operators: operators operator .

    $default  reduce using rule 4 (operators)


state 17

   19 opSignature: ID_ . '(' ioDecls_opt ')'

    '('  shift, and go to state 53


state 18

    7 operator: type_opt opSignature . @1 operatorBody exception_opt

    $default  reduce using rule 6 (@1)

    @1  go to state 54


state 19

   14 type: sizedType '[' . expr ']'
   18 arraySize: '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 55
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 20

   15 type: sizedType arraySize . '[' expr ']'

    '['  shift, and go to state 56


state 21

  158 builtinExpr: BITSOF . '(' expr ')'

    '('  shift, and go to state 57


state 22

  156 builtinExpr: CAT . '(' args ')'

    '('  shift, and go to state 58


state 23

  152 atomExpr: FALSE .

    $default  reduce using rule 152 (atomExpr)


state 24

  101 call: ID_ . '(' args_opt ')'
  109 lvalue: ID_ .
  110       | ID_ . '[' expr ']'
  111       | ID_ . '[' expr ':' expr ']'
  112       | ID_ . '[' expr ']' '[' expr ']'
  113       | ID_ . '[' expr ']' '[' expr ':' expr ']'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 109 (lvalue)


state 25

  150 atomExpr: NUM .

    $default  reduce using rule 150 (atomExpr)


state 26

  151 atomExpr: TRUE .

    $default  reduce using rule 151 (atomExpr)


state 27

  143 unaryExpr: '(' . type ')' fixedExpr
  144          | '(' . sizedType ')' fixedExpr
  155 atomExpr: '(' . expr ')'

    BITSOF    shift, and go to state 21
    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    CAT       shift, and go to state 22
    FALSE     shift, and go to state 23
    ID_       shift, and go to state 24
    NUM       shift, and go to state 25
    SIGNED    shift, and go to state 4
    TRUE      shift, and go to state 26
    UNSIGNED  shift, and go to state 5
    '('       shift, and go to state 27
    WIDTHOF   shift, and go to state 28
    '{'       shift, and go to state 29
    '-'       shift, and go to state 30
    '+'       shift, and go to state 31
    '~'       shift, and go to state 32
    '!'       shift, and go to state 33

    type         go to state 61
    sizedType    go to state 62
    call         go to state 34
    lvalue       go to state 35
    expr         go to state 63
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 28

  157 builtinExpr: WIDTHOF . '(' expr ')'

    '('  shift, and go to state 64


state 29

  115 expr: '{' . condExprs_opt '}'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    $default  reduce using rule 117 (condExprs_opt)

    call           go to state 34
    lvalue         go to state 35
    condExprs_opt  go to state 65
    condExprs      go to state 66
    condExpr       go to state 67
    logOrExpr      go to state 38
    logAndExpr     go to state 39
    bitOrExpr      go to state 40
    bitXorExpr     go to state 41
    bitAndExpr     go to state 42
    equalExpr      go to state 43
    inequalExpr    go to state 44
    shiftExpr      go to state 45
    addExpr        go to state 46
    prodExpr       go to state 47
    unaryExpr      go to state 48
    fixedExpr      go to state 49
    atomExpr       go to state 50
    builtinExpr    go to state 51
    unaryOp        go to state 52


state 30

  173 unaryOp: '-' .

    $default  reduce using rule 173 (unaryOp)


state 31

  172 unaryOp: '+' .

    $default  reduce using rule 172 (unaryOp)


state 32

  175 unaryOp: '~' .

    $default  reduce using rule 175 (unaryOp)


state 33

  174 unaryOp: '!' .

    $default  reduce using rule 174 (unaryOp)


state 34

  153 atomExpr: call .

    $default  reduce using rule 153 (atomExpr)


state 35

  148 atomExpr: lvalue .
  149         | lvalue . '@' atomExpr

    '@'  shift, and go to state 68

    $default  reduce using rule 148 (atomExpr)


state 36

   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 69


state 37

  114 expr: condExpr .

    $default  reduce using rule 114 (expr)


state 38

  120 condExpr: logOrExpr . '?' condExpr ':' condExpr
  121         | logOrExpr .
  122 logOrExpr: logOrExpr . LOGIC_OR logAndExpr

    LOGIC_OR  shift, and go to state 70
    '?'       shift, and go to state 71

    $default  reduce using rule 121 (condExpr)


state 39

  123 logOrExpr: logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 72

    $default  reduce using rule 123 (logOrExpr)


state 40

  125 logAndExpr: bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 73

    $default  reduce using rule 125 (logAndExpr)


state 41

  127 bitOrExpr: bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 74

    $default  reduce using rule 127 (bitOrExpr)


state 42

  129 bitXorExpr: bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 75

    $default  reduce using rule 129 (bitXorExpr)


state 43

  131 bitAndExpr: equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 76
    NOT_EQUALS  shift, and go to state 77

    $default  reduce using rule 131 (bitAndExpr)

    equalOp  go to state 78


state 44

  133 equalExpr: inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 79
    LTE  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82

    $default  reduce using rule 133 (equalExpr)

    inequalOp  go to state 83


state 45

  135 inequalExpr: shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 84
    RIGHT_SHIFT  shift, and go to state 85

    $default  reduce using rule 135 (inequalExpr)

    shiftOp  go to state 86


state 46

  137 shiftExpr: addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 87
    '+'  shift, and go to state 88

    $default  reduce using rule 137 (shiftExpr)

    addOp  go to state 89


state 47

  139 addExpr: prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 139 (addExpr)

    prodOp  go to state 93


state 48

  141 prodExpr: unaryExpr .

    $default  reduce using rule 141 (prodExpr)


state 49

  145 unaryExpr: fixedExpr .

    $default  reduce using rule 145 (unaryExpr)


state 50

  146 fixedExpr: atomExpr . '.' atomExpr
  147          | atomExpr .

    '.'  shift, and go to state 94

    $default  reduce using rule 147 (fixedExpr)


state 51

  154 atomExpr: builtinExpr .

    $default  reduce using rule 154 (atomExpr)


state 52

  142 unaryExpr: unaryOp . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 95
    WIDTHOF  shift, and go to state 28

    call         go to state 34
    lvalue       go to state 35
    fixedExpr    go to state 96
    atomExpr     go to state 50
    builtinExpr  go to state 51


state 53

   19 opSignature: ID_ '(' . ioDecls_opt ')'

    INPUT   shift, and go to state 97
    OUTPUT  shift, and go to state 98
    PARAM   shift, and go to state 99

    $default  reduce using rule 21 (ioDecls_opt)

    ioDecls_opt  go to state 100
    ioDecls      go to state 101
    ioDecl       go to state 102
    ioKind       go to state 103


state 54

    7 operator: type_opt opSignature @1 . operatorBody exception_opt

    '{'  shift, and go to state 104

    operatorBody  go to state 105


state 55

   14 type: sizedType '[' expr . ']'
   18 arraySize: '[' expr . ']'

    ']'  shift, and go to state 106


state 56

   15 type: sizedType arraySize '[' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 107
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 57

  158 builtinExpr: BITSOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 108
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 58

  156 builtinExpr: CAT '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 109
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 59

  101 call: ID_ '(' . args_opt ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    $default  reduce using rule 103 (args_opt)

    call         go to state 34
    args_opt     go to state 111
    args         go to state 112
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 60

  110 lvalue: ID_ '[' . expr ']'
  111       | ID_ '[' . expr ':' expr ']'
  112       | ID_ '[' . expr ']' '[' expr ']'
  113       | ID_ '[' . expr ']' '[' expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 113
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 61

  143 unaryExpr: '(' type . ')' fixedExpr

    ')'  shift, and go to state 114


state 62

   14 type: sizedType . '[' expr ']'
   15     | sizedType . arraySize '[' expr ']'
  144 unaryExpr: '(' sizedType . ')' fixedExpr

    ')'  shift, and go to state 115
    '['  shift, and go to state 19

    arraySize  go to state 20


state 63

  155 atomExpr: '(' expr . ')'

    ')'  shift, and go to state 116


state 64

  157 builtinExpr: WIDTHOF '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 117
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 65

  115 expr: '{' condExprs_opt . '}'

    '}'  shift, and go to state 118


state 66

  116 condExprs_opt: condExprs .
  118 condExprs: condExprs . ',' condExpr

    ','  shift, and go to state 119

    $default  reduce using rule 116 (condExprs_opt)


state 67

  119 condExprs: condExpr .

    $default  reduce using rule 119 (condExprs)


state 68

  149 atomExpr: lvalue '@' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 95
    WIDTHOF  shift, and go to state 28

    call         go to state 34
    lvalue       go to state 35
    atomExpr     go to state 120
    builtinExpr  go to state 51


state 69

   18 arraySize: '[' expr ']' .

    $default  reduce using rule 18 (arraySize)


state 70

  122 logOrExpr: logOrExpr LOGIC_OR . logAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    logAndExpr   go to state 121
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 71

  120 condExpr: logOrExpr '?' . condExpr ':' condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    condExpr     go to state 122
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 72

  124 logAndExpr: logAndExpr LOGIC_AND . bitOrExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    bitOrExpr    go to state 123
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 73

  126 bitOrExpr: bitOrExpr '|' . bitXorExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    bitXorExpr   go to state 124
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 74

  128 bitXorExpr: bitXorExpr '^' . bitAndExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    bitAndExpr   go to state 125
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 75

  130 bitAndExpr: bitAndExpr '&' . equalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    equalExpr    go to state 126
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 76

  159 equalOp: EQUALS .

    $default  reduce using rule 159 (equalOp)


state 77

  160 equalOp: NOT_EQUALS .

    $default  reduce using rule 160 (equalOp)


state 78

  132 equalExpr: equalExpr equalOp . inequalExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    inequalExpr  go to state 127
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 79

  164 inequalOp: GTE .

    $default  reduce using rule 164 (inequalOp)


state 80

  163 inequalOp: LTE .

    $default  reduce using rule 163 (inequalOp)


state 81

  161 inequalOp: '<' .

    $default  reduce using rule 161 (inequalOp)


state 82

  162 inequalOp: '>' .

    $default  reduce using rule 162 (inequalOp)


state 83

  134 inequalExpr: inequalExpr inequalOp . shiftExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    shiftExpr    go to state 128
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 84

  165 shiftOp: LEFT_SHIFT .

    $default  reduce using rule 165 (shiftOp)


state 85

  166 shiftOp: RIGHT_SHIFT .

    $default  reduce using rule 166 (shiftOp)


state 86

  136 shiftExpr: shiftExpr shiftOp . addExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    addExpr      go to state 129
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 87

  168 addOp: '-' .

    $default  reduce using rule 168 (addOp)


state 88

  167 addOp: '+' .

    $default  reduce using rule 167 (addOp)


state 89

  138 addExpr: addExpr addOp . prodExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    prodExpr     go to state 130
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 90

  171 prodOp: '%' .

    $default  reduce using rule 171 (prodOp)


state 91

  169 prodOp: '*' .

    $default  reduce using rule 169 (prodOp)


state 92

  170 prodOp: '/' .

    $default  reduce using rule 170 (prodOp)


state 93

  140 prodExpr: prodExpr prodOp . unaryExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    unaryExpr    go to state 131
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 94

  146 fixedExpr: atomExpr '.' . atomExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 95
    WIDTHOF  shift, and go to state 28

    call         go to state 34
    lvalue       go to state 35
    atomExpr     go to state 132
    builtinExpr  go to state 51


state 95

  155 atomExpr: '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 63
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 96

  142 unaryExpr: unaryOp fixedExpr .

    $default  reduce using rule 142 (unaryExpr)


state 97

   25 ioKind: INPUT .

    $default  reduce using rule 25 (ioKind)


state 98

   26 ioKind: OUTPUT .

    $default  reduce using rule 26 (ioKind)


state 99

   27 ioKind: PARAM .

    $default  reduce using rule 27 (ioKind)


state 100

   19 opSignature: ID_ '(' ioDecls_opt . ')'

    ')'  shift, and go to state 133


state 101

   20 ioDecls_opt: ioDecls .
   22 ioDecls: ioDecls . ',' ioDecl

    ','  shift, and go to state 134

    $default  reduce using rule 20 (ioDecls_opt)


state 102

   23 ioDecls: ioDecl .

    $default  reduce using rule 23 (ioDecls)


state 103

   24 ioDecl: ioKind . type ID_

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5

    type       go to state 135
    sizedType  go to state 12


state 104

   32 operatorBody: '{' . typeDecls_opt @2 states '}'
   34             | '{' . typeDecls_opt @3 callsOrAssigns '}'
   35             | '{' . typeDecls_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 136
    typeDecls      go to state 137
    @4             go to state 138


state 105

    7 operator: type_opt opSignature @1 operatorBody . exception_opt

    PASS_THROUGH_EXCEPTION  shift, and go to state 139

    $default  reduce using rule 29 (exception_opt)

    exception_opt  go to state 140
    exception      go to state 141


state 106

   14 type: sizedType '[' expr ']' .
   18 arraySize: '[' expr ']' .

    '['       reduce using rule 18 (arraySize)
    $default  reduce using rule 14 (type)


state 107

   15 type: sizedType arraySize '[' expr . ']'

    ']'  shift, and go to state 142


state 108

  158 builtinExpr: BITSOF '(' expr . ')'

    ')'  shift, and go to state 143


state 109

  106 args: args . ',' expr
  156 builtinExpr: CAT '(' args . ')'

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


state 110

  107 args: expr .

    $default  reduce using rule 107 (args)


state 111

  101 call: ID_ '(' args_opt . ')'

    ')'  shift, and go to state 146


state 112

  102 args_opt: args .
  106 args: args . ',' expr

    ','  shift, and go to state 145

    $default  reduce using rule 102 (args_opt)


state 113

  110 lvalue: ID_ '[' expr . ']'
  111       | ID_ '[' expr . ':' expr ']'
  112       | ID_ '[' expr . ']' '[' expr ']'
  113       | ID_ '[' expr . ']' '[' expr ':' expr ']'

    ']'  shift, and go to state 147
    ':'  shift, and go to state 148


state 114

  143 unaryExpr: '(' type ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 95
    WIDTHOF  shift, and go to state 28

    call         go to state 34
    lvalue       go to state 35
    fixedExpr    go to state 149
    atomExpr     go to state 50
    builtinExpr  go to state 51


state 115

  144 unaryExpr: '(' sizedType ')' . fixedExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 95
    WIDTHOF  shift, and go to state 28

    call         go to state 34
    lvalue       go to state 35
    fixedExpr    go to state 150
    atomExpr     go to state 50
    builtinExpr  go to state 51


state 116

  155 atomExpr: '(' expr ')' .

    $default  reduce using rule 155 (atomExpr)


state 117

  157 builtinExpr: WIDTHOF '(' expr . ')'

    ')'  shift, and go to state 151


state 118

  115 expr: '{' condExprs_opt '}' .

    $default  reduce using rule 115 (expr)


state 119

  118 condExprs: condExprs ',' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    condExpr     go to state 152
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 120

  149 atomExpr: lvalue '@' atomExpr .

    $default  reduce using rule 149 (atomExpr)


state 121

  122 logOrExpr: logOrExpr LOGIC_OR logAndExpr .
  124 logAndExpr: logAndExpr . LOGIC_AND bitOrExpr

    LOGIC_AND  shift, and go to state 72

    $default  reduce using rule 122 (logOrExpr)


state 122

  120 condExpr: logOrExpr '?' condExpr . ':' condExpr

    ':'  shift, and go to state 153


state 123

  124 logAndExpr: logAndExpr LOGIC_AND bitOrExpr .
  126 bitOrExpr: bitOrExpr . '|' bitXorExpr

    '|'  shift, and go to state 73

    $default  reduce using rule 124 (logAndExpr)


state 124

  126 bitOrExpr: bitOrExpr '|' bitXorExpr .
  128 bitXorExpr: bitXorExpr . '^' bitAndExpr

    '^'  shift, and go to state 74

    $default  reduce using rule 126 (bitOrExpr)


state 125

  128 bitXorExpr: bitXorExpr '^' bitAndExpr .
  130 bitAndExpr: bitAndExpr . '&' equalExpr

    '&'  shift, and go to state 75

    $default  reduce using rule 128 (bitXorExpr)


state 126

  130 bitAndExpr: bitAndExpr '&' equalExpr .
  132 equalExpr: equalExpr . equalOp inequalExpr

    EQUALS      shift, and go to state 76
    NOT_EQUALS  shift, and go to state 77

    $default  reduce using rule 130 (bitAndExpr)

    equalOp  go to state 78


state 127

  132 equalExpr: equalExpr equalOp inequalExpr .
  134 inequalExpr: inequalExpr . inequalOp shiftExpr

    GTE  shift, and go to state 79
    LTE  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82

    $default  reduce using rule 132 (equalExpr)

    inequalOp  go to state 83


state 128

  134 inequalExpr: inequalExpr inequalOp shiftExpr .
  136 shiftExpr: shiftExpr . shiftOp addExpr

    LEFT_SHIFT   shift, and go to state 84
    RIGHT_SHIFT  shift, and go to state 85

    $default  reduce using rule 134 (inequalExpr)

    shiftOp  go to state 86


state 129

  136 shiftExpr: shiftExpr shiftOp addExpr .
  138 addExpr: addExpr . addOp prodExpr

    '-'  shift, and go to state 87
    '+'  shift, and go to state 88

    $default  reduce using rule 136 (shiftExpr)

    addOp  go to state 89


state 130

  138 addExpr: addExpr addOp prodExpr .
  140 prodExpr: prodExpr . prodOp unaryExpr

    '%'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 138 (addExpr)

    prodOp  go to state 93


state 131

  140 prodExpr: prodExpr prodOp unaryExpr .

    $default  reduce using rule 140 (prodExpr)


state 132

  146 fixedExpr: atomExpr '.' atomExpr .

    $default  reduce using rule 146 (fixedExpr)


state 133

   19 opSignature: ID_ '(' ioDecls_opt ')' .

    $default  reduce using rule 19 (opSignature)


state 134

   22 ioDecls: ioDecls ',' . ioDecl

    INPUT   shift, and go to state 97
    OUTPUT  shift, and go to state 98
    PARAM   shift, and go to state 99

    ioDecl  go to state 154
    ioKind  go to state 103


state 135

   24 ioDecl: ioKind type . ID_

    ID_  shift, and go to state 155


state 136

   32 operatorBody: '{' typeDecls_opt . @2 states '}'
   34             | '{' typeDecls_opt . @3 callsOrAssigns '}'
   35             | '{' typeDecls_opt . '}'

    '}'  shift, and go to state 156

    STATE     reduce using rule 31 (@2)
    $default  reduce using rule 33 (@3)

    @2  go to state 157
    @3  go to state 158


state 137

   36 typeDecls_opt: typeDecls .
   38 typeDecls: typeDecls . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 159

    $default  reduce using rule 36 (typeDecls_opt)

    type       go to state 160
    sizedType  go to state 12
    typeDecl   go to state 161


state 138

   40 typeDecls: @4 . typeDecl

    BOOLEAN   shift, and go to state 1
    FLOAT     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    SIGNED    shift, and go to state 4
    UNSIGNED  shift, and go to state 5
    ';'       shift, and go to state 159

    type       go to state 160
    sizedType  go to state 12
    typeDecl   go to state 162


state 139

   30 exception: PASS_THROUGH_EXCEPTION .

    $default  reduce using rule 30 (exception)


state 140

    7 operator: type_opt opSignature @1 operatorBody exception_opt .

    $default  reduce using rule 7 (operator)


state 141

   28 exception_opt: exception .

    $default  reduce using rule 28 (exception_opt)


state 142

   15 type: sizedType arraySize '[' expr ']' .

    $default  reduce using rule 15 (type)


state 143

  158 builtinExpr: BITSOF '(' expr ')' .

    $default  reduce using rule 158 (builtinExpr)


state 144

  156 builtinExpr: CAT '(' args ')' .

    $default  reduce using rule 156 (builtinExpr)


state 145

  106 args: args ',' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 163
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 146

  101 call: ID_ '(' args_opt ')' .

    $default  reduce using rule 101 (call)


state 147

  110 lvalue: ID_ '[' expr ']' .
  112       | ID_ '[' expr ']' . '[' expr ']'
  113       | ID_ '[' expr ']' . '[' expr ':' expr ']'

    '['  shift, and go to state 164

    $default  reduce using rule 110 (lvalue)


state 148

  111 lvalue: ID_ '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 165
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 149

  143 unaryExpr: '(' type ')' fixedExpr .

    $default  reduce using rule 143 (unaryExpr)


state 150

  144 unaryExpr: '(' sizedType ')' fixedExpr .

    $default  reduce using rule 144 (unaryExpr)


state 151

  157 builtinExpr: WIDTHOF '(' expr ')' .

    $default  reduce using rule 157 (builtinExpr)


state 152

  118 condExprs: condExprs ',' condExpr .

    $default  reduce using rule 118 (condExprs)


state 153

  120 condExpr: logOrExpr '?' condExpr ':' . condExpr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    condExpr     go to state 166
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 154

   22 ioDecls: ioDecls ',' ioDecl .

    $default  reduce using rule 22 (ioDecls)


state 155

   24 ioDecl: ioKind type ID_ .

    $default  reduce using rule 24 (ioDecl)


state 156

   35 operatorBody: '{' typeDecls_opt '}' .

    $default  reduce using rule 35 (operatorBody)


state 157

   32 operatorBody: '{' typeDecls_opt @2 . states '}'

    STATE  shift, and go to state 167

    states     go to state 168
    stateCase  go to state 169


state 158

   34 operatorBody: '{' typeDecls_opt @3 . callsOrAssigns '}'

    COPY             shift, and go to state 170
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176

    callsOrAssigns         go to state 177
    callOrAssign_nonEmpty  go to state 178
    builtinStmtCompose     go to state 179
    copyStmt               go to state 180
    segmentStmt            go to state 181
    call                   go to state 182
    lvalue                 go to state 183


state 159

   42 typeDecl: ';' .

    $default  reduce using rule 42 (typeDecl)


state 160

   41 typeDecl: type . typeDeclElems ';'

    ID_  shift, and go to state 184

    typeDeclElems  go to state 185
    typeDeclElem   go to state 186


state 161

   38 typeDecls: typeDecls typeDecl .

    $default  reduce using rule 38 (typeDecls)


state 162

   40 typeDecls: @4 typeDecl .

    $default  reduce using rule 40 (typeDecls)


state 163

  106 args: args ',' expr .

    $default  reduce using rule 106 (args)


state 164

  112 lvalue: ID_ '[' expr ']' '[' . expr ']'
  113       | ID_ '[' expr ']' '[' . expr ':' expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 187
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 165

  111 lvalue: ID_ '[' expr ':' expr . ']'

    ']'  shift, and go to state 188


state 166

  120 condExpr: logOrExpr '?' condExpr ':' condExpr .

    $default  reduce using rule 120 (condExpr)


state 167

   60 stateCase: STATE . ID_ '(' stateVars_opt ')' ':' stmts_opt

    ID_  shift, and go to state 189


state 168

   32 operatorBody: '{' typeDecls_opt @2 states . '}'
   58 states: states . stateCase

    STATE  shift, and go to state 167
    '}'    shift, and go to state 190

    stateCase  go to state 191


state 169

   59 states: stateCase .

    $default  reduce using rule 59 (states)


state 170

   94 copyStmt: COPY . '(' args ')'

    '('  shift, and go to state 192


state 171

   95 segmentStmt: SEGMENT_R_ . '(' args ')'

    '('  shift, and go to state 193


state 172

   97 segmentStmt: SEGMENT_RW_ . '(' args ')'

    '('  shift, and go to state 194


state 173

   98 segmentStmt: SEGMENT_SEQ_R_ . '(' args ')'

    '('  shift, and go to state 195


state 174

  100 segmentStmt: SEGMENT_SEQ_RW_ . '(' args ')'

    '('  shift, and go to state 196


state 175

   99 segmentStmt: SEGMENT_SEQ_W_ . '(' args ')'

    '('  shift, and go to state 197


state 176

   96 segmentStmt: SEGMENT_W_ . '(' args ')'

    '('  shift, and go to state 198


state 177

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns . '}'
   50 callsOrAssigns: callsOrAssigns . callOrAssign

    COPY             shift, and go to state 170
    ID_              shift, and go to state 24
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    '}'              shift, and go to state 199
    ';'              shift, and go to state 200

    callOrAssign           go to state 201
    callOrAssign_nonEmpty  go to state 202
    builtinStmtCompose     go to state 179
    copyStmt               go to state 180
    segmentStmt            go to state 181
    call                   go to state 182
    lvalue                 go to state 183


state 178

   51 callsOrAssigns: callOrAssign_nonEmpty .

    $default  reduce using rule 51 (callsOrAssigns)


state 179

   57 callOrAssign_nonEmpty: builtinStmtCompose . ';'

    ';'  shift, and go to state 203


state 180

   92 builtinStmtCompose: copyStmt .

    $default  reduce using rule 92 (builtinStmtCompose)


state 181

   93 builtinStmtCompose: segmentStmt .

    $default  reduce using rule 93 (builtinStmtCompose)


state 182

   54 callOrAssign_nonEmpty: call . ';'

    ';'  shift, and go to state 204


state 183

   55 callOrAssign_nonEmpty: lvalue . '=' call ';'
   56                      | lvalue . '=' lvalue ';'

    '='  shift, and go to state 205


state 184

   45 typeDeclElem: ID_ .
   47             | ID_ . @5 '=' expr
   49             | ID_ . @6 '(' expr ')'

    '('       reduce using rule 48 (@6)
    '='       reduce using rule 46 (@5)
    $default  reduce using rule 45 (typeDeclElem)

    @5  go to state 206
    @6  go to state 207


state 185

   41 typeDecl: type typeDeclElems . ';'
   44 typeDeclElems: typeDeclElems . ',' typeDeclElem

    ';'  shift, and go to state 208
    ','  shift, and go to state 209


state 186

   43 typeDeclElems: typeDeclElem .

    $default  reduce using rule 43 (typeDeclElems)


state 187

  112 lvalue: ID_ '[' expr ']' '[' expr . ']'
  113       | ID_ '[' expr ']' '[' expr . ':' expr ']'

    ']'  shift, and go to state 210
    ':'  shift, and go to state 211


state 188

  111 lvalue: ID_ '[' expr ':' expr ']' .

    $default  reduce using rule 111 (lvalue)


state 189

   60 stateCase: STATE ID_ . '(' stateVars_opt ')' ':' stmts_opt

    '('  shift, and go to state 212


state 190

   32 operatorBody: '{' typeDecls_opt @2 states '}' .

    $default  reduce using rule 32 (operatorBody)


state 191

   58 states: states stateCase .

    $default  reduce using rule 58 (states)


state 192

   94 copyStmt: COPY '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 213
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 193

   95 segmentStmt: SEGMENT_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 214
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 194

   97 segmentStmt: SEGMENT_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 215
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 195

   98 segmentStmt: SEGMENT_SEQ_R_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 216
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 196

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 217
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 197

   99 segmentStmt: SEGMENT_SEQ_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 218
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 198

   96 segmentStmt: SEGMENT_W_ '(' . args ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 219
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 199

   34 operatorBody: '{' typeDecls_opt @3 callsOrAssigns '}' .

    $default  reduce using rule 34 (operatorBody)


state 200

   53 callOrAssign: ';' .

    $default  reduce using rule 53 (callOrAssign)


state 201

   50 callsOrAssigns: callsOrAssigns callOrAssign .

    $default  reduce using rule 50 (callsOrAssigns)


state 202

   52 callOrAssign: callOrAssign_nonEmpty .

    $default  reduce using rule 52 (callOrAssign)


state 203

   57 callOrAssign_nonEmpty: builtinStmtCompose ';' .

    $default  reduce using rule 57 (callOrAssign_nonEmpty)


state 204

   54 callOrAssign_nonEmpty: call ';' .

    $default  reduce using rule 54 (callOrAssign_nonEmpty)


state 205

   55 callOrAssign_nonEmpty: lvalue '=' . call ';'
   56                      | lvalue '=' . lvalue ';'

    ID_  shift, and go to state 24

    call    go to state 220
    lvalue  go to state 221


state 206

   47 typeDeclElem: ID_ @5 . '=' expr

    '='  shift, and go to state 222


state 207

   49 typeDeclElem: ID_ @6 . '(' expr ')'

    '('  shift, and go to state 223


state 208

   41 typeDecl: type typeDeclElems ';' .

    $default  reduce using rule 41 (typeDecl)


state 209

   44 typeDeclElems: typeDeclElems ',' . typeDeclElem

    ID_  shift, and go to state 184

    typeDeclElem  go to state 224


state 210

  112 lvalue: ID_ '[' expr ']' '[' expr ']' .

    $default  reduce using rule 112 (lvalue)


state 211

  113 lvalue: ID_ '[' expr ']' '[' expr ':' . expr ']'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 225
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 212

   60 stateCase: STATE ID_ '(' . stateVars_opt ')' ':' stmts_opt

    EOS  shift, and go to state 226
    ID_  shift, and go to state 227

    $default  reduce using rule 62 (stateVars_opt)

    stateVars_opt  go to state 228
    stateVars      go to state 229
    stateVar       go to state 230


state 213

   94 copyStmt: COPY '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 231
    ','  shift, and go to state 145


state 214

   95 segmentStmt: SEGMENT_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 232
    ','  shift, and go to state 145


state 215

   97 segmentStmt: SEGMENT_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 233
    ','  shift, and go to state 145


state 216

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 234
    ','  shift, and go to state 145


state 217

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 235
    ','  shift, and go to state 145


state 218

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 236
    ','  shift, and go to state 145


state 219

   96 segmentStmt: SEGMENT_W_ '(' args . ')'
  106 args: args . ',' expr

    ')'  shift, and go to state 237
    ','  shift, and go to state 145


state 220

   55 callOrAssign_nonEmpty: lvalue '=' call . ';'

    ';'  shift, and go to state 238


state 221

   56 callOrAssign_nonEmpty: lvalue '=' lvalue . ';'

    ';'  shift, and go to state 239


state 222

   47 typeDeclElem: ID_ @5 '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 240
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 223

   49 typeDeclElem: ID_ @6 '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 241
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 224

   44 typeDeclElems: typeDeclElems ',' typeDeclElem .

    $default  reduce using rule 44 (typeDeclElems)


state 225

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr . ']'

    ']'  shift, and go to state 242


state 226

   67 stateVar: EOS . '(' ID_ ')'

    '('  shift, and go to state 243


state 227

   65 stateVar: ID_ .
   66         | ID_ . '#' expr

    '#'  shift, and go to state 244

    $default  reduce using rule 65 (stateVar)


state 228

   60 stateCase: STATE ID_ '(' stateVars_opt . ')' ':' stmts_opt

    ')'  shift, and go to state 245


state 229

   61 stateVars_opt: stateVars .
   63 stateVars: stateVars . ',' stateVar

    ','  shift, and go to state 246

    $default  reduce using rule 61 (stateVars_opt)


state 230

   64 stateVars: stateVar .

    $default  reduce using rule 64 (stateVars)


state 231

   94 copyStmt: COPY '(' args ')' .

    $default  reduce using rule 94 (copyStmt)


state 232

   95 segmentStmt: SEGMENT_R_ '(' args ')' .

    $default  reduce using rule 95 (segmentStmt)


state 233

   97 segmentStmt: SEGMENT_RW_ '(' args ')' .

    $default  reduce using rule 97 (segmentStmt)


state 234

   98 segmentStmt: SEGMENT_SEQ_R_ '(' args ')' .

    $default  reduce using rule 98 (segmentStmt)


state 235

  100 segmentStmt: SEGMENT_SEQ_RW_ '(' args ')' .

    $default  reduce using rule 100 (segmentStmt)


state 236

   99 segmentStmt: SEGMENT_SEQ_W_ '(' args ')' .

    $default  reduce using rule 99 (segmentStmt)


state 237

   96 segmentStmt: SEGMENT_W_ '(' args ')' .

    $default  reduce using rule 96 (segmentStmt)


state 238

   55 callOrAssign_nonEmpty: lvalue '=' call ';' .

    $default  reduce using rule 55 (callOrAssign_nonEmpty)


state 239

   56 callOrAssign_nonEmpty: lvalue '=' lvalue ';' .

    $default  reduce using rule 56 (callOrAssign_nonEmpty)


state 240

   47 typeDeclElem: ID_ @5 '=' expr .

    $default  reduce using rule 47 (typeDeclElem)


state 241

   49 typeDeclElem: ID_ @6 '(' expr . ')'

    ')'  shift, and go to state 247


state 242

  113 lvalue: ID_ '[' expr ']' '[' expr ':' expr ']' .

    $default  reduce using rule 113 (lvalue)


state 243

   67 stateVar: EOS '(' . ID_ ')'

    ID_  shift, and go to state 248


state 244

   66 stateVar: ID_ '#' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 249
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 245

   60 stateCase: STATE ID_ '(' stateVars_opt ')' . ':' stmts_opt

    ':'  shift, and go to state 250


state 246

   63 stateVars: stateVars ',' . stateVar

    EOS  shift, and go to state 226
    ID_  shift, and go to state 227

    stateVar  go to state 251


state 247

   49 typeDeclElem: ID_ @6 '(' expr ')' .

    $default  reduce using rule 49 (typeDeclElem)


state 248

   67 stateVar: EOS '(' ID_ . ')'

    ')'  shift, and go to state 252


state 249

   66 stateVar: ID_ '#' expr .

    $default  reduce using rule 66 (stateVar)


state 250

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' . stmts_opt

    ATTENTION        shift, and go to state 253
    CLOSE            shift, and go to state 254
    COPY             shift, and go to state 170
    DONE             shift, and go to state 255
    GOTO             shift, and go to state 256
    ID_              shift, and go to state 24
    IF               shift, and go to state 257
    PRINTF           shift, and go to state 258
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    STAY             shift, and go to state 259
    '{'              shift, and go to state 260

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 261
    stmts             go to state 262
    stmt_nonEmpty     go to state 263
    matchedStmt       go to state 264
    unmatchedStmt     go to state 265
    stmtBlock         go to state 266
    builtinStmtBehav  go to state 267
    copyStmt          go to state 268
    segmentStmt       go to state 269
    call              go to state 270
    assign            go to state 271
    lvalue            go to state 272


state 251

   63 stateVars: stateVars ',' stateVar .

    $default  reduce using rule 63 (stateVars)


state 252

   67 stateVar: EOS '(' ID_ ')' .

    $default  reduce using rule 67 (stateVar)


state 253

   86 builtinStmtBehav: ATTENTION . '(' expr ')'

    '('  shift, and go to state 273


state 254

   87 builtinStmtBehav: CLOSE . '(' ID_ ')'

    '('  shift, and go to state 274


state 255

   88 builtinStmtBehav: DONE . '(' ')'

    '('  shift, and go to state 275


state 256

   77 matchedStmt: GOTO . ID_ ';'

    ID_  shift, and go to state 276


state 257

   76 matchedStmt: IF . '(' expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF . '(' expr ')' stmt
   84              | IF . '(' expr ')' matchedStmt ELSE unmatchedStmt

    '('  shift, and go to state 277


state 258

   89 builtinStmtBehav: PRINTF . '(' STRING more_args_opt ')'

    '('  shift, and go to state 278


state 259

   78 matchedStmt: STAY . ';'

    ';'  shift, and go to state 279


state 260

   85 stmtBlock: '{' . typeDecls_opt stmts_opt '}'

    BOOLEAN   reduce using rule 39 (@4)
    FLOAT     reduce using rule 39 (@4)
    DOUBLE    reduce using rule 39 (@4)
    SIGNED    reduce using rule 39 (@4)
    UNSIGNED  reduce using rule 39 (@4)
    ';'       reduce using rule 39 (@4)
    $default  reduce using rule 37 (typeDecls_opt)

    typeDecls_opt  go to state 280
    typeDecls      go to state 137
    @4             go to state 138


state 261

   60 stateCase: STATE ID_ '(' stateVars_opt ')' ':' stmts_opt .

    $default  reduce using rule 60 (stateCase)


state 262

   68 stmts_opt: stmts .
   70 stmts: stmts . stmt

    ATTENTION        shift, and go to state 253
    CLOSE            shift, and go to state 254
    COPY             shift, and go to state 170
    DONE             shift, and go to state 255
    GOTO             shift, and go to state 256
    ID_              shift, and go to state 24
    IF               shift, and go to state 257
    PRINTF           shift, and go to state 258
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    STAY             shift, and go to state 259
    '{'              shift, and go to state 260
    ';'              shift, and go to state 281

    $default  reduce using rule 68 (stmts_opt)

    stmt              go to state 282
    stmt_nonEmpty     go to state 283
    matchedStmt       go to state 264
    unmatchedStmt     go to state 265
    stmtBlock         go to state 266
    builtinStmtBehav  go to state 267
    copyStmt          go to state 268
    segmentStmt       go to state 269
    call              go to state 270
    assign            go to state 271
    lvalue            go to state 272


state 263

   71 stmts: stmt_nonEmpty .

    $default  reduce using rule 71 (stmts)


state 264

   74 stmt_nonEmpty: matchedStmt .

    $default  reduce using rule 74 (stmt_nonEmpty)


state 265

   75 stmt_nonEmpty: unmatchedStmt .

    $default  reduce using rule 75 (stmt_nonEmpty)


state 266

   82 matchedStmt: stmtBlock .

    $default  reduce using rule 82 (matchedStmt)


state 267

   80 matchedStmt: builtinStmtBehav . ';'

    ';'  shift, and go to state 284


state 268

   90 builtinStmtBehav: copyStmt .

    $default  reduce using rule 90 (builtinStmtBehav)


state 269

   91 builtinStmtBehav: segmentStmt .

    $default  reduce using rule 91 (builtinStmtBehav)


state 270

   81 matchedStmt: call . ';'

    ';'  shift, and go to state 285


state 271

   79 matchedStmt: assign . ';'

    ';'  shift, and go to state 286


state 272

  108 assign: lvalue . '=' expr

    '='  shift, and go to state 287


state 273

   86 builtinStmtBehav: ATTENTION '(' . expr ')'

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 288
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 274

   87 builtinStmtBehav: CLOSE '(' . ID_ ')'

    ID_  shift, and go to state 289


state 275

   88 builtinStmtBehav: DONE '(' . ')'

    ')'  shift, and go to state 290


state 276

   77 matchedStmt: GOTO ID_ . ';'

    ';'  shift, and go to state 291


state 277

   76 matchedStmt: IF '(' . expr ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' . expr ')' stmt
   84              | IF '(' . expr ')' matchedStmt ELSE unmatchedStmt

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 292
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 278

   89 builtinStmtBehav: PRINTF '(' . STRING more_args_opt ')'

    STRING  shift, and go to state 293


state 279

   78 matchedStmt: STAY ';' .

    $default  reduce using rule 78 (matchedStmt)


state 280

   85 stmtBlock: '{' typeDecls_opt . stmts_opt '}'

    ATTENTION        shift, and go to state 253
    CLOSE            shift, and go to state 254
    COPY             shift, and go to state 170
    DONE             shift, and go to state 255
    GOTO             shift, and go to state 256
    ID_              shift, and go to state 24
    IF               shift, and go to state 257
    PRINTF           shift, and go to state 258
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    STAY             shift, and go to state 259
    '{'              shift, and go to state 260

    $default  reduce using rule 69 (stmts_opt)

    stmts_opt         go to state 294
    stmts             go to state 262
    stmt_nonEmpty     go to state 263
    matchedStmt       go to state 264
    unmatchedStmt     go to state 265
    stmtBlock         go to state 266
    builtinStmtBehav  go to state 267
    copyStmt          go to state 268
    segmentStmt       go to state 269
    call              go to state 270
    assign            go to state 271
    lvalue            go to state 272


state 281

   73 stmt: ';' .

    $default  reduce using rule 73 (stmt)


state 282

   70 stmts: stmts stmt .

    $default  reduce using rule 70 (stmts)


state 283

   72 stmt: stmt_nonEmpty .

    $default  reduce using rule 72 (stmt)


state 284

   80 matchedStmt: builtinStmtBehav ';' .

    $default  reduce using rule 80 (matchedStmt)


state 285

   81 matchedStmt: call ';' .

    $default  reduce using rule 81 (matchedStmt)


state 286

   79 matchedStmt: assign ';' .

    $default  reduce using rule 79 (matchedStmt)


state 287

  108 assign: lvalue '=' . expr

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    lvalue       go to state 35
    expr         go to state 295
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 288

   86 builtinStmtBehav: ATTENTION '(' expr . ')'

    ')'  shift, and go to state 296


state 289

   87 builtinStmtBehav: CLOSE '(' ID_ . ')'

    ')'  shift, and go to state 297


state 290

   88 builtinStmtBehav: DONE '(' ')' .

    $default  reduce using rule 88 (builtinStmtBehav)


state 291

   77 matchedStmt: GOTO ID_ ';' .

    $default  reduce using rule 77 (matchedStmt)


state 292

   76 matchedStmt: IF '(' expr . ')' matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr . ')' stmt
   84              | IF '(' expr . ')' matchedStmt ELSE unmatchedStmt

    ')'  shift, and go to state 298


state 293

   89 builtinStmtBehav: PRINTF '(' STRING . more_args_opt ')'

    ','  shift, and go to state 299

    $default  reduce using rule 105 (more_args_opt)

    more_args_opt  go to state 300


state 294

   85 stmtBlock: '{' typeDecls_opt stmts_opt . '}'

    '}'  shift, and go to state 301


state 295

  108 assign: lvalue '=' expr .

    $default  reduce using rule 108 (assign)


state 296

   86 builtinStmtBehav: ATTENTION '(' expr ')' .

    $default  reduce using rule 86 (builtinStmtBehav)


state 297

   87 builtinStmtBehav: CLOSE '(' ID_ ')' .

    $default  reduce using rule 87 (builtinStmtBehav)


state 298

   76 matchedStmt: IF '(' expr ')' . matchedStmt ELSE matchedStmt
   83 unmatchedStmt: IF '(' expr ')' . stmt
   84              | IF '(' expr ')' . matchedStmt ELSE unmatchedStmt

    ATTENTION        shift, and go to state 253
    CLOSE            shift, and go to state 254
    COPY             shift, and go to state 170
    DONE             shift, and go to state 255
    GOTO             shift, and go to state 256
    ID_              shift, and go to state 24
    IF               shift, and go to state 257
    PRINTF           shift, and go to state 258
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    STAY             shift, and go to state 259
    '{'              shift, and go to state 260
    ';'              shift, and go to state 281

    stmt              go to state 302
    stmt_nonEmpty     go to state 283
    matchedStmt       go to state 303
    unmatchedStmt     go to state 265
    stmtBlock         go to state 266
    builtinStmtBehav  go to state 267
    copyStmt          go to state 268
    segmentStmt       go to state 269
    call              go to state 270
    assign            go to state 271
    lvalue            go to state 272


state 299

  104 more_args_opt: ',' . args

    BITSOF   shift, and go to state 21
    CAT      shift, and go to state 22
    FALSE    shift, and go to state 23
    ID_      shift, and go to state 24
    NUM      shift, and go to state 25
    TRUE     shift, and go to state 26
    '('      shift, and go to state 27
    WIDTHOF  shift, and go to state 28
    '{'      shift, and go to state 29
    '-'      shift, and go to state 30
    '+'      shift, and go to state 31
    '~'      shift, and go to state 32
    '!'      shift, and go to state 33

    call         go to state 34
    args         go to state 304
    lvalue       go to state 35
    expr         go to state 110
    condExpr     go to state 37
    logOrExpr    go to state 38
    logAndExpr   go to state 39
    bitOrExpr    go to state 40
    bitXorExpr   go to state 41
    bitAndExpr   go to state 42
    equalExpr    go to state 43
    inequalExpr  go to state 44
    shiftExpr    go to state 45
    addExpr      go to state 46
    prodExpr     go to state 47
    unaryExpr    go to state 48
    fixedExpr    go to state 49
    atomExpr     go to state 50
    builtinExpr  go to state 51
    unaryOp      go to state 52


state 300

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt . ')'

    ')'  shift, and go to state 305


state 301

   85 stmtBlock: '{' typeDecls_opt stmts_opt '}' .

    $default  reduce using rule 85 (stmtBlock)


state 302

   83 unmatchedStmt: IF '(' expr ')' stmt .

    $default  reduce using rule 83 (unmatchedStmt)


state 303

   74 stmt_nonEmpty: matchedStmt .
   76 matchedStmt: IF '(' expr ')' matchedStmt . ELSE matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt . ELSE unmatchedStmt

    ELSE  shift, and go to state 306

    $default  reduce using rule 74 (stmt_nonEmpty)


state 304

  104 more_args_opt: ',' args .
  106 args: args . ',' expr

    ','  shift, and go to state 145

    $default  reduce using rule 104 (more_args_opt)


state 305

   89 builtinStmtBehav: PRINTF '(' STRING more_args_opt ')' .

    $default  reduce using rule 89 (builtinStmtBehav)


state 306

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE . matchedStmt
   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE . unmatchedStmt

    ATTENTION        shift, and go to state 253
    CLOSE            shift, and go to state 254
    COPY             shift, and go to state 170
    DONE             shift, and go to state 255
    GOTO             shift, and go to state 256
    ID_              shift, and go to state 24
    IF               shift, and go to state 257
    PRINTF           shift, and go to state 258
    SEGMENT_R_       shift, and go to state 171
    SEGMENT_RW_      shift, and go to state 172
    SEGMENT_SEQ_R_   shift, and go to state 173
    SEGMENT_SEQ_RW_  shift, and go to state 174
    SEGMENT_SEQ_W_   shift, and go to state 175
    SEGMENT_W_       shift, and go to state 176
    STAY             shift, and go to state 259
    '{'              shift, and go to state 260

    matchedStmt       go to state 307
    unmatchedStmt     go to state 308
    stmtBlock         go to state 266
    builtinStmtBehav  go to state 267
    copyStmt          go to state 268
    segmentStmt       go to state 269
    call              go to state 270
    assign            go to state 271
    lvalue            go to state 272


state 307

   76 matchedStmt: IF '(' expr ')' matchedStmt ELSE matchedStmt .

    $default  reduce using rule 76 (matchedStmt)


state 308

   84 unmatchedStmt: IF '(' expr ')' matchedStmt ELSE unmatchedStmt .

    $default  reduce using rule 84 (unmatchedStmt)
