#!/bin/tcsh
#
# Generate tab-delimited (Excel compatible) summary report
#   for every compositional project in this directory,
#   every implementation thereof
# Use after synthesis (synplify-pages-all)
# Report format:
#
#                  rev_1__speed            rev_2__area    rev_3__no_optim
#                  speed area regs style   sp ar re st    sp ar re st
# module_noin      .     .    .    .       .  .  .  .     .  .  .  .
# module_q         .     .    .    .       .  .  .  .     .  .  .  .
# module_qin       .     .    .    .       .  .  .  .     .  .  .  .
# module           .     .    .    .       .  .  .  .     .  .  .  .
# ...
#
# Synplify 7.1
# Eylon Caspi, 10/16/03

# set topmodules = `find . -maxdepth 1 -mindepth 1 -type d -name _page_\* -print | perl -npe 's{.*/}{}; s{_qin$}{}; s{_q$}{}; s{_noin$}{}' | sort | uniq`
set topmodules = `find . -maxdepth 1 -mindepth 1 -type d -name \*_noin -print | perl -npe 's{.*/}{}; s{_noin$}{}'`

echo "Synthesis results for:  ${cwd:h}"
echo `date`
echo ""
echo "\trev_1__speed\t\t\t\trev_2__area\t\t\t\trev_3__no_optim\t\t\t\t"
echo -n "\t"
repeat 3 \
  echo -n "Speed\tArea\tRegs\tFSM\t"
echo ""
echo -n "\t"
repeat 3 \
  echo -n "(MHz)\t(LUTs)\t\tStyle\t"
echo ""

foreach topmodule ($topmodules)
  set modules = (${topmodule}_qin ${topmodule}_q ${topmodule}_noin ${topmodule})
  foreach module ($modules)
    echo -n "$module\t"
    if (-d $module) then
      foreach revpath ($module/rev*)
        set rev = ${revpath:t}
        set srrfile = $revpath/${module}.srr
        if (-f $srrfile) then
          perl -e 'foreach (<>) {                                             \
		     if (/^(clock|system) +(\d+(.\d+)) MHz +(\d+(.\d+)) MHz/i)\
		       { if ($speed==0 || $speed>$4) { $speed=$4; } }         \
		     if (/^Adding property syn_encoding, value "([^"]+)"/i)   \
		       { $fsmstyle = $1; }                                    \
		     if (/^Total +LUTs: (\d+)/i)                              \
		       { if ($area==0 || $area<$1) { $area = $1 } }           \
		     if (/^Register bits not including I\/Os: +(\d+)/i)       \
		       { if ($regs==0 || $regs<$1) { $regs = $1 } }           \
                   }                                                          \
	           print "$speed\t$area\t$regs\t$fsmstyle\t"' $srrfile
        else
          perl -e 'print "\t\t\t\t"'
        endif
      end
    endif
    echo ""
  end
end
