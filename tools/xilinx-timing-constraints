#!/usr/bin/perl
#
# xilinx-timing-constraints
#
# Emit Xilinx ".ucf" timing constraint file (to stdout)
# specifying a clock period constraint
#
# Usage:  xilinx-timing-constraints <module>.v [<period>]
#         <module>.v : verilog source, emitted by "tdfc -everilog"
#         <period>   : clock period, in nanoseconds (default 10)
#
# Eylon Caspi, 8/15/03

if (@ARGV<1) {
  print "xilinx-timing-constraints:\n";
  print "        Emit Xilinx .ucf timing constraint file (to stdout)\n";
  print "        specifying a clock period constraint.\n\n";
  print "Usage:  xilinx-timing-constraints <module>.v [<period>]\n";
  print "        <module>.v : verilog source, emitted by 'tdfc -everilog'\n";
  print "        <period>   : clock period, in nanoseconds (default 10)\n";
  exit(1);
}

$modulev = $ARGV[0];
$period  = $ARGV[1];

if (@ARGV<2) {
  $period = 10;
}
else {
  pop(@ARGV);	# get rid of 2nd arg; we input <> from the 1st arg
}

print "# Clock period constraint.\n";
print "# Generated by xilinx-timing-constraints, " . `date` . "\n";

print "NET \"clock\" TNM = \"clock\" ;\n";
print "TIMESPEC \"TS_clock\" = PERIOD \"clock\" $period ns ;\n\n";
