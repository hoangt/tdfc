// schedc 1.3, Jul 30 2001 22:53:01
// filename = wavelet/new_sched/wavelet_24.template
//
// ---- SCHEDULE HEADER BEGIN ----
// Schedule generation options:
//    minIO clustering: false
//    ratefile name: wavelet/wavelet.ratefile
//    traversal type: exh
// 
//  0| 0, 1, 2, 3, 4, 7, 6, 5, 9, 8, 22, 10, 23, 21, 34, 11, 14, 35, 33, 28, 13, 12, 16, 15, 29, 27, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, |use cp=1.00, cmb=0.67|utl cp=0.12|ave cp=0.12|drain=1.00
//  1| 19, 17, 20, 24, 31, 32, 25, 26, 36, 37, 38, 39, 48, 49, 50, 51, |use cp=0.25, cmb=0.42|utl cp=0.20|ave cp=0.79|drain=0.02
// 
// ave|use cp=0.62, cmb=0.54|utl cp=0.16|ave cp=0.25
// 
// w_ave|utl cp=0.12
// ---- SCHEDULE HEADER END ----

array {
   CPs: 24;
   CMBs: 24;
   CMB Partitions:
    B0 (B0, B1, B2, B3, B4, B5, B6) :
    null (B7, B8, B9, B10, B11);
}
design {
    visual: "something";
    0: page (1, 1) "LiftWaveHD in LiftWaveHD.tdf" : 0.output0 => 1.input0, cpu.output0 => 0.input0 ;
    1: page (1, 3) "InWave in InWave.tdf" : 1.output0 =1000=> 2.input0, 1.output1 =1000=> 2.input1, 1.output2 =1000=> 2.input2 ;
    2: page (4, 2) "VWave in VWave.tdf" : 2.output0 => 3.input0, 2.output1 =1000=> 2.input3 ;
    3: page (1, 2) "LiftWaveH in LiftWaveH.tdf" : 3.output0 => 4.input0, 3.output1 => 7.input0 ;
    4: page (1, 3) "InWave in InWave.tdf" : 4.output0 => 5.input0, 4.output1 => 5.input1, 4.output2 => 5.input2 ;
    5: page (4, 2) "VWave in VWave.tdf" : 5.output0 => 10.input0, 5.output1 => 6.input0 ;
    6: page (1, 2) "repWave in repWave.tdf" : 6.output0 => 22.input0, 6.output1 => 5.input3 ;
    7: page (1, 3) "InWave in InWave.tdf" : 7.output0 => 8.input0, 7.output1 => 8.input1, 7.output2 => 8.input2 ;
    8: page (4, 2) "VWave in VWave.tdf" : 8.output0 => 21.input0, 8.output1 => 9.input0 ;
    9: page (1, 2) "repWave in repWave.tdf" : 9.output0 => 23.input0, 9.output1 => 8.input3 ;
    10: page (1, 2) "LiftWaveH in LiftWaveH.tdf" : 10.output0 => 11.input0, 10.output1 => 14.input0 ;
    11: page (1, 3) "InWave in InWave.tdf" : 11.output0 => 12.input0, 11.output1 => 12.input1, 11.output2 => 12.input2 ;
    12: page (4, 2) "VWave in VWave.tdf" : 12.output0 => 17.input0, 12.output1 => 13.input0 ;
    13: page (1, 2) "repWave in repWave.tdf" : 13.output0 => 19.input0, 13.output1 => 12.input3 ;
    14: page (1, 3) "InWave in InWave.tdf" : 14.output0 => 15.input0, 14.output1 => 15.input1, 14.output2 => 15.input2 ;
    15: page (4, 2) "VWave in VWave.tdf" : 15.output0 => 18.input0, 15.output1 => 16.input0 ;
    16: page (1, 2) "repWave in repWave.tdf" : 16.output0 => 20.input0, 16.output1 => 15.input3 ;
    17: page (1, 1) "Quant_DC in Quant_DC.tdf" : 17.output0 => cpu.input0 ;
    18: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 18.output0 => 30.input0 ;
    19: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 19.output0 => 31.input0 ;
    20: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 20.output0 => 32.input0 ;
    21: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 21.output0 => 33.input0 ;
    22: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 22.output0 => 34.input0 ;
    23: page (1, 1) "__Quant_ZLE in __Quant_ZLE.tdf" : 23.output0 => 35.input0 ;
    24: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 24.output0 => cpu.input1 ;
    25: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 25.output0 => cpu.input2 ;
    26: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 26.output0 => cpu.input3 ;
    27: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 27.output0 => cpu.input4 ;
    28: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 28.output0 => cpu.input5 ;
    29: page (1, 1) "__HuffMachine in __HuffMachine.tdf" : 29.output0 => cpu.input6 ;
    30: segment (1, 1) "Segment" : 30.output0 => 24.input0 ;
    31: segment (1, 1) "Segment" : 31.output0 => 25.input0 ;
    32: segment (1, 1) "Segment" : 32.output0 => 26.input0 ;
    33: segment (1, 1) "Segment" : 33.output0 => 27.input0 ;
    34: segment (1, 1) "Segment" : 34.output0 => 28.input0 ;
    35: segment (1, 1) "Segment" : 35.output0 => 29.input0 ;
    insert stitch segment 36 between 17.output0 and cpu;
    insert stitch segment 37 between 24.output0 and cpu;
    insert stitch segment 38 between 25.output0 and cpu;
    insert stitch segment 39 between 26.output0 and cpu;
    insert stitch segment 40 between 27.output0 and cpu;
    insert stitch segment 41 between 28.output0 and cpu;
    insert stitch segment 42 between 29.output0 and cpu;
    insert stitch segment 43 between cpu.output0 and 0;
    insert stitch segment 44 between 1.output0 and 2;
    insert stitch segment 45 between 1.output1 and 2;
    insert stitch segment 46 between 1.output2 and 2;
    insert stitch segment 47 between 2.output1 and 2;
    insert stitch segment 48 between 13.output0 and 19;
    insert stitch segment 49 between 12.output0 and 17;
    insert stitch segment 50 between 16.output0 and 20;
    insert stitch segment 51 between 30.output0 and 24;
}
schedule {
    pre {
        CP0( ; 0.config -> CMB16[1][11], 0.state -> CMB16[1][11], 0.fifos -> CMB16[1][11], 19.config -> CMB22[1][10], 19.state -> CMB22[1][10], 19.fifos -> CMB22[1][10]; nop);
        CP1( ; 1.config -> CMB17[1][11], 1.state -> CMB17[1][11], 1.fifos -> CMB17[1][11], 17.config -> CMB23[1][10], 17.state -> CMB23[1][10], 17.fifos -> CMB23[1][10]; nop);
        CP2( ; 2.config -> CMB18[1][11], 2.state -> CMB18[1][11], 2.fifos -> CMB18[1][11], 20.config -> CMB0[1][9], 20.state -> CMB0[1][9], 20.fifos -> CMB0[1][9]; nop);
        CP3( ; 3.config -> CMB19[1][11], 3.state -> CMB19[1][11], 3.fifos -> CMB19[1][11], 24.config -> CMB1[1][9], 24.state -> CMB1[1][9], 24.fifos -> CMB1[1][9]; nop);
        CP4( ; 4.config -> CMB20[1][11], 4.state -> CMB20[1][11], 4.fifos -> CMB20[1][11], 25.config -> CMB2[1][9], 25.state -> CMB2[1][9], 25.fifos -> CMB2[1][9]; nop);
        CP5( ; 7.config -> CMB21[1][11], 7.state -> CMB21[1][11], 7.fifos -> CMB21[1][11], 26.config -> CMB3[1][9], 26.state -> CMB3[1][9], 26.fifos -> CMB3[1][9]; nop);
        CP6( ; 6.config -> CMB22[1][11], 6.state -> CMB22[1][11], 6.fifos -> CMB22[1][11], CMB22[1][11] -> CP6.config, CMB22[1][11] -> CP6.state, CMB22[1][11] -> CP6.fifos; nop);
        CP7( ; 5.config -> CMB23[1][11], 5.state -> CMB23[1][11], 5.fifos -> CMB23[1][11], CMB23[1][11] -> CP7.config, CMB23[1][11] -> CP7.state, CMB23[1][11] -> CP7.fifos; nop);
        CP8( ; 9.config -> CMB0[1][10], 9.state -> CMB0[1][10], 9.fifos -> CMB0[1][10], CMB0[1][10] -> CP8.config, CMB0[1][10] -> CP8.state, CMB0[1][10] -> CP8.fifos; nop);
        CP9( ; 8.config -> CMB1[1][10], 8.state -> CMB1[1][10], 8.fifos -> CMB1[1][10], CMB1[1][10] -> CP9.config, CMB1[1][10] -> CP9.state, CMB1[1][10] -> CP9.fifos; nop);
        CP10( ; 22.config -> CMB2[1][10], 22.state -> CMB2[1][10], 22.fifos -> CMB2[1][10], CMB2[1][10] -> CP10.config, CMB2[1][10] -> CP10.state, CMB2[1][10] -> CP10.fifos; nop);
        CP11( ; 10.config -> CMB3[1][10], 10.state -> CMB3[1][10], 10.fifos -> CMB3[1][10], CMB3[1][10] -> CP11.config, CMB3[1][10] -> CP11.state, CMB3[1][10] -> CP11.fifos; nop);
        CP12( ; 23.config -> CMB4[1][10], 23.state -> CMB4[1][10], 23.fifos -> CMB4[1][10], CMB4[1][10] -> CP12.config, CMB4[1][10] -> CP12.state, CMB4[1][10] -> CP12.fifos; nop);
        CP13( ; 21.config -> CMB5[1][10], 21.state -> CMB5[1][10], 21.fifos -> CMB5[1][10], CMB5[1][10] -> CP13.config, CMB5[1][10] -> CP13.state, CMB5[1][10] -> CP13.fifos; nop);
        CP14( ; 11.config -> CMB6[1][10], 11.state -> CMB6[1][10], 11.fifos -> CMB6[1][10], CMB6[1][10] -> CP14.config, CMB6[1][10] -> CP14.state, CMB6[1][10] -> CP14.fifos; nop);
        CP15( ; 14.config -> CMB7[1][10], 14.state -> CMB7[1][10], 14.fifos -> CMB7[1][10], CMB7[1][10] -> CP15.config, CMB7[1][10] -> CP15.state, CMB7[1][10] -> CP15.fifos; nop);
        CP16( ; 28.config -> CMB8[1][10], 28.state -> CMB8[1][10], 28.fifos -> CMB8[1][10], CMB8[1][10] -> CP16.config, CMB8[1][10] -> CP16.state, CMB8[1][10] -> CP16.fifos; nop);
        CP17( ; 13.config -> CMB9[1][10], 13.state -> CMB9[1][10], 13.fifos -> CMB9[1][10], CMB9[1][10] -> CP17.config, CMB9[1][10] -> CP17.state, CMB9[1][10] -> CP17.fifos; nop);
        CP18( ; 12.config -> CMB10[1][10], 12.state -> CMB10[1][10], 12.fifos -> CMB10[1][10], CMB10[1][10] -> CP18.config, CMB10[1][10] -> CP18.state, CMB10[1][10] -> CP18.fifos; nop);
        CP19( ; 16.config -> CMB11[1][10], 16.state -> CMB11[1][10], 16.fifos -> CMB11[1][10], CMB11[1][10] -> CP19.config, CMB11[1][10] -> CP19.state, CMB11[1][10] -> CP19.fifos; nop);
        CP20( ; 15.config -> CMB12[1][10], 15.state -> CMB12[1][10], 15.fifos -> CMB12[1][10], CMB12[1][10] -> CP20.config, CMB12[1][10] -> CP20.state, CMB12[1][10] -> CP20.fifos; nop);
        CP21( ; 29.config -> CMB13[1][10], 29.state -> CMB13[1][10], 29.fifos -> CMB13[1][10], CMB13[1][10] -> CP21.config, CMB13[1][10] -> CP21.state, CMB13[1][10] -> CP21.fifos; nop);
        CP22( ; 27.config -> CMB14[1][10], 27.state -> CMB14[1][10], 27.fifos -> CMB14[1][10], CMB14[1][10] -> CP22.config, CMB14[1][10] -> CP22.state, CMB14[1][10] -> CP22.fifos; nop);
        CP23( ; 18.config -> CMB15[1][10], 18.state -> CMB15[1][10], 18.fifos -> CMB15[1][10], CMB15[1][10] -> CP23.config, CMB15[1][10] -> CP23.state, CMB15[1][10] -> CP23.fifos; nop);
        CMB0( ; ; nop, 34.data -> CMB0[0][0], CMB0.active = CMB0[0][0] as 34, 34.fifos -> CMB0[1][11], CMB0[1][11] -> CMB0.fifos);
        CMB1( ; ; nop, 35.data -> CMB1[0][0], CMB1.active = CMB1[0][0] as 35, 35.fifos -> CMB1[1][11], CMB1[1][11] -> CMB1.fifos);
        CMB2( ; ; nop, 33.data -> CMB2[0][0], CMB2.active = CMB2[0][0] as 33, 33.fifos -> CMB2[1][11], CMB2[1][11] -> CMB2.fifos);
        CMB3( ; ; nop, 30.data -> CMB3[0][0], CMB3.active = CMB3[0][0] as 30, 30.fifos -> CMB3[1][11], CMB3[1][11] -> CMB3.fifos);
        CMB4( ; ; nop, 40.data -> CMB4[0][0], CMB4.active = CMB4[0][0] as 40, 40.fifos -> CMB4[1][11], CMB4[1][11] -> CMB4.fifos);
        CMB5( ; ; nop, 41.data -> CMB5[0][0], CMB5.active = CMB5[0][0] as 41, 41.fifos -> CMB5[1][11], CMB5[1][11] -> CMB5.fifos);
        CMB6( ; ; nop, 42.data -> CMB6[0][0], CMB6.active = CMB6[0][0] as 42, 42.fifos -> CMB6[1][11], CMB6[1][11] -> CMB6.fifos);
        CMB7( ; ; nop, 43.data -> CMB7[0][0], CMB7.active = CMB7[0][0] as 43, 43.fifos -> CMB7[1][11], CMB7[1][11] -> CMB7.fifos);
        CMB8( ; ; nop, 44.data -> CMB8[0][0], CMB8.active = CMB8[0][0] as 44, 44.fifos -> CMB8[1][11], CMB8[1][11] -> CMB8.fifos);
        CMB9( ; ; nop, 45.data -> CMB9[0][0], CMB9.active = CMB9[0][0] as 45, 45.fifos -> CMB9[1][11], CMB9[1][11] -> CMB9.fifos);
        CMB10( ; ; nop, 46.data -> CMB10[0][0], CMB10.active = CMB10[0][0] as 46, 46.fifos -> CMB10[1][11], CMB10[1][11] -> CMB10.fifos);
        CMB11( ; ; nop, 47.data -> CMB11[0][0], CMB11.active = CMB11[0][0] as 47, 47.fifos -> CMB11[1][11], CMB11[1][11] -> CMB11.fifos);
        CMB12( ; ; nop, 48.data -> CMB12[0][0], CMB12.active = CMB12[0][0] as 48, 48.fifos -> CMB12[1][11], CMB12[1][11] -> CMB12.fifos);
        CMB13( ; ; nop, 49.data -> CMB13[0][0], CMB13.active = CMB13[0][0] as 49, 49.fifos -> CMB13[1][11], CMB13[1][11] -> CMB13.fifos);
        CMB14( ; ; nop, 50.data -> CMB14[0][0], CMB14.active = CMB14[0][0] as 50, 50.fifos -> CMB14[1][11], CMB14[1][11] -> CMB14.fifos);
        CMB15( ; ; nop, 51.data -> CMB15[0][0], CMB15.active = CMB15[0][0] as 51, 51.fifos -> CMB15[1][11], CMB15[1][11] -> CMB15.fifos);
        CMB16( ; ; 31.data -> CMB16[0][0], CMB16.active = CMB16[0][0] as 31, 31.fifos -> CMB16[1][10], CMB16[1][10] -> CMB16.fifos);
        CMB17( ; ; 32.data -> CMB17[0][0], CMB17.active = CMB17[0][0] as 32, 32.fifos -> CMB17[1][10], CMB17[1][10] -> CMB17.fifos);
        CMB18( ; ; 36.data -> CMB18[0][0], CMB18.active = CMB18[0][0] as 36, 36.fifos -> CMB18[1][10], CMB18[1][10] -> CMB18.fifos);
        CMB19( ; ; 37.data -> CMB19[0][0], CMB19.active = CMB19[0][0] as 37, 37.fifos -> CMB19[1][10], CMB19[1][10] -> CMB19.fifos);
        CMB20( ; ; 38.data -> CMB20[0][0], CMB20.active = CMB20[0][0] as 38, 38.fifos -> CMB20[1][10], CMB20[1][10] -> CMB20.fifos);
        CMB21( ; ; 39.data -> CMB21[0][0], CMB21.active = CMB21[0][0] as 39, 39.fifos -> CMB21[1][10], CMB21[1][10] -> CMB21.fifos);
    }
    timeslice 0 {
        CP0(0 ; start(CP0), connect(CP0.output0, CP1.input0), CMB16[1][11] -> CP0.config, CMB16[1][11] -> CP0.state, CMB16[1][11] -> CP0.fifos; nop, CP0.state -> CMB16[1][11], CP0.fifos -> CMB16[1][11]);
        CP1(1 ; start(CP1), connect(CP1.output0, CMB8.input0), connect(CP1.output1, CMB9.input0), connect(CP1.output2, CMB10.input0), CMB17[1][11] -> CP1.config, CMB17[1][11] -> CP1.state, CMB17[1][11] -> CP1.fifos; nop, CP1.state -> CMB17[1][11], CP1.fifos -> CMB17[1][11]);
        CP2(2 ; start(CP2), connect(CP2.output0, CP3.input0), connect(CP2.output1, CMB11.input0), CMB18[1][11] -> CP2.config, CMB18[1][11] -> CP2.state, CMB18[1][11] -> CP2.fifos; nop, CP2.state -> CMB18[1][11], CP2.fifos -> CMB18[1][11]);
        CP3(3 ; start(CP3), connect(CP3.output0, CP4.input0), connect(CP3.output1, CP5.input0), CMB19[1][11] -> CP3.config, CMB19[1][11] -> CP3.state, CMB19[1][11] -> CP3.fifos; nop, CP3.state -> CMB19[1][11], CP3.fifos -> CMB19[1][11]);
        CP4(4 ; start(CP4), connect(CP4.output0, CP7.input0), connect(CP4.output1, CP7.input1), connect(CP4.output2, CP7.input2), CMB20[1][11] -> CP4.config, CMB20[1][11] -> CP4.state, CMB20[1][11] -> CP4.fifos; nop, CP4.state -> CMB20[1][11], CP4.fifos -> CMB20[1][11]);
        CP5(7 ; start(CP5), connect(CP5.output0, CP9.input0), connect(CP5.output1, CP9.input1), connect(CP5.output2, CP9.input2), CMB21[1][11] -> CP5.config, CMB21[1][11] -> CP5.state, CMB21[1][11] -> CP5.fifos; nop, CP5.state -> CMB21[1][11], CP5.fifos -> CMB21[1][11]);
        CP6(6 ; start(CP6), connect(CP6.output0, CP10.input0), connect(CP6.output1, CP7.input3); );
        CP7(5 ; start(CP7), connect(CP7.output0, CP11.input0), connect(CP7.output1, CP6.input0); );
        CP8(9 ; start(CP8), connect(CP8.output0, CP12.input0), connect(CP8.output1, CP9.input3); );
        CP9(8 ; start(CP9), connect(CP9.output0, CP13.input0), connect(CP9.output1, CP8.input0); );
        CP10(22 ; start(CP10), connect(CP10.output0, CMB0.input0); );
        CP11(10 ; start(CP11), connect(CP11.output0, CP14.input0), connect(CP11.output1, CP15.input0); );
        CP12(23 ; start(CP12), connect(CP12.output0, CMB1.input0); );
        CP13(21 ; start(CP13), connect(CP13.output0, CMB2.input0); );
        CP14(11 ; start(CP14), connect(CP14.output0, CP18.input0), connect(CP14.output1, CP18.input1), connect(CP14.output2, CP18.input2); );
        CP15(14 ; start(CP15), connect(CP15.output0, CP20.input0), connect(CP15.output1, CP20.input1), connect(CP15.output2, CP20.input2); );
        CP16(28 ; start(CP16), connect(CP16.output0, CMB5.input0); );
        CP17(13 ; start(CP17), connect(CP17.output0, CMB12.input0), connect(CP17.output1, CP18.input3); );
        CP18(12 ; start(CP18), connect(CP18.output0, CMB13.input0), connect(CP18.output1, CP17.input0); );
        CP19(16 ; start(CP19), connect(CP19.output0, CMB14.input0), connect(CP19.output1, CP20.input3); );
        CP20(15 ; start(CP20), connect(CP20.output0, CP23.input0), connect(CP20.output1, CP19.input0); );
        CP21(29 ; start(CP21), connect(CP21.output0, CMB6.input0); );
        CP22(27 ; start(CP22), connect(CP22.output0, CMB4.input0); );
        CP23(18 ; start(CP23), connect(CP23.output0, CMB3.input0); );
        CMB0(34 in this[0][0] ; start(CMB0), connect(CMB0.output0, CP16.input0); );
        CMB1(35 in this[0][0] ; start(CMB1), connect(CMB1.output0, CP21.input0); );
        CMB2(33 in this[0][0] ; start(CMB2), connect(CMB2.output0, CP22.input0); );
        CMB3(30 in this[0][0] ; start(CMB3), connect(CMB3.output0, CMB15.input0); );
        CMB4(40 in this[0][0] ; CMB4.mode = seqsrcsink, detect_full(CMB4), start(CMB4); );
        CMB5(41 in this[0][0] ; CMB5.mode = seqsrcsink, detect_full(CMB5), start(CMB5); );
        CMB6(42 in this[0][0] ; CMB6.mode = seqsrcsink, detect_full(CMB6), start(CMB6); );
        CMB7(43 in this[0][0] ; CMB7.mode = seqsrcsink, detect_empty(CMB7), start(CMB7), connect(CMB7.output0, CP0.input0); );
        CMB8(44 in this[0][0] ; CMB8.mode = seqsrcsink, start(CMB8), connect(CMB8.output0, CP2.input0); );
        CMB9(45 in this[0][0] ; CMB9.mode = seqsrcsink, start(CMB9), connect(CMB9.output0, CP2.input1); );
        CMB10(46 in this[0][0] ; CMB10.mode = seqsrcsink, start(CMB10), connect(CMB10.output0, CP2.input2); );
        CMB11(47 in this[0][0] ; CMB11.mode = seqsrcsink, start(CMB11), connect(CMB11.output0, CP2.input3); );
        CMB12(48 in this[0][0] ; CMB12.mode = seqsink, start(CMB12); );
        CMB13(49 in this[0][0] ; CMB13.mode = seqsink, start(CMB13); );
        CMB14(50 in this[0][0] ; CMB14.mode = seqsink, detect_full(CMB14), start(CMB14); );
        CMB15(51 in this[0][0] ; CMB15.mode = seqsink, start(CMB15); );
        CMB16( ; ; nop);
        CMB17( ; ; nop);
        CMB18( ; ; nop);
        CMB19( ; ; nop);
        CMB20( ; ; nop);
        CMB21( ; ; nop);
    }

    timeslice 1 {
        CP0(19 ; CMB22[1][10] -> CP0.config, CMB22[1][10] -> CP0.state, CMB22[1][10] -> CP0.fifos, start(CP0), connect(CP0.output0, CMB16.input0); nop, CP0.state -> CMB22[1][10], CP0.fifos -> CMB22[1][10]);
        CP1(17 ; CMB23[1][10] -> CP1.config, CMB23[1][10] -> CP1.state, CMB23[1][10] -> CP1.fifos, start(CP1), connect(CP1.output0, CMB18.input0); nop, CP1.state -> CMB23[1][10], CP1.fifos -> CMB23[1][10]);
        CP2(20 ; CMB0[1][9] -> CP2.config, CMB0[1][9] -> CP2.state, CMB0[1][9] -> CP2.fifos, start(CP2), connect(CP2.output0, CMB17.input0); nop, CP2.state -> CMB0[1][9], CP2.fifos -> CMB0[1][9]);
        CP3(24 ; CMB1[1][9] -> CP3.config, CMB1[1][9] -> CP3.state, CMB1[1][9] -> CP3.fifos, start(CP3), connect(CP3.output0, CMB19.input0); nop, CP3.state -> CMB1[1][9], CP3.fifos -> CMB1[1][9]);
        CP4(25 ; CMB2[1][9] -> CP4.config, CMB2[1][9] -> CP4.state, CMB2[1][9] -> CP4.fifos, start(CP4), connect(CP4.output0, CMB20.input0); nop, CP4.state -> CMB2[1][9], CP4.fifos -> CMB2[1][9]);
        CP5(26 ; CMB3[1][9] -> CP5.config, CMB3[1][9] -> CP5.state, CMB3[1][9] -> CP5.fifos, start(CP5), connect(CP5.output0, CMB21.input0); nop, CP5.state -> CMB3[1][9], CP5.fifos -> CMB3[1][9]);
        CP6( ; ; nop);
        CP7( ; ; nop);
        CP8( ; ; nop);
        CP9( ; ; nop);
        CP10( ; ; nop);
        CP11( ; ; nop);
        CP12( ; ; nop);
        CP13( ; ; nop);
        CP14( ; ; nop);
        CP15( ; ; nop);
        CP16( ; ; nop);
        CP17( ; ; nop);
        CP18( ; ; nop);
        CP19( ; ; nop);
        CP20( ; ; nop);
        CP21( ; ; nop);
        CP22( ; ; nop);
        CP23( ; ; nop);
        CMB0( ; ; nop);
        CMB1( ; ; nop);
        CMB2( ; ; nop);
        CMB3( ; ; nop);
        CMB4( ; ; nop);
        CMB5( ; ; nop);
        CMB6( ; ; nop);
        CMB7( ; ; nop);
        CMB8( ; ; nop);
        CMB9( ; ; nop);
        CMB10( ; ; nop);
        CMB11( ; ; nop);
        CMB12(48 in this[0][0] ; CMB12.mode = seqsrcsink, start(CMB12), connect(CMB12.output0, CP0.input0); nop);
        CMB13(49 in this[0][0] ; CMB13.mode = seqsrcsink, start(CMB13), connect(CMB13.output0, CP1.input0); nop);
        CMB14(50 in this[0][0] ; CMB14.mode = seqsrcsink, start(CMB14), connect(CMB14.output0, CP2.input0); nop);
        CMB15(51 in this[0][0] ; CMB15.mode = seqsrcsink, detect_empty(CMB15), start(CMB15), connect(CMB15.output0, CP3.input0); nop);
        CMB16(31 in this[0][0] ; start(CMB16), connect(CMB16.output0, CP4.input0); nop);
        CMB17(32 in this[0][0] ; start(CMB17), connect(CMB17.output0, CP5.input0); nop);
        CMB18(36 in this[0][0] ; CMB18.mode = seqsrcsink, detect_full(CMB18), start(CMB18); nop);
        CMB19(37 in this[0][0] ; CMB19.mode = seqsrcsink, detect_full(CMB19), start(CMB19); nop);
        CMB20(38 in this[0][0] ; CMB20.mode = seqsrcsink, detect_full(CMB20), start(CMB20); nop);
        CMB21(39 in this[0][0] ; CMB21.mode = seqsrcsink, detect_full(CMB21), start(CMB21); nop);
        CMB22( ; ; nop);
        CMB23( ; ; nop);
    }

}
