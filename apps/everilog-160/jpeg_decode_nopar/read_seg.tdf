//////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 1999 The Regents of the University of California 
// Permission to use, copy, modify, and distribute this software and
// its documentation for any purpose, without fee, and without a
// written agreement is hereby granted, provided that the above copyright 
// notice and this paragraph and the following two paragraphs appear in
// all copies. 
//
// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
// DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
// LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
// EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. 
//
// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON
// AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO
// PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. 
//
// $Revision: 1.1 $
// $Date: 2000/12/30 20:12:38 $
//
//////////////////////////////////////////////////////////////////////////////


read_seg(output unsigned[6] addr_a, output unsigned[6] addr_b,
	 output boolean write_a, 
	 output boolean write_b, input unsigned[6] zindex)

{

  unsigned[8] index=0;
  unsigned[8] bigIndex=0;
  boolean phase = true;
  boolean init = true;
  boolean final = false;

  state uno(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto dos;
    }
  state dos(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto tres;
    }
  state tres(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto cuatro;
    }
  state cuatro(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto cinco;
    }
  state cinco(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto seis;
    }
  state seis(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto siete;
    }
  state siete(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      index = index+1;
      goto ocho;
    }
  state ocho(zindex):
    {
      if (phase) {
	if (final == false) {
	  addr_a = zindex; write_a = true;
	}
	if (init == false) {
	  addr_b = index; write_b = false;
	}
      } else {
	addr_b = zindex; write_b = true;
	//if (final == false) {
	  addr_a = index; write_a = false;
	//}
      }
      if (index == 63) { // finished a macroblock?
	index = 0;
	if (phase) {
	  phase = false;
	} else {
	  phase = true;
	}
	init = false;
	if (bigIndex == 4095) { // finished the image?
	  final = true;
	}
	bigIndex = bigIndex+1;
      } else {
	index = index+1;
      }

      goto uno;
    }

}
	  


