warning: preprocess dynamic.tdf...
dynamic.tdf:14: at "=": warning: assignment from type unsigned[8] to type unsigned[7] may lose information
dynamic.tdf:32: at "=": warning: assignment from type signed[17] to type signed[16] may lose information
dynamic.tdf:33: at "=": warning: assignment from type signed[17] to type signed[16] may lose information
dynamic.tdf:33: at "=": warning: assignment from type unsigned[9] to type unsigned[8] may lose information
// operator ZLE
// operator Sigma
// operator gcd
// operator switch
// operator select
// operator select_v2

ZLE (input signed[8] a, output signed[8] o)
{
  unsigned[7] cnt=0;

  state nopend (a) :
    if (a==0)
      {
        cnt=1;
        goto zero;
      }
    else
      o=a;

  state pending (a) :
    if (a==0)
      {
        cnt=1;
        o=a@1;
        goto zero;
      }
    else
      {
        o=a@1;
        stay;
      }

  state zero (a) :
    if (a==0)
      if (cnt==(5-1))
        {
          o=5|64;
          stay;
        }
      else
        cnt=cnt+1;
    else
      if (cnt>0)
        {
          o=cnt|64;
          goto pending;
        }
      else
        {
          o=a;
          goto nopend;
        }
}

Sigma (input signed[8] a, input unsigned[8] cnt, output signed[16] sum)
{
  signed[16] csum=0;
  unsigned[8] ccnt=0;

  state start (cnt) :
    if (cnt==0)
      {
        sum=0;
        stay;
      }
    else
      {
        ccnt=cnt;
        goto consume;
      }

  state consume (a) :
    if (ccnt==1)
      {
        sum=csum+a;
        goto start;
      }
    else
      {
        csum=csum+a;
        ccnt=ccnt-1;
        stay;
      }
}

gcd (input signed[16] a, input signed[16] b, output signed[16] o)
{
  signed[16] high=0;
  signed[16] low=0;

  state start (a,b) :
    if (a==0)
      {
        o=b;
        stay;
      }
    else
      if (b==0)
        {
          o=a;
          stay;
        }
      else
        if (a==b)
          {
            o=a;
            stay;
          }
        else
          {
            if (a>b)
              {
                high=a;
                low=b;
              }
            else
              {
                high=b;
                low=a;
              }
            goto iter;
          }

  state iter () :
    if (low==0)
      {
        o=high;
        goto start;
      }
    else
      {
        signed[16] tmp=high;
        high=low;
        low=tmp%low;
        stay;
      }
}

switch (input signed[16] in, input boolean sel, output signed[16] a, output signed[16] b)
{
  state start (sel,in) :
    if (sel)
      a=in;
    else
      b=in;
}

select (input signed[16] a, input signed[16] b, input boolean sel, output signed[16] o)
{
  state start (sel) :
    if (sel)
      goto getA;
    else
      goto getB;

  state getA (a) :
    {
      o=a;
      goto start;
    }

  state getB (b) :
    {
      o=b;
      goto start;
    }
}

select_v2 (input signed[16] a, input signed[16] b, input boolean sel, output signed[16] o)
{
  state start (sel) :
    if (sel)
      goto getA;
    else
      goto getB;

  state getA (a,sel) :
    {
      o=a;
      if (sel)
        stay;
      else
        goto getB;
    }

  state getA (a) :
    {
      o=a;
      goto start;
    }

  state getB (b,sel) :
    {
      o=b;
      if (sel)
        goto getA;
      else
        stay;
    }

  state getB (b) :
    {
      o=b;
      goto start;
    }
}

warning: Exiting...
